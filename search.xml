<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Docker离线安装</title>
      <link href="/2019/08/01/docker/2019-08-01-docker%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/"/>
      <url>/2019/08/01/docker/2019-08-01-docker%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker离线安装"><a href="#Docker离线安装" class="headerlink" title="Docker离线安装"></a>Docker离线安装</h1><h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><p>安装步骤如下：</p><ul><li>（1）拷贝docker 到 /usr/bin</li><li>（2）修改Docker存储路径</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service docker stop</span><br><span class="line">cd /var/lib/</span><br><span class="line">mv docker/*/home/dockerfile</span><br><span class="line">rm -rf docker</span><br></pre></td></tr></table></figure><ul><li>(3)进入/home/dockerfile创建软连接<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s/home/dockerfile/ /var/lib/docker</span><br><span class="line">service docker start</span><br></pre></td></tr></table></figure></li></ul><h2 id="开启远程访问"><a href="#开启远程访问" class="headerlink" title="开启远程访问"></a>开启远程访问</h2><p>打开服务配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /lib/systemd/system/docker.service</span><br></pre></td></tr></table></figure><p>在文件中添加以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Docker Application Container Engine</span><br><span class="line">Documentation=https://docs.docker.com</span><br><span class="line">After=network-online.target firewalld.service</span><br><span class="line">Wants=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line"># the default is not to use systemd for cgroups because the delegate issues still</span><br><span class="line"># exists and systemd currently does not support the cgroup feature set required</span><br><span class="line"># for containers run by docker</span><br><span class="line">ExecStart=/usr/bin/dockerd</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line"># Having non-zero Limit*s causes performance problems due to accounting overhead</span><br><span class="line"># in the kernel. We recommend using cgroups to do container-local accounting.</span><br><span class="line">LimitNOFILE=infinity</span><br><span class="line">LimitNPROC=infinity</span><br><span class="line">LimitCORE=infinity</span><br><span class="line"># Uncomment TasksMax if your systemd version supports it.</span><br><span class="line"># Only systemd 226 and above support this version.</span><br><span class="line">#TasksMax=infinity</span><br><span class="line">TimeoutStartSec=0</span><br><span class="line"># set delegate yes so that systemd does not reset the cgroups of docker containers</span><br><span class="line">Delegate=yes</span><br><span class="line"># kill only the docker process, not all processes in the cgroup</span><br><span class="line">KillMode=process</span><br><span class="line"># restart the docker process if it exits prematurely</span><br><span class="line">Restart=on-failure</span><br><span class="line">StartLimitBurst=3</span><br><span class="line">StartLimitInterval=60s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ExecStart=</span><br><span class="line">ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix://var/run/docker.sock</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h2 id="开启docker随系统启动模式"><a href="#开启docker随系统启动模式" class="headerlink" title="开启docker随系统启动模式"></a>开启docker随系统启动模式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure><h2 id="配置仓库管理地址"><a href="#配置仓库管理地址" class="headerlink" title="配置仓库管理地址"></a>配置仓库管理地址</h2><p>这个步骤主要用于开启docker 仓库，如果您不需要将服务器作为docker仓库，可以跳过这个步骤。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &apos;export DOCKER_HOST=tcp://0.0.0.0:2375&apos; &gt;&gt; /etc/profile </span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h2 id="创建docker仓库"><a href="#创建docker仓库" class="headerlink" title="创建docker仓库"></a>创建docker仓库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull registry</span><br><span class="line">docker run -d -p 5000:5000 --restart=always --privileged=true -v /opt/registry:/tmp/registry registry</span><br></pre></td></tr></table></figure><h2 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h2><ul><li>-d<br>  后台执行</li><li>-p<br>  端口映射, 宿主机80端口映射给容器的5000端口</li><li>–restart=always<br>  容器意外关闭后, 自动重启(如果重启docker服务, 带这个参数的, 能自动启动为Up状态, 不带这个的,不会自动启动)</li><li>-v /opt/registry:/tmp/registry<br>  默认情况下，会将仓库存放于容器内的/tmp/registry目录下，指定本地目录挂载到容器</li><li>-privileged=true<br>  在CentOS7中，安全模块selinux把权限禁掉了，参数给容器加特权，如果不加上这个参数，在传镜像的过程中会报权限错误(OSError: [Errno 13] Permission denied: ‘/tmp/registry/repositories/liibrary’)或者（Received unexpected HTTP status: 500 Internal Server Error）</li></ul><h2 id="镜像仓库配置"><a href="#镜像仓库配置" class="headerlink" title="镜像仓库配置"></a>镜像仓库配置</h2><p>修改/etc/sysconfig/docker，在已有参数的在后面追加增加以下启动选项 ，保存并重启docker。</p><ul><li>CentOS 7系统 OPTIONS=’–insecure-registry 192.168.44.240:5000’    </li><li>CentOS 6系统 other_args=’–insecure-registry 192.168.44.240:5000’<br>通过修改以上配置，让你的私有仓库支持 http，因为从 docker1.3.2 开始，docker registry 默认都是使用 https 协议而不使用 http</li></ul>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>清除docker无用镜像</title>
      <link href="/2019/07/31/docker/2019-07-31-%E6%B8%85%E9%99%A4docker%E6%97%A0%E7%94%A8%E9%95%9C%E5%83%8F/"/>
      <url>/2019/07/31/docker/2019-07-31-%E6%B8%85%E9%99%A4docker%E6%97%A0%E7%94%A8%E9%95%9C%E5%83%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="清除docker无用镜像"><a href="#清除docker无用镜像" class="headerlink" title="清除docker无用镜像"></a>清除docker无用镜像</h1><p>在docker镜像列表中我们经常会看到一堆tag为 &lt;none&gt; 的镜像，已经没有在使用，但随着提交次数增加，这些僵尸的占用了大量的磁盘空间，有必要做一次清理。<br>可以使用以下命令清理none镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi -f $(docker images | grep &quot;&lt;none&gt;&quot; | awk &quot;&#123;print \$3&#125;&quot;)</span><br></pre></td></tr></table></figure><p>使用以下命令清理已经停止运行的docker容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm $(docker ps --all -q -f status=exited)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.13 Springboot&amp;VUE开发实践（SpringBoot用户权限）</title>
      <link href="/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.13SpringBoot%20%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%EF%BC%89/"/>
      <url>/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.13SpringBoot%20%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1-13-前端用户权限"><a href="#1-13-前端用户权限" class="headerlink" title="1.13    前端用户权限"></a>1.13    前端用户权限</h2><p>在用户登陆成功后将用户信息保存到session中，并在后续的访问过程中进行验证以及有针对用户和功能的权限过滤。</p><ul><li><p>(1)    用户授权</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@ApiOperation</span>(value = <span class="string">"登录接口"</span>, notes = <span class="string">"用户登录接口，登录之后才可访问其他接口"</span>)</span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/login"</span>,method = RequestMethod.POST)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ResponseData <span class="title">login</span><span class="params">(UserLoginVo userLoginVo, HttpSession session)</span> </span>&#123;</span><br><span class="line">    String username = userLoginVo.getUsername();</span><br><span class="line">    String password = userLoginVo.getPassword();</span><br><span class="line">    SysUser sysUser = sysUserService.findByKeyword(username);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isBlank(username)) &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseData.errorMessage(<span class="string">"用户名不能为空"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (StringUtils.isBlank(password)) &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseData.errorMessage(<span class="string">"登陆密码不能为空"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (sysUser == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseData.errorMessage(<span class="string">"查询不到指定用户"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!sysUser.getPassword().equals(MD5Util.encode(password))) &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseData.errorMessage(<span class="string">"用户名或密码错误"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (sysUser.getState() != <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseData.errorMessage(<span class="string">"用户已被冻结，请联系管理员"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;    <span class="comment">// LOGIN SUCCESS</span></span><br><span class="line">        List&lt;SysRole&gt; roles = sysRoleUserService.getRoleListByUserId(sysUser.getId());</span><br><span class="line">        List&lt;SysAcl&gt; acls = sysCoreService.getAclListByUserId(sysUser.getId());</span><br><span class="line">        List&lt;SysAcl&gt; deniedAcls = sysCoreService.getDeniedAclListByUserId(sysUser.getId());</span><br><span class="line">        UserVo userVo = <span class="keyword">new</span> UserVo();</span><br><span class="line">        BeanUtils.copyProperties(sysUser, userVo);</span><br><span class="line"></span><br><span class="line">        userVo.setRoles(roles);</span><br><span class="line">        userVo.setAcls(acls);</span><br><span class="line">        userVo.setDeniedAcls(deniedAcls);</span><br><span class="line"></span><br><span class="line">        session.setAttribute(<span class="string">"user"</span>, userVo);</span><br><span class="line">    &#125;</span><br><span class="line">    Map&lt;String, String&gt; tokenMap = <span class="keyword">new</span> HashMap&lt;String,String&gt;();</span><br><span class="line">    tokenMap.put(<span class="string">"token"</span>, session.getId());</span><br><span class="line">    tokenMap.put(<span class="string">"userId"</span>, sysUser.getId());</span><br><span class="line">    <span class="keyword">return</span> ResponseData.success(tokenMap);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>(2)    安全过滤<br>SpringBoot使用过滤器验证当前会话是否已经登陆过，并针对要访问的路径进行权限验证。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.zone7.admin.config.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Sets;</span><br><span class="line"><span class="keyword">import</span> com.zone7.admin.commons.response.ResponseCode;</span><br><span class="line"><span class="keyword">import</span> com.zone7.admin.commons.response.ResponseData;</span><br><span class="line"><span class="keyword">import</span> com.zone7.admin.sys.common.RequestHolder;</span><br><span class="line"><span class="keyword">import</span> com.zone7.admin.sys.pojo.SysAcl;</span><br><span class="line"><span class="keyword">import</span> com.zone7.admin.sys.vo.UserVo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebFilter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * RequestFilter</span></span><br><span class="line"><span class="comment"> * 请求过滤器</span></span><br><span class="line"><span class="comment"> * 安全认证</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: zone7</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@time</span>: 2019.02.19</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebFilter</span>(filterName = <span class="string">"RequestFilter"</span>, urlPatterns = <span class="string">"/*"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Set&lt;String&gt; URL_WHITE_LIST = Sets.newHashSet();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        <span class="comment">//忽略不过旅的路径</span></span><br><span class="line">        URL_WHITE_LIST.add(<span class="string">"/unauth"</span>);</span><br><span class="line">        URL_WHITE_LIST.add(<span class="string">"/login"</span>);</span><br><span class="line">        URL_WHITE_LIST.add(<span class="string">"/static"</span>);</span><br><span class="line">        URL_WHITE_LIST.add(<span class="string">"/actuator"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isWhiteUrl</span><span class="params">(String requestUrl)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (URL_WHITE_LIST.contains(requestUrl))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(String str:URL_WHITE_LIST)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(requestUrl.startsWith(str))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) servletRequest;</span><br><span class="line">        HttpServletResponse response = (HttpServletResponse) servletResponse;</span><br><span class="line">        String requestUrl = request.getRequestURI();</span><br><span class="line">        <span class="keyword">if</span> (isWhiteUrl(requestUrl)) &#123;</span><br><span class="line">            filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        UserVo userVo = (UserVo) request.getSession().getAttribute(<span class="string">"user"</span>);</span><br><span class="line">        <span class="keyword">if</span> (userVo == <span class="keyword">null</span>) &#123;</span><br><span class="line">            request.getRequestDispatcher(<span class="string">"/unauth"</span>).forward(request, response);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        RequestHolder.add(userVo);</span><br><span class="line">        RequestHolder.add(request);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果有配置按钮权限，就验证，没有配置表示可以使用</span></span><br><span class="line">        <span class="comment">//DeniedAcls为禁用的权限列表</span></span><br><span class="line">        List&lt;SysAcl&gt; acls = userVo.getDeniedAcls();</span><br><span class="line">        <span class="keyword">boolean</span> hasPower=<span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(SysAcl acl:acls)&#123;</span><br><span class="line">            <span class="keyword">if</span>(acl.getUrl().equals(requestUrl) || (<span class="string">"/"</span>+acl.getUrl()).equals(requestUrl))&#123;</span><br><span class="line">                hasPower = <span class="keyword">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!hasPower)&#123;</span><br><span class="line">            ResponseData res = ResponseData.error(ResponseCode.ERROR_LOGIN_NOAUTH_ACL);</span><br><span class="line">            String json = JSON.toJSONString(res);</span><br><span class="line">            response.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">            response.setHeader(<span class="string">"Content-type"</span>,<span class="string">"application/json"</span>);</span><br><span class="line">            response.getWriter().println(json);</span><br><span class="line">            response.getWriter().flush();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> springboot&amp;vue前后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> VUE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3 Springboot&amp;VUE开发实践（前后端整合开发）</title>
      <link href="/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%883%20%E5%89%8D%E5%90%8E%E7%AB%AF%E6%95%B4%E5%90%88%E5%BC%80%E5%8F%91%EF%BC%89/"/>
      <url>/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%883%20%E5%89%8D%E5%90%8E%E7%AB%AF%E6%95%B4%E5%90%88%E5%BC%80%E5%8F%91%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="3-SpringBoot-VUE案例开发"><a href="#3-SpringBoot-VUE案例开发" class="headerlink" title="3    SpringBoot+VUE案例开发"></a>3    SpringBoot+VUE案例开发</h1><p>经过对SpringBoot及VUE的学习，我们已经对他们的开发流程有了一定的了解，我们将这两个框架进行整合，并实现一个简单的前后的开发案例“HelloWorld”。这个案例我们主要实现：（1）系统的登陆、退出；（2）用户的查询、新增、修改、删除。系统架构如下图所示：<br>  <img src="https://zone-7.github.io/img/springboot/3.png" alt="3架构"> </p><p>从架构图中可以看到前端UI采用VUE框架开发， vue框架整合了mock、validator、vuex等组件。后端包括：控制层、业务服务层和数据访问层，基于SpringBoot2开发，控制层主要实现了rest的http服务以及权限控制；业务服务层主要用于实现业务逻辑，同时也具备了日志、事物、缓存等功能；数据访问层采用mybatis框架实现。本节案例开发采用mysql作为数据库。</p><h2 id="3-1-后端开发"><a href="#3-1-后端开发" class="headerlink" title="3.1    后端开发"></a>3.1    后端开发</h2><h3 id="3-1-1-创建工程"><a href="#3-1-1-创建工程" class="headerlink" title="3.1.1    创建工程"></a>3.1.1    创建工程</h3><p>后端框架采用SpringBoot2+mybatis+redis整合框架开发，可以参照我们在SpringBoot开发的第一个工程，我们创建一个helloworld的后端工程。结构如下：<br>  <img src="https://zone-7.github.io/img/springboot/3.1.1.png" alt="创建工程"> </p><h3 id="3-1-2-工程配置"><a href="#3-1-2-工程配置" class="headerlink" title="3.1.2    工程配置"></a>3.1.2    工程配置</h3><p>SpringBoot工程的主要配置文件包括maven的POM文件和application.properties配置文件。</p><p>pom文件内容为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>helloworld<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">lombok.version</span>&gt;</span>1.16.18<span class="tag">&lt;/<span class="name">lombok.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commons-lang3.version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">commons-lang3.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commons-collections.version</span>&gt;</span>3.2.1<span class="tag">&lt;/<span class="name">commons-collections.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">redis.version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">redis.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fastjson.version</span>&gt;</span>1.2.21<span class="tag">&lt;/<span class="name">fastjson.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">swagger2.version</span>&gt;</span>2.2.2<span class="tag">&lt;/<span class="name">swagger2.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">oracle.version</span>&gt;</span>11.2.0.3<span class="tag">&lt;/<span class="name">oracle.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mysql.version</span>&gt;</span>8.0.11<span class="tag">&lt;/<span class="name">mysql.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">druid-starte.version</span>&gt;</span>1.1.1<span class="tag">&lt;/<span class="name">druid-starte.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">junit.version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">junit.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">log4j.version</span>&gt;</span>1.2.15<span class="tag">&lt;/<span class="name">log4j.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">net.minidev.json-smart.version</span>&gt;</span>2.2.1<span class="tag">&lt;/<span class="name">net.minidev.json-smart.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">net.minidev.asm.version</span>&gt;</span>1.0.2<span class="tag">&lt;/<span class="name">net.minidev.asm.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">httpclient.version</span>&gt;</span>4.5.2<span class="tag">&lt;/<span class="name">httpclient.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">shiro.version</span>&gt;</span>1.4.0<span class="tag">&lt;/<span class="name">shiro.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">shiro-redis.version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">shiro-redis.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mybatis-spring.version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">mybatis-spring.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mybatis-mapper.version</span>&gt;</span>3.4.0<span class="tag">&lt;/<span class="name">mybatis-mapper.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mybatis-pagehelper.version</span>&gt;</span>1.2.10<span class="tag">&lt;/<span class="name">mybatis-pagehelper.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">guava.version</span>&gt;</span>18.0<span class="tag">&lt;/<span class="name">guava.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jwt.verson</span>&gt;</span>0.9.0<span class="tag">&lt;/<span class="name">jwt.verson</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">docker.host</span>&gt;</span>http://127.0.0.1:2375<span class="tag">&lt;/<span class="name">docker.host</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">docker.repostory</span>&gt;</span>127.0.0.1:5000<span class="tag">&lt;/<span class="name">docker.repostory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">docker.registry.name</span>&gt;</span>zone7<span class="tag">&lt;/<span class="name">docker.registry.name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">docker.plugin.version</span>&gt;</span>0.4.13<span class="tag">&lt;/<span class="name">docker.plugin.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">skipDockerBuild</span>&gt;</span>false<span class="tag">&lt;/<span class="name">skipDockerBuild</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 移除嵌入式tomcat插件，需要增加servlet-api，打包时打开注解 --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--&lt;exclusion&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--&lt;artifactId&gt;spring-boot-starter-tomcat&lt;/artifactId&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--&lt;/exclusion&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 移除springboot自带的logback日志管理 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 移除嵌入式tomcat插件，需要增加servlet-api，打包时打开注解 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;dependency&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;groupId&gt;javax.servlet&lt;/groupId&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;version&gt;3.1.0&lt;/version&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;scope&gt;provided&lt;/scope&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;/dependency&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 引入依赖之后spring.aop.auto默认开启，不需要添加@EnableAspectJAutoProxy来启动 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-cache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--安全验证相关--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security.oauth<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-oauth2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.14.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security.oauth.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-oauth2-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-jwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.10.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--解析JWT--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jwt.verson&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 安全相关  --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- log4j2日志管理 (springboot1.4以上不支持log4j) --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-log4j2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lmax<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>disruptor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- log4j2日志管理--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--junit--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.minidev<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>json-smart<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.minidev<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>asm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;junit.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--junit--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- mybatis --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis-spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- mybatis --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- mybatis通用mapper --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>tk.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis-mapper.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- mybatis通用mapper --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- mybatis pagehelper --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis-pagehelper.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- mybatis pagehelper --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--druid--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;druid-starte.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--druid--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--fastjson--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;fastjson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--fastjson--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--oracle--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.oracle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ojdbc6<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;oracle.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--oracle--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- mysql --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- mysql --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--redis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--redis--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- mongodb --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-mongodb<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- mongodb --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--swagger2--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;swagger2.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;swagger2.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--swagger2--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--shiro--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;shiro.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--shiro redis支持--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.crazycake<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;shiro-redis.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--shiro--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--httpclient--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;httpclient.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--httpclient--&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 监控 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--guava--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.guava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guava<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;guava.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--guava--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- rabbitmq  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-amqp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- rabbitmq  --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--lombok--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;lombok.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--lombok--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--commons--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-lang3.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-collections.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-beanutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-beanutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--commons--&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.sf.ezmorph<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ezmorph<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>app<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;java.version&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;java.version&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>$&#123;project.build.sourceEncoding&#125;<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 设置资源文件的编码方式 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>$&#123;project.build.sourceEncoding&#125;<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">fork</span>&gt;</span>true<span class="tag">&lt;/<span class="name">fork</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.20.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- 不指定单元测试 --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">skipTests</span>&gt;</span>true<span class="tag">&lt;/<span class="name">skipTests</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.spotify<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>docker-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;docker.plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>build-image<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>build<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>push-image<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>deploy<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>push<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">imageName</span>&gt;</span>$&#123;docker.repostory&#125;/$&#123;docker.registry.name&#125;/$&#123;project.artifactId&#125;:$&#123;project.version&#125;<span class="tag">&lt;/<span class="name">imageName</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">registryUrl</span>&gt;</span>$&#123;docker.repostory&#125;<span class="tag">&lt;/<span class="name">registryUrl</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">pushImage</span>&gt;</span>true<span class="tag">&lt;/<span class="name">pushImage</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dockerHost</span>&gt;</span>$&#123;docker.host&#125;<span class="tag">&lt;/<span class="name">dockerHost</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dockerDirectory</span>&gt;</span>$&#123;project.basedir&#125;/src/main/docker<span class="tag">&lt;/<span class="name">dockerDirectory</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">imageName</span>&gt;</span>$&#123;docker.repostory&#125;/$&#123;docker.registry.name&#125;/$&#123;project.artifactId&#125;:$&#123;project.version&#125;<span class="tag">&lt;/<span class="name">imageName</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">imageTags</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">imageTag</span>&gt;</span>$&#123;project.version&#125;<span class="tag">&lt;/<span class="name">imageTag</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">imageTags</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">targetPath</span>&gt;</span>/<span class="tag">&lt;/<span class="name">targetPath</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;project.build.directory&#125;<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">include</span>&gt;</span>$&#123;project.build.finalName&#125;.jar<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>application.properties配置文件，在这里我们将其配置为dev模式，同时在resources下增加一个application-dev.properties的配置文件，用于配置开发测试期间的参数。</p><p><strong>文件application.properties</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring.profiles.active=dev</span><br></pre></td></tr></table></figure><p><strong>文件application-dev.properties</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">#==================  server  ===================#</span><br><span class="line">server.port=8080</span><br><span class="line">#server.context-path=/springboot</span><br><span class="line"></span><br><span class="line">#================== mybatis =====================#</span><br><span class="line">mybatis.mapper-locations=classpath:mappers/**/*.xml</span><br><span class="line">mybatis.configuration.map-underscore-to-camel-case=true</span><br><span class="line">#================ mybatis pagehelper ==============#</span><br><span class="line">pagehelper.helper-dialect=mysql</span><br><span class="line">pagehelper.reasonable=true</span><br><span class="line">pagehelper.support-methods-arguments=true</span><br><span class="line">pagehelper.params=count=countSql</span><br><span class="line"></span><br><span class="line">#==================  database  ===================#</span><br><span class="line">spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver</span><br><span class="line">spring.datasource.url=jdbc:mysql://localhost:3306/zone-demo</span><br><span class="line">spring.datasource.username=root</span><br><span class="line">spring.datasource.password=zgq</span><br><span class="line">spring.datasource.type=com.alibaba.druid.pool.DruidDataSource</span><br><span class="line">#初始化大小，最小，最大</span><br><span class="line">spring.datasource.initialSize=5</span><br><span class="line">spring.datasource.minIdle=5</span><br><span class="line">spring.datasource.maxActive=20</span><br><span class="line"># 配置获取连接等待超时的时间</span><br><span class="line">spring.datasource.maxWait=60000</span><br><span class="line"># 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒</span><br><span class="line">spring.datasource.timeBetweenEvictionRunsMillis=60000</span><br><span class="line"># 配置一个连接在池中最小生存的时间，单位是毫秒</span><br><span class="line">spring.datasource.minEvictableIdleTimeMillis=300000</span><br><span class="line">spring.datasource.validationQuery=SELECT 1 FROM DUAL</span><br><span class="line">spring.datasource.testWhileIdle=true</span><br><span class="line">spring.datasource.testOnBorrow=false</span><br><span class="line">spring.datasource.testOnReturn=false</span><br><span class="line"># 打开PSCache，并且指定每个连接上PSCache的大小</span><br><span class="line">spring.datasource.poolPreparedStatements=true </span><br><span class="line"></span><br><span class="line">#==================  redis  ===================#</span><br><span class="line"># redis 单节点地址</span><br><span class="line">spring.redis.host=localhost</span><br><span class="line"># redis 集群</span><br><span class="line">#spring.redis.cluster.nodes=192.168.177.128:7001,192.168.177.128:7002,192.168.177.128:7003</span><br><span class="line">#spring.redis.cluster.max-redirects=3</span><br><span class="line"># Redis 数据库</span><br><span class="line">spring.redis.database=0</span><br><span class="line"># Redis 端口</span><br><span class="line">spring.redis.port=6379</span><br><span class="line"># Redis 密码</span><br><span class="line">spring.redis.password=</span><br><span class="line"># 连接池最大连接数（使用负值表示没有限制）</span><br><span class="line">spring.redis.jedis.pool.max-active=8 </span><br><span class="line"># 连接池最大阻塞等待时间（使用负值表示没有限制）</span><br><span class="line">spring.redis.jedis.pool.max-wait=-1</span><br><span class="line"># 连接池中的最大空闲连接</span><br><span class="line">spring.redis.jedis.pool.max-idle=8</span><br><span class="line"># 连接池中的最小空闲连接</span><br><span class="line">spring.redis.jedis.pool.min-idle=0</span><br><span class="line"># 连接超时时间（毫秒）</span><br><span class="line">spring.redis.timeout=3000</span><br><span class="line"></span><br><span class="line">#==================  cache ===================#</span><br><span class="line">spring.cache.type=redis</span><br><span class="line"></span><br><span class="line">#==================  RabbitMq  ===================#</span><br><span class="line">spring.rabbitmq.host=localhost</span><br><span class="line">spring.rabbitmq.port=5672</span><br><span class="line">spring.rabbitmq.username=admin</span><br><span class="line">spring.rabbitmq.password=admin</span><br><span class="line"></span><br><span class="line">spring.rabbitmq.listener.concurrency=10</span><br><span class="line">spring.rabbitmq.listener.max-concurrency=20</span><br><span class="line">spring.rabbitmq.listener.prefetch=50</span><br><span class="line">#==================  RabbitMq 队列配置 ===================#</span><br><span class="line">mq.env=local</span><br><span class="line">basic.info.mq.exchange.name=$&#123;mq.env&#125;:basic:info:mq:exchange</span><br><span class="line">basic.info.mq.routing.key.name=$&#123;mq.env&#125;:basic:info:mq:routing:key</span><br><span class="line">basic.info.mq.queue.name=$&#123;mq.env&#125;:basic:info:mq:queue</span><br><span class="line"></span><br><span class="line">#==================  mongoDB 配置 ===================#</span><br><span class="line">spring.data.mongodb.host=localhost</span><br><span class="line">spring.data.mongodb.port=27017</span><br><span class="line">spring.data.mongodb.database=test</span><br><span class="line"></span><br><span class="line">#==================  slf4j日志配置 ===================#</span><br><span class="line"># 路径</span><br><span class="line">logging.path=/Users/zgq/logs</span><br><span class="line">logging.file=helloworld.log</span><br><span class="line">#location of config file (default classpath:logback.xml for logback)</span><br><span class="line">#logging.config=</span><br><span class="line"># levels for loggers, e.g. &quot;logging.level.org.springframework=DEBUG&quot; (TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF)</span><br><span class="line">logging.level.com.zone7=INFO</span><br><span class="line"></span><br><span class="line">#==================  默认密码  ===================#</span><br><span class="line">system.default.password=123456</span><br><span class="line"></span><br><span class="line">#==================  监控  ===================#</span><br><span class="line">#actuator端口</span><br><span class="line">management.server.port=8310</span><br><span class="line">#修改访问路径，2.0之前默认是/，2.0默认是/actuator</span><br><span class="line">management.endpoints.web.base-path=/actuator</span><br><span class="line">#开放所有页面节点 ，默认只开启了health、info两个节点</span><br><span class="line">management.endpoints.web.exposure.include=*</span><br><span class="line">#显示健康具体信息，默认不会显示详细信息</span><br><span class="line">management.endpoint.health.show-details=always</span><br></pre></td></tr></table></figure><h3 id="3-1-3-代码开发"><a href="#3-1-3-代码开发" class="headerlink" title="3.1.3    代码开发"></a>3.1.3    代码开发</h3><h4 id="3-1-3-1-用户安全验证"><a href="#3-1-3-1-用户安全验证" class="headerlink" title="3.1.3.1    用户安全验证"></a>3.1.3.1    用户安全验证</h4><p>首先我们沿用第一章的SpringBoot工程，在 “/src/main/java/com/zone7/demo/helloworld/config/filter”下新增加一个安全过滤器，在实际应用中可以采用Oauth2、SpringSecurity或者Shiro来实现，这里只使用了session保存用户状态，并通过一个Filter的实现类来获取用户是否处于登陆状态来控制系统的安全访问。代码如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zone7.demo.helloworld.config.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Sets;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.common.RequestHolder;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.vo.SysUserVo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebFilter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * RequestFilter</span></span><br><span class="line"><span class="comment"> * 请求过滤器</span></span><br><span class="line"><span class="comment"> * 安全认证</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: zone7</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@time</span>: 2019.02.19</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebFilter</span>(filterName = <span class="string">"RequestFilter"</span>, urlPatterns = <span class="string">"/*"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Set&lt;String&gt; URL_WHITE_LIST = Sets.newHashSet();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        <span class="comment">//忽略不过旅的路径</span></span><br><span class="line">        URL_WHITE_LIST.add(<span class="string">"/unauth"</span>);</span><br><span class="line">        URL_WHITE_LIST.add(<span class="string">"/login"</span>);</span><br><span class="line">        URL_WHITE_LIST.add(<span class="string">"/logout"</span>);</span><br><span class="line"></span><br><span class="line">        URL_WHITE_LIST.add(<span class="string">"/sys/unauth"</span>);</span><br><span class="line">        URL_WHITE_LIST.add(<span class="string">"/sys/login"</span>);</span><br><span class="line">        URL_WHITE_LIST.add(<span class="string">"/sys/logout"</span>);</span><br><span class="line"></span><br><span class="line">        URL_WHITE_LIST.add(<span class="string">"/static"</span>);</span><br><span class="line">        URL_WHITE_LIST.add(<span class="string">"/actuator"</span>);</span><br><span class="line">        URL_WHITE_LIST.add(<span class="string">"/oauth"</span>);<span class="comment">//oauth2.0默认接口</span></span><br><span class="line">        URL_WHITE_LIST.add(<span class="string">"/api"</span>); <span class="comment">// 外部接口采用oauth进行权限验证</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isWhiteUrl</span><span class="params">(String requestUrl)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (URL_WHITE_LIST.contains(requestUrl))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(String str:URL_WHITE_LIST)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(requestUrl.startsWith(str))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) servletRequest;</span><br><span class="line">        HttpServletResponse response = (HttpServletResponse) servletResponse;</span><br><span class="line">        String requestUrl = request.getRequestURI();</span><br><span class="line">        <span class="keyword">if</span> (isWhiteUrl(requestUrl)) &#123;</span><br><span class="line">            filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        SysUserVo userVo = (SysUserVo) request.getSession().getAttribute(<span class="string">"user"</span>);</span><br><span class="line">        <span class="keyword">if</span> (userVo == <span class="keyword">null</span>) &#123;</span><br><span class="line">            request.getRequestDispatcher(<span class="string">"/unauth"</span>).forward(request, response);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        RequestHolder.add(userVo);</span><br><span class="line">        RequestHolder.add(request);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.2    前端开发<br>采用vue-cli 命令生成工程脚手架（创建命令：vue init webpack helloworld_web），前端工程的名称为“helloworld_web” 。采用IDEA工具打开工程，默认的结构如下图所示：<br> <img src="https://zone-7.github.io/img/springboot/3.2a.png" alt="3.2a前端开发"> </p><p>工程目录默认有了router、compotent、assets，我们还需要增加api、views、store、utils目录。api目录用于存放采用mock实现的前后端交互脚本，views用于存放功能页面vue模板，store用于存放采用vuex实现的状态管理功能，utils用于存放通用工具脚本。工程目录结构如下图所示：<br> <img src="https://zone-7.github.io/img/springboot/3.2b.png" alt="3.2b前端开发"> </p>]]></content>
      
      
      <categories>
          
          <category> springboot&amp;vue前后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> VUE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2 Springboot&amp;VUE开发实践（VUE前端开发）</title>
      <link href="/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%882%20VUE%20%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%EF%BC%89/"/>
      <url>/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%882%20VUE%20%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="2-前端开发框架VUE开发"><a href="#2-前端开发框架VUE开发" class="headerlink" title="2    前端开发框架VUE开发"></a>2    前端开发框架VUE开发</h1><h2 id="2-1-VUE简介"><a href="#2-1-VUE简介" class="headerlink" title="2.1    VUE简介"></a>2.1    VUE简介</h2><p>Vue框架设计采用的是MVVM设计模式MVVM是Model-View-ViewModel的简写，主要包括view（视图）、model（模型）、ViewModel（视图模型）。模型指的是后端传递的数据；视图指的是所看到的页面；视图模型是mvvm模式的核心，它是连接view和model的桥梁。它的两个主要作用是：一是将模型转化成视图，即将后端传递的数据转化成所看到的页面。实现的方式是：数据绑定。二是将视图转化成模型，即将所看到的页面转化成后端的数据。实现的方式是：DOM 事件监听。这两个方向的实现我们称之为数据的双向绑定。MVVM流程图如下：<br> <img src="https://zone-7.github.io/img/springboot/2.png" alt="VUE "> </p><p>在VUE项目开发时我们不需要关注ViewModel层，这是Vue.js的内置功能，只需要关注视图层和模型层即可。vue通过一个尽量简单的api来提供api提供反应式的数据绑定和可组合、复用的视图组件，不是一个大而全的框架。快速开发原型，混合其他的库做更多的事情。</p><h2 id="2-2-安装及快速入门"><a href="#2-2-安装及快速入门" class="headerlink" title="2.2    安装及快速入门"></a>2.2    安装及快速入门</h2><p>Web1.0时代网页是“只读的”；在Web 1.0之后，互联网的第二次迭代被称作Web 2.0，也就是“可读写”网络，形形色色的社交网站和点评网站，是Web 2.0的代表； Web 3.0时代，技术的发展带来的是在线应用和网站可以接收到已经在网络上的信息，并将新的信息和数据反馈给用户，网站因为有了自主学习能力，而变得更加智能。</p><p>随着web技术的发展，前端技术也从原来的操作DOM的时代，发展到如今围绕着操作数据的阶段，之前大家常用的前端框架是JQuery、Bootstrap框架， 而今天大家用得更多的是React、Vue、Angular三大主流框架，这三个框架各有各的优势，而且都较为成熟。<br>vue作为三大前端框架之一，社区比较活跃，应用也已经十分广泛。下面主要介绍vue框架的安装和开发。</p><h3 id="Step1：安装node-js"><a href="#Step1：安装node-js" class="headerlink" title="Step1：安装node.js"></a>Step1：安装node.js</h3><p>安装完node.js之后，npm也会自动安装<br>查询是否安装成功的命令：<br>node -v<br>npm -v</p><h3 id="Step2：安装脚手架工具vue-cli"><a href="#Step2：安装脚手架工具vue-cli" class="headerlink" title="Step2：安装脚手架工具vue-cli"></a>Step2：安装脚手架工具vue-cli</h3><p>命令如下：<br>npm install –global vue-cli</p><h3 id="Step3：全局安装Webpak"><a href="#Step3：全局安装Webpak" class="headerlink" title="Step3：全局安装Webpak"></a>Step3：全局安装Webpak</h3><p>命令如下：<br>npm install -g webpack<br>npm install -g webpack-cli<br>查看版本：<br>webpack -v</p><h3 id="Step4：VUE项目初始化"><a href="#Step4：VUE项目初始化" class="headerlink" title="Step4：VUE项目初始化"></a>Step4：VUE项目初始化</h3><p>vue项目初始化命令如下：<br>vue init webpack helloworld<br>注：安装过程 中有个选项（Use ESLint to line your code ?选择 No ）<br>  <img src="https://zone-7.github.io/img/springboot/2.2.4a.png" alt="VUE项目初始化 "> </p><p>初始化完成后的vue项目目录如下：<br>  <img src="https://zone-7.github.io/img/springboot/2.2.4b.png" alt="VUE项目初始化 "> </p><h3 id="Step5-安装依赖"><a href="#Step5-安装依赖" class="headerlink" title="Step5: 安装依赖"></a>Step5: 安装依赖</h3><p>进入到Helloworld目录下，使用npm install 安装package.json包中的依赖<br>命令如下：<br>cd Helloworld<br>npm install</p><h3 id="Step6：运行项目"><a href="#Step6：运行项目" class="headerlink" title="Step6：运行项目"></a>Step6：运行项目</h3><p>执行下面命令运行项目：<br>npm run dev<br><img src="https://zone-7.github.io/img/springboot/2.2.6a.png" alt="VUE项目运行项目1 "> </p><p><img src="https://zone-7.github.io/img/springboot/2.2.6b.png" alt="VUE项目运行项目2 "> </p><h3 id="Step7：停止项目"><a href="#Step7：停止项目" class="headerlink" title="Step7：停止项目"></a>Step7：停止项目</h3><p>ctrl+c，即可停止项目的运行</p><h2 id="2-3-VUE项目目录说明"><a href="#2-3-VUE项目目录说明" class="headerlink" title="2.3    VUE项目目录说明"></a>2.3    VUE项目目录说明</h2><p>build：项目构建(webpack)相关代码<br>config：配置目录，包括端口号等<br>node_modules：npm加载的项目依赖块<br>src：这里是我们要开发的目录，基本上要做的事情都在这个目录里。里面包含了几个目录及文件：<br>assets: 放置一些图片，如logo等<br>components：该目录里存放的我们的开发文件组件，主要的开发文件都存放在这里了<br>App.vue：项目入口文件<br>main.js：项目的核心文件<br>router：路由配置目录<br>static：放置一些静态资源文件<br>test：初始测试目录，可删除<br>index.html：首页入口文件<br>package.json：项目配置文件<br>README.md：项目的说明文档，markdown 格式</p><h2 id="2-4-VUE生命周期"><a href="#2-4-VUE生命周期" class="headerlink" title="2.4    VUE生命周期"></a>2.4    VUE生命周期</h2><p>VUE的运行过程都在node环境下进行，执行生命周期如下图所示：<br> <img src="https://zone-7.github.io/img/springboot/2.4.png" alt="VUE生命周期"> </p><p>VUE的执行过程包括以下几个步骤：</p><ul><li><p>(1)在执行npm run dev的时候，首先在当前文件夹下的项目中找package.json文件,启动默认端口是8080。<br><img src="https://zone-7.github.io/img/springboot/2.4.1.png" alt="VUE生命周期1"> </p></li><li><p>(2)执行src的main.js文件，在该文件中创建一个Vue的实例，入参包括要渲染的元素、路由、绑定的组件以及模版。<br><img src="https://zone-7.github.io/img/springboot/2.4.2.png" alt="VUE生命周期2"> </p></li></ul><ul><li>(3)渲染模板并执行App.vue组件<br>在App.vue组件中有一个router-view，router-view对应的路由配置在src/router目录下，该文件夹下有个index.js文件，该文件用于配置路由词典，指定了路由地址是空，加载HelloWorld组件。<br><img src="https://zone-7.github.io/img/springboot/2.4.3a.png" alt="VUE生命周期3"><br><img src="https://zone-7.github.io/img/springboot/2.4.3b.png" alt="VUE生命周期3"> </li></ul><h2 id="2-5-第一个工程"><a href="#2-5-第一个工程" class="headerlink" title="2.5    第一个工程"></a>2.5    第一个工程</h2><h3 id="Step1-在src下创建views文件夹，并在src-views下创建-vue结尾的文件"><a href="#Step1-在src下创建views文件夹，并在src-views下创建-vue结尾的文件" class="headerlink" title="Step1:在src下创建views文件夹，并在src/views下创建.vue结尾的文件"></a>Step1:在src下创建views文件夹，并在src/views下创建.vue结尾的文件</h3><ul><li>布局页面 Layout.vue</li><li>页面导航菜单top.vue</li><li>首页main.vue</li><li>关于页面about.vue</li></ul><ul><li><p>(1)src/views/Layout.vue</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">top</span>&gt;</span><span class="tag">&lt;/<span class="name">top</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">router-view</span> <span class="attr">:key</span>=<span class="string">"key"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">  import Top from '@/views/top'</span><br><span class="line">  import Main from '@/views/main'</span><br><span class="line">  import About from '@/views/about'</span><br><span class="line">  export default &#123;</span><br><span class="line">    name: 'Layout',</span><br><span class="line">    components: &#123;</span><br><span class="line">      Top,</span><br><span class="line">      About,</span><br><span class="line">      Main</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>(2)src/views/top.vue</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"top navbar-fixed-top"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-8 text-center"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">"&#123;name:'Main'&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">"&#123;name:'About'&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">  export default &#123;</span><br><span class="line">    name: 'Top',</span><br><span class="line">    data()&#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        message: '欢迎使用zone7 框架'</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>(3)src/views/main.vue</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;&#123;message&#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">  export default &#123;</span><br><span class="line">    name: 'Main',</span><br><span class="line">    data()&#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        message: 'Hello World 这是首页'</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>(4)src/views/about.vue</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      &#123;&#123;message&#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">export default &#123;</span><br><span class="line">  name: 'About',</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      message: '欢迎使用Zone7 框架'</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="Step2-修改src-router-index-js-添加页面路由"><a href="#Step2-修改src-router-index-js-添加页面路由" class="headerlink" title="Step2:修改src/router/index.js 添加页面路由"></a>Step2:修改src/router/index.js 添加页面路由</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &apos;vue&apos;</span><br><span class="line">import Router from &apos;vue-router&apos;</span><br><span class="line">import Main from &apos;@/views/main&apos;</span><br><span class="line">import Layout from &apos;@/views/Layout&apos;</span><br><span class="line"></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line">export default new Router(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;&apos;,</span><br><span class="line">      component: Layout,</span><br><span class="line">      redirect: &apos;main&apos;,</span><br><span class="line">      children: [</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;main&apos;,</span><br><span class="line">          component: () =&gt; import(&apos;@/views/main&apos;),</span><br><span class="line">          name: &apos;Main&apos;,</span><br><span class="line">          meta: &#123; title: &apos;首页&apos;, icon: &apos;dashboard&apos;, noCache: true, affix: true &#125;  </span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;about&apos;,</span><br><span class="line">          component: () =&gt; import(&apos;@/views/about&apos;),</span><br><span class="line">          name: &apos;About&apos;,</span><br><span class="line">          meta: &#123; title: &apos;关于&apos;, icon: &apos;about&apos;, noCache: true, affix: true &#125;   </span><br><span class="line">        &#125;,</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="Step3：运行npm-run-dev"><a href="#Step3：运行npm-run-dev" class="headerlink" title="Step3：运行npm run dev"></a>Step3：运行npm run dev</h3><p>  <img src="https://zone-7.github.io/img/springboot/2.5.3.png" alt="运行npm run dev"> </p>]]></content>
      
      
      <categories>
          
          <category> springboot&amp;vue前后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> VUE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.9 Springboot&amp;VUE开发实践（SpringBoot整合Oauth2.0）</title>
      <link href="/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.9SpringBoot%20%E6%95%B4%E5%90%88Oauth2.0%EF%BC%89/"/>
      <url>/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.9SpringBoot%20%E6%95%B4%E5%90%88Oauth2.0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1-9-整合Oauth2-0"><a href="#1-9-整合Oauth2-0" class="headerlink" title="1.9    整合Oauth2.0"></a>1.9    整合Oauth2.0</h2><h3 id="1-9-1-Oauth2-0介绍"><a href="#1-9-1-Oauth2-0介绍" class="headerlink" title="1.9.1    Oauth2.0介绍"></a>1.9.1    Oauth2.0介绍</h3><p>在实践之前我们先来了解下oauth2.0，OAuth是一个关于授权（authorization）的开放网络标准，在全世界得到广泛应用，目前的版本是2.0版。OAuth2.0服务提供者实际上分为：“授权服务 Authorization Service ”和“资源服务Resource Service”。Oauth2.0 的运行流程如下图所示：<br><img src="https://zone-7.github.io/img/springboot/1.9.1.png" alt="运行流程"></p><p>*（A）用户打开客户端，客户端要求用户给予授权。<br>*（B）用户同意给予客户端授权。<br>*（C）客户端使用上一步获得的授权（一般是Code），向认证服务器申请令牌TOKEN。<br>*（D）认证服务器对客户端进行认证以后，确认无误，同意发放令牌。<br>*（E）客户端使用令牌，向资源服务器申请获取资源（用户信息等）。<br>*（F）资源服务器确认令牌无误，同意向客户端开放资源。<br>图中服务端的三个组件分别为：</p><ul><li>Resource Owner：即指需要授权访问的资源，比如用户昵称，头像</li><li>Authorization Server：鉴权服务，核心鉴权逻辑</li><li>Resource Server：资源服务<br>Oauth2.0 定义了五种授权方式： </li><li>授权码模式（authorization code）</li><li>简化模式（implicit）</li><li>密码模式（resource owner password credentials）</li><li>客户端模式（client credentials）</li><li>扩展模式（Extension）</li></ul><h3 id="1-9-2-Oauth2-0授权模式"><a href="#1-9-2-Oauth2-0授权模式" class="headerlink" title="1.9.2    Oauth2.0授权模式"></a>1.9.2    Oauth2.0授权模式</h3><h4 id="1-9-2-1-授权码模式（authorization-code）"><a href="#1-9-2-1-授权码模式（authorization-code）" class="headerlink" title="1.9.2.1    授权码模式（authorization_code）"></a>1.9.2.1    授权码模式（authorization_code）</h4><p>授权码模式是功能最完整、流程最严密的授权模式。他的特点是通过客户端的后台服务器，与”服务提供商”的认证服务器进行互动。以微信公众平台公众号网页应用开发流程为例。<br> <img src="https://zone-7.github.io/img/springboot/1.9.2.1.png" alt="授权码模式"></p><p>步骤如下：</p><ul><li>（A）用户访问客户端，客户端将用户导向认证服务器。</li><li>（B）用户选择是否给予客户端授权。</li><li>（C）若用户给予授权，认证服务器将用户导向客户端指定的”重定向URI”（redirection URI），同时附上授权码code。</li><li>（D）客户端收到授权码code，附上早先的”重定向URI”，向认证服务器申请token。这一步是在客户端的后台的服务器上完成的，对用户不可见。</li><li>（E）认证服务器核对了授权码和重定向URI，确认无误后，向客户端发送访问令牌（access token）和更新令牌（refresh token）。</li></ul><p>授权码模式的几个重要参数如下：</p><ul><li><p>response_type：表示授权类型，必选项，此处的值固定为”code”</p></li><li><p>appid：表示客户端的ID，必选项</p></li><li><p>redirect_uri：表示重定向URI，可选项</p></li><li><p>scope：表示申请的权限范围，可选项</p></li><li><p>state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值。用于防止恶意攻击</p><p><strong>授权码模式的URL以及参数应用步骤如下：</strong></p></li></ul><ul><li>（1）引导用户跳转到授权页面：<br><a href="http://localhost:8080/oauth/authorize?client_id=client&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect" target="_blank" rel="noopener">http://localhost:8080/oauth/authorize?client_id=client&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect</a><br>参数：<ul><li>client_id 客户唯一标识</li><li>redirect_uri    授权后重定向的回调链接地址， 请使用 urlEncode 对链接进行处理</li><li>response_type      返回类型，请填写code</li><li>scope     应用授权作用域，有snsapi_base 、snsapi_userinfo 两种</li><li>state       重定向后会带上state参数，开发者可以填写a-zA-Z0-9的参数值，最多128字节</li></ul></li><li>（2）通过code获取Token<br><a href="http://localhost:8080/oauth/token" target="_blank" rel="noopener">http://localhost:8080/oauth/token</a>? client_id=client&amp;secret=secret&amp;code=CODE&amp;grant_type=authorization_code<br>参数：<ul><li>client_id 客户唯一标识</li><li>secret     密钥</li><li>code       填写获取的code参数（存在有效期，通常设为10分钟，客户端只能使用该码一次，否则会被授权服务器拒绝。该码与客户端ID和重定向URI，是一一对应关系）</li><li>grant_type     填写为authorization_code</li></ul></li></ul><p><strong>返回结果：</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">"access_token":"ACCESS_TOKEN", //网页授权接口调用凭证,注意：此access_token与基础支持的access_token不同</span><br><span class="line">"expires_in":7200,  // access_token接口调用凭证超时时间，单位（秒）</span><br><span class="line">"refresh_token":"REFRESH_TOKEN", //用户刷新access_token</span><br><span class="line">"client_id":"client",  //用户唯一标识</span><br><span class="line">"scope":"all"  //用户授权的作用域，使用逗号（,）分隔</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><ul><li>access_token：表示访问令牌，必选项。</li><li>token_type：表示令牌类型，该值大小写不敏感，必选项，可以是bearer类型或mac类型。</li><li>expires_in：表示过期时间，单位为秒。如果省略该参数，必须其他方式设置过期时间。</li><li>refresh_token：表示更新令牌，用来获取下一次的访问令牌，可选项。</li><li>scope：表示权限范围，如果与客户端申请的范围一致，此项可省略。</li></ul><h4 id="1-9-2-2-简化模式（implicit）"><a href="#1-9-2-2-简化模式（implicit）" class="headerlink" title="1.9.2.2    简化模式（implicit）"></a>1.9.2.2    简化模式（implicit）</h4><p>简化模式是不通过第三方应用程序的服务器，直接在浏览器中向认证服务器申请令牌，跳过”授权码”步骤。所有步骤在浏览器中完成，令牌对访问者是可见的，且客户端不需要认证。</p><p> <img src="https://zone-7.github.io/img/springboot/1.9.2.2.png" alt="简化模式"></p><p><strong>步骤如下：</strong></p><ul><li>（A）客户端将用户导向认证服务器。</li><li>（B）用户决定是否给于客户端授权。</li><li>（C）若用户授权，认证服务器将用户导向客户端指定的”重定向URI”，并在URI的Hash部分包含了访问令牌。</li><li>（D）浏览器向资源服务器发出请求，其中不包括上一步收到的Hash值。</li><li>（E）资源服务器返回一个网页，其中包含的代码可以获取Hash值中的令牌。</li><li>（F）浏览器执行上一步获得的脚本，提取出令牌。</li><li>（G）浏览器将令牌发给客户端。</li></ul><p>下面是上面这些步骤所需要的参数。</p><p>A步骤中，客户端发出的HTTP请求，包含以下参数：</p><ul><li>response_type：表示授权类型，此处的值固定为”token”，必选项。</li><li>client_id：表示客户端的ID，必选项。</li><li>redirect_uri：表示重定向的URI，可选项。</li><li>scope：表示权限范围，可选项。</li><li>state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值</li></ul><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">GET /authorize?response_type=token&amp;client_id=s6BhdRkqt3&amp;state=xyz&amp;redirect_uri=http://www.baidu.com </span><br><span class="line">HTTP/1.1</span><br><span class="line"></span><br><span class="line">Host: www.baidu.com</span><br></pre></td></tr></table></figure><p>C步骤中，认证服务器回应客户端的URI，包含以下参数：</p><ul><li>access_token：表示访问令牌，必选项。</li><li>token_type：表示令牌类型，该值大小写不敏感，必选项。</li><li>expires_in：表示过期时间，单位为秒。如果省略该参数，必须其他方式设置过期时间。</li><li>scope：表示权限范围，如果与客户端申请的范围一致，此项可省略。</li><li>state：如果客户端的请求中包含这个参数，认证服务器的回应也必须一模一样包含这个参数。<br>例如：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 302 Found</span><br><span class="line">Location: http://www.baidu.com#access_token=9e64da25-105c-4d20-a8b5-606c553c9b33&amp;token_type=bearer&amp;expires_in=829</span><br></pre></td></tr></table></figure></li></ul><p>认证服务器用HTTP头信息的Location栏，指定浏览器重定向的网址。注意，在这个网址的Hash部分包含了令牌。<br>根据上面的D步骤，下一步浏览器会访问Location指定的网址，但是Hash部分不会发送。接下来的E步骤，服务提供商的资源服务器发送过来的代码，会提取出Hash中的令牌。</p><h4 id="1-9-2-3-密码模式（Password）"><a href="#1-9-2-3-密码模式（Password）" class="headerlink" title="1.9.2.3    密码模式（Password）"></a>1.9.2.3    密码模式（Password）</h4><p>向客户端提供自己的用户名和密码，客户端使用这些信息，向”服务商提供商”索要授权。在这种模式中，用户必须把自己的密码给客户端，但是客户端不得储存密码。这通常用在用户对客户端高度信任的情况下，比如客户端是操作系统的一部分，或由一个著名公司出品。而认证服务器只有在其他授权模式无法执行的情况下，才能考虑使用这种模式。</p><p> <img src="https://zone-7.github.io/img/springboot/1.9.2.3.png" alt="密码模式"></p><p>步骤如下：</p><ul><li>（A）用户向客户端提供用户名和密码。</li><li>（B）客户端将用户名和密码发给认证服务器，向后者请求令牌。</li><li>（C）认证服务器确认无误后，向客户端提供访问令牌。<br>在B步骤中，客户端发出的HTTP请求，包含以下参数：</li><li>grant_type：表示授权类型，此处的值固定为”password”，必选项。</li><li>username：表示用户名，必选项。</li><li>password：表示用户的密码，必选项。</li><li>scope：表示权限范围，可选项。</li></ul><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">POST /oauth/token HTTP/1.1</span><br><span class="line">Host: localhost</span><br><span class="line">Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">grant_type=password&amp;username=admin&amp;password=111111</span><br></pre></td></tr></table></figure><p>C步骤中，认证服务器向客户端发送访问令牌，例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Content-Type: application/json;charset=UTF-8</span><br><span class="line">Cache-Control: no-store</span><br><span class="line">Pragma: no-cache</span><br><span class="line">&#123;</span><br><span class="line">  &quot;access_token&quot;:&quot;2YotnFZFEjr1zCsicMWpAA&quot;,</span><br><span class="line">  &quot;token_type&quot;:&quot;example&quot;,</span><br><span class="line">  &quot;expires_in&quot;:3600,</span><br><span class="line">  &quot;refresh_token&quot;:&quot;tGzv3JOkF0XG5Qx2TlKWIA&quot;,</span><br><span class="line">  &quot;example_parameter&quot;:&quot;example_value&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>整个过程中，客户端不得保存用户的密码。</p><h4 id="1-9-2-4-客户端模式（client-credentials）"><a href="#1-9-2-4-客户端模式（client-credentials）" class="headerlink" title="1.9.2.4    客户端模式（client_credentials）"></a>1.9.2.4    客户端模式（client_credentials）</h4><p>客户端模式下，并不存在对个体用户授权的行为，被授权的主体为client。因此，该模式可用于对某类用户进行集体授权。<br> <img src="https://zone-7.github.io/img/springboot/1.9.2.4.png" alt="客户端模式"></p><p>申请该模式时，需要在HTTP request entity-body中提交以下信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">POST /oauth/token</span><br><span class="line">content-type: application/x-www-form-urlencoded</span><br><span class="line">user-agent: PostmanRuntime/7.1.1</span><br><span class="line">accept: */*</span><br><span class="line">host: localhost:8080</span><br><span class="line">accept-encoding: gzip, deflate</span><br><span class="line">content-length: 74</span><br><span class="line">grant_type=client_credentialsscope=allclient_id=zgqclient_secret=secret</span><br></pre></td></tr></table></figure><p>若申请成功，服务器将返回access token和token有效时间。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">HTTP/1.1 200</span><br><span class="line">status: 200</span><br><span class="line">cache-control: no-store</span><br><span class="line">pragma: no-cache</span><br><span class="line">x-content-type-options: nosniff</span><br><span class="line">x-xss-protection: 1; mode=block</span><br><span class="line">x-frame-options: DENY</span><br><span class="line">content-type: application/json;charset=UTF-8</span><br><span class="line">transfer-encoding: chunked</span><br><span class="line">date: Thu, 20 Jun 2019 09:01:58 GMT</span><br><span class="line">&#123;&quot;access_token&quot;:&quot;43f856cb-2976-4a73-85f3-75638c32f8d7&quot;,&quot;token_type&quot;:&quot;bearer&quot;,&quot;expires_in&quot;:1199,&quot;scope&quot;:&quot;all&quot;&#125;</span><br></pre></td></tr></table></figure><h4 id="1-9-2-5-扩展模式"><a href="#1-9-2-5-扩展模式" class="headerlink" title="1.9.2.5    扩展模式"></a>1.9.2.5    扩展模式</h4><p>扩展模式也叫自定义模式。Oauth2.0的规范中要求 “grant type”参数必须为URI。对于其他申请数据，可以根据需求进行自定义。这里不对这个部分做深入讨论，如果需要可以进一步查看Oauth2.0 相关文档。</p><h4 id="1-9-2-6-令牌更新"><a href="#1-9-2-6-令牌更新" class="headerlink" title="1.9.2.6    令牌更新"></a>1.9.2.6    令牌更新</h4><p>在用户访问的时候，客户端的”访问令牌”如果已经过期，则需要使用”更新令牌”申请一个新的访问令牌。客户端可以发出更新令牌的HTTP请求进行令牌更新。<br>令牌更新请求包含以下参数：</p><ul><li>grant_type：表示使用的授权模式，此处的值固定为”refresh_token”，必选项。</li><li>refresh_token：表示早前收到的更新令牌，必选项。</li><li>scope：表示申请的授权范围，不可以超出上一次申请的范围，如果省略该参数，则表示与上一次一致。</li><li>client_id： 客户唯一标识</li><li>client_secret：密钥</li></ul><p><strong>例如：</strong><br>请求内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /oauth/token</span><br><span class="line">refresh_token=67ced428-1011-4da5-ae54-f3b98cb46b01&amp;grant_type=refresh_token&amp;scope=all&amp;client_id=zgq&amp;token_type=bearer&amp;client_secret=secret</span><br></pre></td></tr></table></figure><p>返回内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200</span><br><span class="line">&#123;&quot;access_token&quot;:&quot;ab827d16-0a6b-4cdd-abaa-ad6535de9881&quot;,&quot;token_type&quot;:&quot;bearer&quot;,&quot;refresh_token&quot;:&quot;67ced428-1011-4da5-ae54-f3b98cb46b01&quot;,&quot;expires_in&quot;:11999,&quot;scope&quot;:&quot;all&quot;&#125;</span><br></pre></td></tr></table></figure><h3 id="1-9-3-SpringBoot整合Oauth2-0-和Spring-Security"><a href="#1-9-3-SpringBoot整合Oauth2-0-和Spring-Security" class="headerlink" title="1.9.3    SpringBoot整合Oauth2.0 和Spring Security"></a>1.9.3    SpringBoot整合Oauth2.0 和Spring Security</h3><h4 id="1-9-3-1-Step1：创建Oauth2-0所需要的三个表"><a href="#1-9-3-1-Step1：创建Oauth2-0所需要的三个表" class="headerlink" title="1.9.3.1    Step1：创建Oauth2.0所需要的三个表"></a>1.9.3.1    Step1：创建Oauth2.0所需要的三个表</h4><p><strong>Mysql脚本如下：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for oauth_access_token</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`oauth_access_token`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`oauth_access_token`</span>  (</span><br><span class="line">  <span class="string">`token_id`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`token`</span> <span class="built_in">blob</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`authentication_id`</span> <span class="built_in">varchar</span>(<span class="number">250</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`user_name`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`client_id`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`authentication`</span> <span class="built_in">blob</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`refresh_token`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`authentication_id`</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8 <span class="keyword">COLLATE</span> = utf8_general_ci ROW_FORMAT = Dynamic;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for oauth_client_details</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`oauth_client_details`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`oauth_client_details`</span>  (</span><br><span class="line">  <span class="string">`client_id`</span> <span class="built_in">varchar</span>(<span class="number">250</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`resource_ids`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`client_secret`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`scope`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`authorized_grant_types`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`web_server_redirect_uri`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`authorities`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`access_token_validity`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`refresh_token_validity`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`additional_information`</span> <span class="built_in">varchar</span>(<span class="number">4096</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`autoapprove`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`client_id`</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8 <span class="keyword">COLLATE</span> = utf8_general_ci ROW_FORMAT = Dynamic;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for oauth_refresh_token</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`oauth_refresh_token`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`oauth_refresh_token`</span>  (</span><br><span class="line">  <span class="string">`token_id`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`token`</span> <span class="built_in">blob</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`authentication`</span> <span class="built_in">blob</span> <span class="literal">NULL</span></span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8 <span class="keyword">COLLATE</span> = utf8_general_ci ROW_FORMAT = Dynamic;</span><br></pre></td></tr></table></figure><h4 id="1-9-3-2-Step2：添加POM配置"><a href="#1-9-3-2-Step2：添加POM配置" class="headerlink" title="1.9.3.2    Step2：添加POM配置"></a>1.9.3.2    Step2：添加POM配置</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">&lt;!--安全验证相关--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security.oauth<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-oauth2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.14.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security.oauth.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-oauth2-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-jwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-9-3-3-Step3：配置数据源"><a href="#1-9-3-3-Step3：配置数据源" class="headerlink" title="1.9.3.3    Step3：配置数据源"></a>1.9.3.3    Step3：配置数据源</h4><p>在采用数据库存储的Oauth认证信息时需要使用数据源访问数据库。需要在application-dev.properties 文件中增加以下配置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#DataSource</span><br><span class="line">spring.datasource.type=com.alibaba.druid.pool.DruidDataSource</span><br><span class="line">spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver</span><br><span class="line">spring.datasource.url = jdbc:mysql://localhost:3306/splus?serverTimezone=Asia/Shanghai&amp;useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8</span><br><span class="line">spring.datasource.username = root</span><br><span class="line">spring.datasource.password = root</span><br><span class="line">初始化大小，最小，最大</span><br><span class="line">spring.datasource.initialSize=5</span><br><span class="line">spring.datasource.minIdle=5</span><br><span class="line">spring.datasource.maxActive=20</span><br><span class="line"># 配置获取连接等待超时的时间</span><br><span class="line">spring.datasource.maxWait=60000</span><br><span class="line"># 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒</span><br><span class="line">spring.datasource.timeBetweenEvictionRunsMillis=60000</span><br><span class="line"># 配置一个连接在池中最小生存的时间，单位是毫秒</span><br><span class="line">spring.datasource.minEvictableIdleTimeMillis=300000</span><br><span class="line">spring.datasource.validationQuery=SELECT 1 FROM DUAL</span><br><span class="line">spring.datasource.testWhileIdle=true</span><br><span class="line">spring.datasource.testOnBorrow=false</span><br><span class="line">spring.datasource.testOnReturn=false</span><br><span class="line"># 打开PSCache，并且指定每个连接上PSCache的大小</span><br><span class="line">spring.datasource.poolPreparedStatements=true</span><br><span class="line">spring.datasource.maxPoolPreparedStatementPerConnectionSize=20</span><br></pre></td></tr></table></figure><p>同时还需要使用注解配置DataSource组件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Primary;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * DruidDataSourceConfig</span></span><br><span class="line"><span class="comment"> * Druid数据源管理配置类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: zone7</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@time</span>: 2018.08.20</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidDataSourceConfig</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String driverClassName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> initialSize;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> minIdle;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxActive;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxWait;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> timeBetweenEvictionRunsMillis;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> minEvictableIdleTimeMillis;</span><br><span class="line">    <span class="keyword">private</span> String validationQuery;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> testWhileIdle;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> testOnBorrow;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> testOnReturn;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> poolPreparedStatements;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxPoolPreparedStatementPerConnectionSize;</span><br><span class="line">    <span class="keyword">private</span> String filters;</span><br><span class="line">    <span class="keyword">private</span> String connectionProperties;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 解决 spring.datasource.filters=stat,wall,log4j 无法正常注册</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Primary</span> <span class="comment">// 在同样的DataSource中，首先使用被标注的DataSource</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">dataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DruidDataSource datasource = <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">        datasource.setUrl(url);</span><br><span class="line">        datasource.setUsername(username);</span><br><span class="line">        datasource.setPassword(password);</span><br><span class="line">        datasource.setDriverClassName(driverClassName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// configuration</span></span><br><span class="line">        datasource.setInitialSize(initialSize);</span><br><span class="line">        datasource.setMinIdle(minIdle);</span><br><span class="line">        datasource.setMaxActive(maxActive);</span><br><span class="line">        datasource.setMaxWait(maxWait);</span><br><span class="line">        datasource.setTimeBetweenEvictionRunsMillis(timeBetweenEvictionRunsMillis);</span><br><span class="line">        datasource.setMinEvictableIdleTimeMillis(minEvictableIdleTimeMillis);</span><br><span class="line">        datasource.setValidationQuery(validationQuery);</span><br><span class="line">        datasource.setTestWhileIdle(testWhileIdle);</span><br><span class="line">        datasource.setTestOnBorrow(testOnBorrow);</span><br><span class="line">        datasource.setTestOnReturn(testOnReturn);</span><br><span class="line">        datasource.setPoolPreparedStatements(poolPreparedStatements);</span><br><span class="line">        datasource.setMaxPoolPreparedStatementPerConnectionSize(maxPoolPreparedStatementPerConnectionSize);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            datasource.setFilters(filters);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            System.err.println(<span class="string">"druid configuration initialization filter: "</span> + e);</span><br><span class="line">        &#125;</span><br><span class="line">        datasource.setConnectionProperties(connectionProperties);</span><br><span class="line">        <span class="keyword">return</span> datasource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUrl</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUrl</span><span class="params">(String url)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.url = url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDriverClassName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> driverClassName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDriverClassName</span><span class="params">(String driverClassName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.driverClassName = driverClassName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getInitialSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> initialSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setInitialSize</span><span class="params">(<span class="keyword">int</span> initialSize)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.initialSize = initialSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMinIdle</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> minIdle;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMinIdle</span><span class="params">(<span class="keyword">int</span> minIdle)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.minIdle = minIdle;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMaxActive</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> maxActive;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMaxActive</span><span class="params">(<span class="keyword">int</span> maxActive)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.maxActive = maxActive;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMaxWait</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> maxWait;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMaxWait</span><span class="params">(<span class="keyword">int</span> maxWait)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.maxWait = maxWait;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getTimeBetweenEvictionRunsMillis</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> timeBetweenEvictionRunsMillis;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTimeBetweenEvictionRunsMillis</span><span class="params">(<span class="keyword">int</span> timeBetweenEvictionRunsMillis)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.timeBetweenEvictionRunsMillis = timeBetweenEvictionRunsMillis;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMinEvictableIdleTimeMillis</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> minEvictableIdleTimeMillis;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMinEvictableIdleTimeMillis</span><span class="params">(<span class="keyword">int</span> minEvictableIdleTimeMillis)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.minEvictableIdleTimeMillis = minEvictableIdleTimeMillis;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getValidationQuery</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> validationQuery;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setValidationQuery</span><span class="params">(String validationQuery)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.validationQuery = validationQuery;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isTestWhileIdle</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> testWhileIdle;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTestWhileIdle</span><span class="params">(<span class="keyword">boolean</span> testWhileIdle)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.testWhileIdle = testWhileIdle;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isTestOnBorrow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> testOnBorrow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTestOnBorrow</span><span class="params">(<span class="keyword">boolean</span> testOnBorrow)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.testOnBorrow = testOnBorrow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isTestOnReturn</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> testOnReturn;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTestOnReturn</span><span class="params">(<span class="keyword">boolean</span> testOnReturn)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.testOnReturn = testOnReturn;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPoolPreparedStatements</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> poolPreparedStatements;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPoolPreparedStatements</span><span class="params">(<span class="keyword">boolean</span> poolPreparedStatements)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.poolPreparedStatements = poolPreparedStatements;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMaxPoolPreparedStatementPerConnectionSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> maxPoolPreparedStatementPerConnectionSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMaxPoolPreparedStatementPerConnectionSize</span><span class="params">(<span class="keyword">int</span> maxPoolPreparedStatementPerConnectionSize)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.maxPoolPreparedStatementPerConnectionSize = maxPoolPreparedStatementPerConnectionSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFilters</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> filters;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFilters</span><span class="params">(String filters)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.filters = filters;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getConnectionProperties</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> connectionProperties;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setConnectionProperties</span><span class="params">(String connectionProperties)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.connectionProperties = connectionProperties;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-9-3-4-Step4：新建Spring安全用户明细"><a href="#1-9-3-4-Step4：新建Spring安全用户明细" class="headerlink" title="1.9.3.4    Step4：新建Spring安全用户明细"></a>1.9.3.4    Step4：新建Spring安全用户明细</h4><p>用户明细类必须继承org.springframework.security.core.userdetails.User</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zone7.admin.sys.pojo.SysUser;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.authority.SimpleGrantedAuthority;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyUserDetails</span> <span class="keyword">extends</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List grants = Arrays.asList(<span class="keyword">new</span> SimpleGrantedAuthority(<span class="string">"ROLE_ADMIN"</span>));</span><br><span class="line">    <span class="keyword">private</span> UserDto user;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyUserDetails</span><span class="params">(UserDto user)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">super</span>(user.getUsername(), user.getPassword(), <span class="keyword">true</span>, <span class="keyword">true</span>, <span class="keyword">true</span>, <span class="keyword">true</span>, grants);</span><br><span class="line">        <span class="keyword">this</span>.user = user;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserDto <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser</span><span class="params">(UserDto user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.user = user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-9-3-5-Step5：新建用户验证服务"><a href="#1-9-3-5-Step5：新建用户验证服务" class="headerlink" title="1.9.3.5    Step5：新建用户验证服务"></a>1.9.3.5    Step5：新建用户验证服务</h4><p>用于加载用户信息，当Oauth2.0的 authorization_code或者password授权模式的时候需要使用这个类验证用户信息。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zone7.admin.sys.dto.MyUserDetails;</span><br><span class="line"><span class="keyword">import</span> com.zone7.admin.sys.dto.UserDto;</span><br><span class="line"><span class="keyword">import</span> com.zone7.admin.sys.pojo.SysUser;</span><br><span class="line"><span class="keyword">import</span> com.zone7.admin.sys.service.SysUserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.GrantedAuthority;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.authority.SimpleGrantedAuthority;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UsernameNotFoundException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: UserDetailsServiceImpl</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: zgq</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/6/19 21:16</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDetailsServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserDetailsService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SysUserService sysUserService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserDetails <span class="title">loadUserByUsername</span><span class="params">(String username)</span> <span class="keyword">throws</span> UsernameNotFoundException </span>&#123;</span><br><span class="line">        SysUser user = sysUserService.findByKeyword(username);</span><br><span class="line">        <span class="keyword">if</span>(user==<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UsernameNotFoundException(<span class="string">"用户不存在!"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> UserDetailConverter.convert(user);</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDetailConverter</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> UserDetails <span class="title">convert</span><span class="params">(SysUser user)</span> </span>&#123;</span><br><span class="line">            UserDto dto=<span class="keyword">new</span> UserDto();</span><br><span class="line">            BeanUtils.copyProperties(user,dto);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> MyUserDetails(dto);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-9-3-6-Step6：新增密钥编码解码器"><a href="#1-9-3-6-Step6：新增密钥编码解码器" class="headerlink" title="1.9.3.6    Step6：新增密钥编码解码器"></a>1.9.3.6    Step6：新增密钥编码解码器</h4><p>主要用于密码验证</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zone7.admin.utils.SHA256Util;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 密钥编码器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Authod</span> zone7</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Sha256PasswordEncoder</span> <span class="keyword">implements</span> <span class="title">PasswordEncoder</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">encode</span><span class="params">(CharSequence charSequence)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> SHA256Util.getSHA256StrJava(charSequence.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">matches</span><span class="params">(CharSequence charSequence, String s)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> s.equals(SHA256Util.getSHA256StrJava(charSequence.toString()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-9-3-7-Step7：新增配置类"><a href="#1-9-3-7-Step7：新增配置类" class="headerlink" title="1.9.3.7    Step7：新增配置类"></a>1.9.3.7    Step7：新增配置类</h4><ul><li>(1)    Oauth2.0授权配置类AuthorizationServerConfigurerAdapter </li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.zone7.admin.config.oauth2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zone7.admin.sys.service.impl.UserDetailsServiceImpl;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Primary;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.Order;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.AuthenticationManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.authentication.configurers.ldap.LdapAuthenticationProviderConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.config.annotation.web.configuration.EnableAuthorizationServer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerSecurityConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.provider.ClientDetailsService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.provider.client.JdbcClientDetailsService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.provider.token.DefaultTokenServices;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.provider.token.TokenStore;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.provider.token.store.JdbcTokenStore;</span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 授权服务配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableAuthorizationServer</span></span><br><span class="line"><span class="meta">@Order</span>(<span class="number">7</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OAuth2ServerConfig</span> <span class="keyword">extends</span> <span class="title">AuthorizationServerConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Bean</span> <span class="comment">// 声明TokenStore实现</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> TokenStore <span class="title">tokenStore</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> JdbcTokenStore(dataSource);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Bean</span> <span class="comment">// 声明 ClientDetails实现</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> ClientDetailsService <span class="title">clientDetails</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> JdbcClientDetailsService(dataSource);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 注入authenticationManager</span></span><br><span class="line"><span class="comment">    * 来支持 password grant type</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Autowired</span></span><br><span class="line">   <span class="keyword">private</span> AuthenticationManager authenticationManager;</span><br><span class="line">   <span class="meta">@Autowired</span></span><br><span class="line">   <span class="keyword">private</span> DataSource dataSource;</span><br><span class="line">   <span class="meta">@Autowired</span></span><br><span class="line">   <span class="keyword">private</span> TokenStore tokenStore;</span><br><span class="line">   <span class="meta">@Autowired</span></span><br><span class="line">   <span class="keyword">private</span> ClientDetailsService clientDetails;</span><br><span class="line">   <span class="meta">@Autowired</span></span><br><span class="line">   <span class="keyword">private</span> UserDetailsServiceImpl userDetailsService;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="meta">@Primary</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> DefaultTokenServices <span class="title">tokenServices</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      DefaultTokenServices tokenServices = <span class="keyword">new</span> DefaultTokenServices();</span><br><span class="line">      tokenServices.setSupportRefreshToken(<span class="keyword">true</span>);</span><br><span class="line">      tokenServices.setTokenStore(tokenStore);</span><br><span class="line">      <span class="keyword">return</span> tokenServices;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthorizationServerSecurityConfigurer oauthServer)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      oauthServer</span><br><span class="line">            .passwordEncoder(<span class="keyword">new</span> MyPasswordEncoder())</span><br><span class="line">            .tokenKeyAccess(<span class="string">"permitAll()"</span>) <span class="comment">//url:/oauth/token_key,exposes public key for token verification if using JWT tokens</span></span><br><span class="line">            .checkTokenAccess(<span class="string">"isAuthenticated()"</span>) <span class="comment">//url:/oauth/check_token allow check token</span></span><br><span class="line">            .allowFormAuthenticationForClients();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthorizationServerEndpointsConfigurer endpoints)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      endpoints.authenticationManager(authenticationManager);</span><br><span class="line">      endpoints.tokenStore(tokenStore());</span><br><span class="line">      endpoints.userDetailsService(userDetailsService);</span><br><span class="line">      endpoints.setClientDetailsService(clientDetails);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//配置TokenServices参数</span></span><br><span class="line">      DefaultTokenServices tokenServices = <span class="keyword">new</span> DefaultTokenServices();</span><br><span class="line">      tokenServices.setTokenStore(endpoints.getTokenStore());</span><br><span class="line">      tokenServices.setSupportRefreshToken(<span class="keyword">true</span>);</span><br><span class="line">      tokenServices.setClientDetailsService(endpoints.getClientDetailsService());</span><br><span class="line"></span><br><span class="line">      tokenServices.setTokenEnhancer(endpoints.getTokenEnhancer());</span><br><span class="line">      tokenServices.setAccessTokenValiditySeconds((<span class="keyword">int</span>) TimeUnit.DAYS.toSeconds(<span class="number">1</span>)); <span class="comment">// 1天</span></span><br><span class="line">      endpoints.tokenServices(tokenServices);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(ClientDetailsServiceConfigurer clients)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      clients.jdbc(dataSource).passwordEncoder(<span class="keyword">new</span> MyPasswordEncoder());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>(2)    资源配置类ResourceServerConfigurerAdapter</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.config.annotation.web.configuration.EnableResourceServer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.config.annotation.web.configurers.ResourceServerSecurityConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 资源服务配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableResourceServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResourceServerConfig</span> <span class="keyword">extends</span> <span class="title">ResourceServerConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      http.requestMatchers().antMatchers(<span class="string">"/api/**"</span>)</span><br><span class="line">            .and()</span><br><span class="line">            .authorizeRequests().antMatchers(<span class="string">"/api/**"</span>).authenticated();</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(ResourceServerSecurityConfigurer resources)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      resources.resourceId(<span class="string">"resourcesId"</span>).stateless(<span class="keyword">true</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>(3)    WEB安全配置类WebSecurityConfigurerAdapter</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zone7.admin.sys.service.impl.UserDetailsServiceImpl;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.Order;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.AuthenticationManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.WebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="meta">@EnableGlobalMethodSecurity</span>(prePostEnabled = <span class="keyword">true</span>, proxyTargetClass = <span class="keyword">true</span>)</span><br><span class="line"><span class="meta">@Order</span>(<span class="number">100</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebSecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      http.csrf().disable();</span><br><span class="line">      http.anonymous().disable();</span><br><span class="line"></span><br><span class="line">      http.requestMatchers().antMatchers(<span class="string">"/oauth/**"</span>,<span class="string">"/login/**"</span>,<span class="string">"/logout/**"</span>)</span><br><span class="line">            .and()</span><br><span class="line">            .authorizeRequests()</span><br><span class="line">            .antMatchers(<span class="string">"/oauth/**"</span>,<span class="string">"/login/**"</span>,<span class="string">"/logout/**"</span>).authenticated()</span><br><span class="line">            .and()</span><br><span class="line"></span><br><span class="line">            .formLogin().permitAll();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(WebSecurity web)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      <span class="comment">//设置静态资源不要拦截</span></span><br><span class="line">      web.ignoring().antMatchers(<span class="string">"/js/**"</span>,<span class="string">"/cs/**"</span>,<span class="string">"/images/**"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="meta">@Autowired</span></span><br><span class="line">   <span class="keyword">private</span> UserDetailsServiceImpl userDetailsService;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      auth.userDetailsService(userDetailsService).passwordEncoder(<span class="keyword">new</span> Sha256PasswordEncoder());</span><br><span class="line"></span><br><span class="line"><span class="comment">//    auth.inMemoryAuthentication().passwordEncoder(new Sha256PasswordEncoder())</span></span><br><span class="line"><span class="comment">//          .withUser("admin").password("123456").roles("ADMIN","USER").and()</span></span><br><span class="line"><span class="comment">//          .withUser("user").password("111").roles("USER");</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 需要配置这个支持password模式 support password grant type</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> AuthenticationManager <span class="title">authenticationManagerBean</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">super</span>.authenticationManagerBean();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-9-3-8-Step8：测试"><a href="#1-9-3-8-Step8：测试" class="headerlink" title="1.9.3.8    Step8：测试"></a>1.9.3.8    Step8：测试</h4><p>启动数据和应用程序，使用Postman<br>首先添加一个http请求，请求地址为资源配置类中配置的路径，例如：<br> <img src="https://zone-7.github.io/img/springboot/1.9.3.8a.png" alt="postman测试oauth2"></p><p>点击Get New Access Token 按钮。分别使用不同的授权模式测试授权服务器获取令牌的功能。</p><p> <img src="https://zone-7.github.io/img/springboot/1.9.3.8b1.png" alt="postman测试oauth2 token1"><br> <img src="https://zone-7.github.io/img/springboot/1.9.3.8b2.png" alt="postman测试oauth2 token2"><br> <img src="https://zone-7.github.io/img/springboot/1.9.3.8b3.png" alt="postman测试oauth2 token3"></p><p>点击Request Token 得到Token<br>  <img src="https://zone-7.github.io/img/springboot/1.9.3.8c.png" alt="postman测试oauth2 get token "></p>]]></content>
      
      
      <categories>
          
          <category> springboot&amp;vue前后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> VUE </tag>
            
            <tag> oauth </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.8 Springboot&amp;VUE开发实践（SpringBoot整合MongoDB）</title>
      <link href="/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.8SpringBoot%20%E6%95%B4%E5%90%88MongoDB%EF%BC%89/"/>
      <url>/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.8SpringBoot%20%E6%95%B4%E5%90%88MongoDB%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1-8-整合MongoDB"><a href="#1-8-整合MongoDB" class="headerlink" title="1.8    整合MongoDB"></a>1.8    整合MongoDB</h2><h3 id="1-8-1-MongoDB简介"><a href="#1-8-1-MongoDB简介" class="headerlink" title="1.8.1    MongoDB简介"></a>1.8.1    MongoDB简介</h3><p>MongoDB（来自于英文单词“Humongous”，中文含义为“庞大”）是可以应用于各种规模的企业、各个行业以及各类应用程序的开源数据库。基于分布式文件存储的数据库。由C++语言编写。旨在为WEB应用提供可扩展的高性能数据存储解决方案。MongoDB是一个高性能，开源，无模式的文档型数据库，是当前NoSql数据库中比较热门的一种。<br>MongoDB是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。他支持的数据结构非常松散，是类似json的bjson格式，因此可以存储比较复杂的数据类型。Mongo最大的特点是他支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。<br>传统的关系数据库一般由数据库（database）、表（table）、记录（record）三个层次概念组成，MongoDB是由数据库（database）、集合（collection）、文档对象（document）三个层次组成。MongoDB对于关系型数据库里的表，但是集合中没有列、行和关系概念，这体现了模式自由的特点。<br>MongoDB 在实际应用中我们最常用到的是collection和gridFS两个功能，collection一般用于存储bjson数据，gridFS用于存储文件。</p><h3 id="1-8-2-配置工程"><a href="#1-8-2-配置工程" class="headerlink" title="1.8.2    配置工程"></a>1.8.2    配置工程</h3><p>在pox.xml文件中添加spring-boot-starter-data-mongodb引用</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-mongodb<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>application-dev.properties 增加mongoDB配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#==================  mongoDB 配置 ===================#</span><br><span class="line">spring.data.mongodb.host=localhost</span><br><span class="line">spring.data.mongodb.port=27017</span><br><span class="line">spring.data.mongodb.database=test</span><br></pre></td></tr></table></figure><p>开发机遇注解的配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.zone7.demo.helloworld.config.mongodb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mongodb.client.gridfs.GridFSBucket;</span><br><span class="line"><span class="keyword">import</span> com.mongodb.client.gridfs.GridFSBuckets;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.MongoDbFactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * MongoDB配置类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zone7</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/5/7</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MongoDbConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MongoDbFactory mongoDbFactory;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> GridFSBucket <span class="title">gridFSBucket</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> GridFSBuckets.create(mongoDbFactory.getDb());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-8-3-案例开发"><a href="#1-8-3-案例开发" class="headerlink" title="1.8.3    案例开发"></a>1.8.3    案例开发</h3><p>开发服务层代码，代码中引入三个对象，分别是  MongoTemplate 、GridFsTemplate、GridFSBucket，MongoTemplate主要用于操作mongodb的collection，GridFsTemplate和GridFSBucket主要操作mongodb的GridFS文件系统;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.zone7.demo.helloworld.sys.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mongodb.client.gridfs.GridFSBucket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mongodb.client.gridfs.GridFSDownloadStream;</span><br><span class="line"><span class="keyword">import</span> com.mongodb.client.gridfs.model.GridFSFile;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.config.exception.GlobalException;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.pojo.SysUser;</span><br><span class="line"><span class="keyword">import</span> org.bson.types.ObjectId;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.MongoTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.query.Criteria;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.query.Query;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.query.Update;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.gridfs.GridFsResource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.gridfs.GridFsTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StreamUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 描述:</span></span><br><span class="line"><span class="comment"> * mongo</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zone7</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/8/9 10:24</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MongoDBServiceImpl</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(MongoDBServiceImpl.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MongoTemplate mongoTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> GridFSBucket gridFSBucket;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> GridFsTemplate gridFsTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveObj</span><span class="params">(SysUser user)</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"---------------------&gt;[MongoDB save start]"</span>);</span><br><span class="line">        mongoTemplate.save(user);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;SysUser&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"---------------------&gt;[MongoDB find start]"</span>);</span><br><span class="line">        <span class="keyword">return</span> mongoTemplate.findAll(SysUser.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 根据id查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SysUser <span class="title">getById</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"---------------------&gt;[MongoDB find start]"</span>);</span><br><span class="line">        Query query = <span class="keyword">new</span> Query(Criteria.where(<span class="string">"_id"</span>).is(id));</span><br><span class="line">        <span class="keyword">return</span> mongoTemplate.findOne(query, SysUser.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据名称查询</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SysUser <span class="title">getBookByName</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"---------------------&gt;[MongoDB find start]"</span>);</span><br><span class="line">        Query query = <span class="keyword">new</span> Query(Criteria.where(<span class="string">"username"</span>).is(username));</span><br><span class="line">        <span class="keyword">return</span> mongoTemplate.findOne(query, SysUser.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(SysUser user)</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"---------------------&gt;[MongoDB update start]"</span>);</span><br><span class="line">        Query query = <span class="keyword">new</span> Query(Criteria.where(<span class="string">"_id"</span>).is(user.getId()));</span><br><span class="line">        Update update = <span class="keyword">new</span> Update().set(<span class="string">"password"</span>, user.getPassword())</span><br><span class="line">                .set(<span class="string">"name"</span>, user.getName())</span><br><span class="line">                .set(<span class="string">"updateTime"</span>, <span class="keyword">new</span> Date());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//updateFirst 更新查询返回结果集的第一条</span></span><br><span class="line">        mongoTemplate.updateFirst(query, update, SysUser.class);</span><br><span class="line">        <span class="comment">//updateMulti 更新查询返回结果集的全部</span></span><br><span class="line"><span class="comment">//        mongoTemplate.updateMulti(query,update,SysUser.class);</span></span><br><span class="line">        <span class="comment">//upsert 更新对象不存在则去添加</span></span><br><span class="line"><span class="comment">//        mongoTemplate.upsert(query,update,SysUser.class);</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 删除对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(SysUser user)</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"---------------------&gt;[MongoDB delete start]"</span>);</span><br><span class="line">        mongoTemplate.remove(user);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id删除</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteById</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"---------------------&gt;[MongoDB delete start]"</span>);</span><br><span class="line">        <span class="comment">//findOne</span></span><br><span class="line">        SysUser book = getById(id);</span><br><span class="line">        <span class="comment">//delete</span></span><br><span class="line">        delete(book);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> input</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">saveFile</span><span class="params">(<span class="keyword">byte</span>[] input,String name)</span></span>&#123;</span><br><span class="line">        ObjectId objectId=gridFsTemplate.store(<span class="keyword">new</span> ByteArrayInputStream(input) ,name);</span><br><span class="line">        String s = objectId.toString();</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加载文件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">byte</span>[] loadFile(String id)   &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Query query = Query.query(Criteria.where(<span class="string">"_id"</span>).is(id));</span><br><span class="line">            GridFSFile gfsFile = gridFsTemplate.findOne(Query.query(Criteria.where(<span class="string">"_id"</span>).is(id)));</span><br><span class="line"></span><br><span class="line">            String filename = gfsFile.getFilename();</span><br><span class="line"></span><br><span class="line">            logger.info(<span class="string">"加载mongodb gf 文件名："</span>+filename);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//打开流下载对象</span></span><br><span class="line">            GridFSDownloadStream downloadStream = gridFSBucket.openDownloadStream(gfsFile.getObjectId());</span><br><span class="line">            <span class="comment">//获取流对象</span></span><br><span class="line">            GridFsResource gridFsResource = <span class="keyword">new</span> GridFsResource(gfsFile, downloadStream);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> StreamUtils.copyToByteArray(gridFsResource.getInputStream());</span><br><span class="line">        &#125;<span class="keyword">catch</span>(IOException e)&#123;</span><br><span class="line">            logger.error(<span class="string">"读取mongodb文件错误"</span>,e);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> GlobalException(<span class="string">"读取mongodb文件错误"</span>,e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>开发一个控制层用于测试调用服务层。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.zone7.demo.helloworld.sys.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.commons.response.ResponseData;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.pojo.SysUser;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.service.MongoDBService;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.service.RabbitService;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.vo.SysUserVo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * mongodb 测试Controller</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: zone7</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/06/17</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/mongo"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MongoDBController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MongoDBService mongoDBService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/save"</span>,method = RequestMethod.POST)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseData <span class="title">save</span><span class="params">(SysUserVo userVo)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        SysUser user =   SysUser.builder().build();</span><br><span class="line"></span><br><span class="line">        BeanUtils.copyProperties(userVo,user);</span><br><span class="line">        mongoDBService.saveObj(user);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ResponseData.successMessage(<span class="string">"保存成功"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/findAll"</span> )</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseData <span class="title">save</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;SysUser&gt; users  = mongoDBService.findAll();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ResponseData.success(users);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/saveFile"</span> )</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseData <span class="title">saveFile</span><span class="params">(String content,String name)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        String id = mongoDBService.saveFile(content.getBytes(),name);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ResponseData.success(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/loadFile"</span> )</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseData <span class="title">loadFile</span><span class="params">( String id)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] content = mongoDBService.loadFile(id);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ResponseData.success(<span class="keyword">new</span> String(content));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来需要确保mongodb已经启动，然后启动工程，使用Postman进行测试：<br><img src="https://zone-7.github.io/img/springboot/1.8.3a.png" alt="mongo1"><br>查看mongo数据库发现已经自动创建了一个collection并增加了一条信息：<br><img src="https://zone-7.github.io/img/springboot/1.8.3b.png" alt="mongo1"><br>接着我们再继续测试剩下的几个接口：<br>加载所有对象<br><img src="https://zone-7.github.io/img/springboot/1.8.3c.png" alt="mongo1"></p><p>保存文件，这里为了简化操作，使用字符串作为文件内容来进行测试。<br> <img src="https://zone-7.github.io/img/springboot/1.8.3d.png" alt="mongo1"><br>文件保存成功，我们打开mongo客户端可以查看到数据库多了一个fs的buckets<br> <img src="https://zone-7.github.io/img/springboot/1.8.3e.png" alt="mongo1"><br>最后我们再做一次加载文件测试<br> <img src="https://zone-7.github.io/img/springboot/1.8.3f.png" alt="mongo1"></p>]]></content>
      
      
      <categories>
          
          <category> springboot&amp;vue前后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> VUE </tag>
            
            <tag> mongodb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.7 Springboot&amp;VUE开发实践（SpringBoot 整合RabbitMQ）</title>
      <link href="/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.7SpringBoot%20%E6%95%B4%E5%90%88RabbitMQ%EF%BC%89/"/>
      <url>/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.7SpringBoot%20%E6%95%B4%E5%90%88RabbitMQ%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1-7-整合RabbitMQ"><a href="#1-7-整合RabbitMQ" class="headerlink" title="1.7    整合RabbitMQ"></a>1.7    整合RabbitMQ</h2><h3 id="1-7-1-RabbitMQ简介"><a href="#1-7-1-RabbitMQ简介" class="headerlink" title="1.7.1    RabbitMQ简介"></a>1.7.1    RabbitMQ简介</h3><p>AMQP，即Advanced Message Queuing Protocol，高级消息队列协议，是应用层协议的一个开放标准，为面向消息的中间件设计。消息中间件主要用于组件之间的解耦，消息的发送者无需知道消息使用者的存在，反之亦然。 AMQP的主要特征是面向消息、队列、路由（包括点对点和发布/订阅）、可靠性、安全。 RabbitMQ是一个开源的AMQP实现，服务器端用Erlang语言编写，支持多种客户端，如：Python、Ruby、.NET、Java、JMS、C、PHP、ActionScript、XMPP、STOMP等，支持AJAX。用于在分布式系统中存储转发消息，在易用性、扩展性、高可用性等方面表现不俗。<br>在开发过程中，我们需要了解RabbitMQ的消息交换类型（Exchange 类型）：</p><p>Exchange分发消息时根据类型的不同分发策略有区别，目前共四种类型：direct、fanout、topic、headers 。只说前三种模式。</p><ul><li>(1)    Direct模式</li></ul><p>消息中的路由键（routing key）如果和 Binding 中的 binding key 一致， 交换器就将消息发到对应的队列中。路由键与队列名完全匹配</p><ul><li>(2)    Topic模式</li></ul><p>topic 交换器通过模式匹配分配消息的路由键属性，将路由键和某个模式进行匹配，此时队列需要绑定到一个模式上。它将路由键和绑定键的字符串切分成单词，这些单词之间用点隔开。它同样也会识别两个通配符：符号“#”和符号“<em>”。#匹配0个或多个单词，</em>匹配一个单词。</p><ul><li>(3)    Fanout模式</li></ul><p>每个发到 fanout 类型交换器的消息都会分到所有绑定的队列上去。fanout 交换器不处理路由键，只是简单的将队列绑定到交换器上，每个发送到交换器的消息都会被转发到与该交换器绑定的所有队列上。很像子网广播，每台子网内的主机都获得了一份复制的消息。fanout 类型转发消息是最快的。</p><h3 id="1-7-2-配置工程"><a href="#1-7-2-配置工程" class="headerlink" title="1.7.2    配置工程"></a>1.7.2    配置工程</h3><p>Pom配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-amqp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">application-dev.properties 配置</span><br><span class="line">#==================  RabbitMq  ===================#</span><br><span class="line">spring.rabbitmq.host=localhost</span><br><span class="line">spring.rabbitmq.port=5672</span><br><span class="line">spring.rabbitmq.username=admin</span><br><span class="line">spring.rabbitmq.password=admin</span><br><span class="line"></span><br><span class="line">#==================  RabbitMq 队列配置 ===================#</span><br><span class="line">mq.env=local</span><br><span class="line">basic.info.mq.exchange.name=$&#123;mq.env&#125;:sys:info:mq:exchange</span><br><span class="line">basic.info.mq.routing.key.name=$&#123;mq.env&#125;:sys:info:mq:routing:key</span><br><span class="line">basic.info.mq.queue.name=$&#123;mq.env&#125;:sys:info:mq:queue</span><br></pre></td></tr></table></figure><p>创建RabbitmqConfig，在配置类中创建队列、交换机、路由及其绑定。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.zone7.demo.helloworld.config.rabbitmq;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.service.impl.CustomerMqServiceImpl;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.config.SimpleRabbitListenerContainerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.connection.CachingConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.connection.ConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.connection.CorrelationData;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.core.RabbitTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.support.converter.Jackson2JsonMessageConverter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.amqp.SimpleRabbitListenerContainerFactoryConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.env.Environment;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * RabbitMq配置类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> wangsk</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/5/20</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RabbitMqConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger log= LoggerFactory.getLogger(RabbitMqConfig.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Environment env;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CachingConnectionFactory connectionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SimpleRabbitListenerContainerFactoryConfigurer factoryConfigurer;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 单一消费者</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"singleListenerContainer"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> SimpleRabbitListenerContainerFactory <span class="title">listenerContainer</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SimpleRabbitListenerContainerFactory factory = <span class="keyword">new</span> SimpleRabbitListenerContainerFactory();</span><br><span class="line">        factory.setConnectionFactory(connectionFactory);</span><br><span class="line">        factory.setMessageConverter(<span class="keyword">new</span> Jackson2JsonMessageConverter());</span><br><span class="line">        factory.setConcurrentConsumers(<span class="number">1</span>);</span><br><span class="line">        factory.setMaxConcurrentConsumers(<span class="number">1</span>);</span><br><span class="line">        factory.setPrefetchCount(<span class="number">1</span>);</span><br><span class="line">        factory.setTxSize(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> factory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 多个消费者</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"multiListenerContainer"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> SimpleRabbitListenerContainerFactory <span class="title">multiListenerContainer</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SimpleRabbitListenerContainerFactory factory = <span class="keyword">new</span> SimpleRabbitListenerContainerFactory();</span><br><span class="line">        factoryConfigurer.configure(factory,connectionFactory);</span><br><span class="line">        factory.setMessageConverter(<span class="keyword">new</span> Jackson2JsonMessageConverter());</span><br><span class="line">        factory.setAcknowledgeMode(AcknowledgeMode.NONE);</span><br><span class="line">        factory.setConcurrentConsumers(env.getProperty(<span class="string">"spring.rabbitmq.listener.concurrency"</span>,<span class="keyword">int</span>.class));</span><br><span class="line">        factory.setMaxConcurrentConsumers(env.getProperty(<span class="string">"spring.rabbitmq.listener.max-concurrency"</span>,<span class="keyword">int</span>.class));</span><br><span class="line">        factory.setPrefetchCount(env.getProperty(<span class="string">"spring.rabbitmq.listener.prefetch"</span>,<span class="keyword">int</span>.class));</span><br><span class="line">        <span class="keyword">return</span> factory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RabbitTemplate <span class="title">rabbitTemplate</span><span class="params">()</span></span>&#123;</span><br><span class="line">        connectionFactory.setPublisherConfirms(<span class="keyword">true</span>);</span><br><span class="line">        connectionFactory.setPublisherReturns(<span class="keyword">true</span>);</span><br><span class="line">        RabbitTemplate rabbitTemplate = <span class="keyword">new</span> RabbitTemplate(connectionFactory);</span><br><span class="line">        rabbitTemplate.setMandatory(<span class="keyword">true</span>);</span><br><span class="line">        rabbitTemplate.setConfirmCallback(<span class="keyword">new</span> RabbitTemplate.ConfirmCallback() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">confirm</span><span class="params">(CorrelationData correlationData, <span class="keyword">boolean</span> ack, String cause)</span> </span>&#123;</span><br><span class="line">                log.info(<span class="string">"消息发送成功:correlationData(&#123;&#125;),ack(&#123;&#125;),cause(&#123;&#125;)"</span>,correlationData,ack,cause);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        rabbitTemplate.setReturnCallback(<span class="keyword">new</span> RabbitTemplate.ReturnCallback() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">returnedMessage</span><span class="params">(Message message, <span class="keyword">int</span> replyCode, String replyText, String exchange, String routingKey)</span> </span>&#123;</span><br><span class="line">                log.info(<span class="string">"消息丢失:exchange(&#123;&#125;),route(&#123;&#125;),replyCode(&#123;&#125;),replyText(&#123;&#125;),message:&#123;&#125;"</span>,exchange,routingKey,replyCode,replyText,message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> rabbitTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//TODO：基本消息模型构建</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DirectExchange <span class="title">basicExchange</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DirectExchange(env.getProperty(<span class="string">"basic.info.mq.exchange.name"</span>), <span class="keyword">true</span>,<span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"basicQueue"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">basicQueue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Queue(env.getProperty(<span class="string">"basic.info.mq.queue.name"</span>), <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Binding <span class="title">basicBinding</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> BindingBuilder.bind(basicQueue()).to(basicExchange()).with(env.getProperty(<span class="string">"basic.info.mq.routing.key.name"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-7-3-案例开发"><a href="#1-7-3-案例开发" class="headerlink" title="1.7.3    案例开发"></a>1.7.3    案例开发</h3><ul><li><p>(1)    创建服务层代码<br>首先开发一个带有消息接收监听功能和消息发送功能的服务。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.zone7.demo.helloworld.sys.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.AMQP;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Channel;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.service.RabbitService;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.Message;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.MessageBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.annotation.RabbitListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.core.RabbitTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.listener.api.ChannelAwareMessageListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.support.converter.Jackson2JsonMessageConverter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.env.Environment;</span><br><span class="line"><span class="keyword">import</span> org.springframework.messaging.handler.annotation.Payload;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.charset.Charset;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 消息监听器以及发送服务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RabbitServiceImpl</span> <span class="keyword">implements</span> <span class="title">RabbitService</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger log= LoggerFactory.getLogger(RabbitServiceImpl.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Environment env;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RabbitTemplate rabbitTemplate;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 消息消费</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RabbitListener</span>(queues = <span class="string">"$&#123;basic.info.mq.queue.name&#125;"</span>,containerFactory = <span class="string">"singleListenerContainer"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">consumeMessage</span><span class="params">(@Payload <span class="keyword">byte</span>[] message)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//TODO：接收String</span></span><br><span class="line">            String result=<span class="keyword">new</span> String(message,<span class="string">"UTF-8"</span>);</span><br><span class="line">            log.info(<span class="string">"接收String消息： &#123;&#125; "</span>,result);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            log.error(<span class="string">"监听消费消息 发生异常： "</span>,e.fillInStackTrace());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 消息发送</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            log.info(<span class="string">"待发送的消息： &#123;&#125; "</span>,message);</span><br><span class="line"></span><br><span class="line">            rabbitTemplate.setMessageConverter(<span class="keyword">new</span> Jackson2JsonMessageConverter());</span><br><span class="line">            rabbitTemplate.setExchange(env.getProperty(<span class="string">"basic.info.mq.exchange.name"</span>));</span><br><span class="line">            rabbitTemplate.setRoutingKey(env.getProperty(<span class="string">"basic.info.mq.routing.key.name"</span>));</span><br><span class="line"></span><br><span class="line">            Message msg= MessageBuilder.withBody(message.getBytes(Charset.forName(<span class="string">"UTF-8"</span>))).build();</span><br><span class="line">            rabbitTemplate.convertAndSend(msg);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            log.error(<span class="string">"发送简单消息发生异常： "</span>,e.fillInStackTrace());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>(2)    创建控制层代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.zone7.demo.helloworld.sys.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.commons.response.ResponseData;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.service.RabbitService;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.service.RedisService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: zone7</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/06/17</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/rabbit"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RabbitController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RabbitService rabbitService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/send/&#123;message&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseData <span class="title">send</span><span class="params">(@PathVariable String message )</span></span>&#123;</span><br><span class="line">        rabbitService.sendMessage(message);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ResponseData.successMessage(<span class="string">"发送消息： "</span>+message+<span class="string">"成功"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>(3)    测试效果<br>确保Rabbit已经启动，启动工程后在浏览器中输入<br><strong><a href="http://localhost:8080/rabbit/send/hello" target="_blank" rel="noopener">http://localhost:8080/rabbit/send/hello</a></strong><br>我们将会看到以下信息：<br><img src="https://zone-7.github.io/img/springboot/1.7.3a.png" alt="rabbit1"><br>同时查看控制台输出，确认消息发送成功并已经被消费。</p><p><img src="https://zone-7.github.io/img/springboot/1.7.3b.png" alt="rabbit2"><br><img src="https://zone-7.github.io/img/springboot/1.7.3c.png" alt="rabbit3"><br>通过rabbit监控网页<a href="http://localhost:15672/" target="_blank" rel="noopener">http://localhost:15672/</a> 我们可看到队列、交换机、路由等信息。<br><img src="https://zone-7.github.io/img/springboot/1.7.3d.png" alt="rabbit4"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> springboot&amp;vue前后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> VUE </tag>
            
            <tag> rabbit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.6 Springboot&amp;VUE开发实践（SpringBoot 整合Redis）</title>
      <link href="/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.6SpringBoot%20%E6%95%B4%E5%90%88Redis%EF%BC%89/"/>
      <url>/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.6SpringBoot%20%E6%95%B4%E5%90%88Redis%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1-6-整合Redis"><a href="#1-6-整合Redis" class="headerlink" title="1.6    整合Redis"></a>1.6    整合Redis</h2><h3 id="1-6-1-Redis简介"><a href="#1-6-1-Redis简介" class="headerlink" title="1.6.1    Redis简介"></a>1.6.1    Redis简介</h3><p>Redis 是一个完全开源免费的，遵守BSD协议的，具备高性能的key-value数据库。<br>Redis缓存产品有以下三个特点：</p><ul><li>Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。</li><li>Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。</li><li>Redis支持数据的备份，即master-slave模式的数据备份。</li></ul><h3 id="1-6-2-配置工程"><a href="#1-6-2-配置工程" class="headerlink" title="1.6.2    配置工程"></a>1.6.2    配置工程</h3><p>在Spring支持的Redis操作中提供有一个RedisTemplate处理类，利用这个类可以非常方便的实现Redis的各种基本操作。<br>首先需要修改Pom 文件增加redis依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">&lt;!--redis--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--redis--&gt;</span></span><br></pre></td></tr></table></figure><p>其次修改application-dev.properties配置文件（springboot的主要配置文件为application.yml或application.properties，这里我们以第一个工程的例子为基础进行介绍）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#==================  redis  ===================#</span><br><span class="line"># redis 单节点地址</span><br><span class="line">spring.redis.host=localhost</span><br><span class="line"># redis 集群</span><br><span class="line">#spring.redis.cluster.nodes=192.168.177.128:7001,192.168.177.128:7002,192.168.177.128:7003</span><br><span class="line">#spring.redis.cluster.max-redirects=3</span><br><span class="line"># Redis 数据库</span><br><span class="line">spring.redis.database=0</span><br><span class="line"># Redis 端口</span><br><span class="line">spring.redis.port=6379</span><br><span class="line"># Redis 密码</span><br><span class="line">spring.redis.password=</span><br><span class="line"># 连接池最大连接数（使用负值表示没有限制）</span><br><span class="line">spring.redis.jedis.pool.max-active=8 </span><br><span class="line"># 连接池最大阻塞等待时间（使用负值表示没有限制）</span><br><span class="line">spring.redis.jedis.pool.max-wait=-1</span><br><span class="line"># 连接池中的最大空闲连接</span><br><span class="line">spring.redis.jedis.pool.max-idle=8</span><br><span class="line"># 连接池中的最小空闲连接</span><br><span class="line">spring.redis.jedis.pool.min-idle=0</span><br><span class="line"># 连接超时时间（毫秒）</span><br><span class="line">spring.redis.timeout=3000</span><br><span class="line"></span><br><span class="line"># 其他redis配置可参考网络资源</span><br></pre></td></tr></table></figure><p>添加注解配置类，主要用于配置RedisTemplate和CacheManager两个组件。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.zone7.admin.config.redis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonAutoDetect;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.PropertyAccessor;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.zone7.admin.utils.RedisUtil;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.CacheManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.annotation.CachingConfigurerSupport;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.annotation.EnableCaching;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.interceptor.KeyGenerator;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.cache.RedisCacheConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.cache.RedisCacheManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.RedisConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.RedisSerializationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.RedisSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.StringRedisSerializer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.time.Duration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * RedisConfig</span></span><br><span class="line"><span class="comment"> * Redis配置类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: zone7</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@time</span>: 2018.08.20</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableCaching</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisConfig</span> <span class="keyword">extends</span> <span class="title">CachingConfigurerSupport</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RedisTemplate&lt;String, Object&gt; <span class="title">redisTemplate</span><span class="params">(RedisConnectionFactory factory)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        RedisTemplate&lt;String, Object&gt; template = <span class="keyword">new</span> RedisTemplate&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        RedisSerializer&lt;String&gt; redisSerializer = <span class="keyword">new</span> StringRedisSerializer();</span><br><span class="line"></span><br><span class="line">        Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = <span class="keyword">new</span> Jackson2JsonRedisSerializer(Object.class);</span><br><span class="line">        ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">        om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);</span><br><span class="line">        jackson2JsonRedisSerializer.setObjectMapper(om);</span><br><span class="line"></span><br><span class="line">        template.setConnectionFactory(factory);</span><br><span class="line">        <span class="comment">//key序列化方式</span></span><br><span class="line">        template.setKeySerializer(redisSerializer);</span><br><span class="line">        <span class="comment">//value序列化</span></span><br><span class="line">        template.setValueSerializer(jackson2JsonRedisSerializer);</span><br><span class="line">        <span class="comment">//value hashmap序列化</span></span><br><span class="line">        template.setHashValueSerializer(jackson2JsonRedisSerializer);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> template;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CacheManager <span class="title">cacheManager</span><span class="params">(RedisConnectionFactory factory)</span> </span>&#123;</span><br><span class="line">        RedisSerializer&lt;String&gt; redisSerializer = <span class="keyword">new</span> StringRedisSerializer();</span><br><span class="line">        Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = <span class="keyword">new</span> Jackson2JsonRedisSerializer(Object.class);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//解决查询缓存转换异常的问题</span></span><br><span class="line">        ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">        om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);</span><br><span class="line">        jackson2JsonRedisSerializer.setObjectMapper(om);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 配置序列化（解决乱码的问题）,过期时间30秒</span></span><br><span class="line">        RedisCacheConfiguration config = RedisCacheConfiguration.defaultCacheConfig()</span><br><span class="line">                .entryTtl(Duration.ofSeconds(<span class="number">30</span>))</span><br><span class="line">                .serializeKeysWith(RedisSerializationContext.SerializationPair.fromSerializer(redisSerializer))</span><br><span class="line">                .serializeValuesWith(RedisSerializationContext.SerializationPair.fromSerializer(jackson2JsonRedisSerializer))</span><br><span class="line">                .disableCachingNullValues();</span><br><span class="line"></span><br><span class="line">        RedisCacheManager cacheManager = RedisCacheManager.builder(factory)</span><br><span class="line">                .cacheDefaults(config)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="keyword">return</span> cacheManager;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-6-3-案例开发"><a href="#1-6-3-案例开发" class="headerlink" title="1.6.3    案例开发"></a>1.6.3    案例开发</h3><p>下面以RedisTemplate和StringRedisTemaplate的使用为例，介绍redis缓存的应用。RedisTemplate在使用时之需要使用@Autowired引入即可，例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">RedisTemplate redisTemplate;</span><br></pre></td></tr></table></figure><p>这里我们通过开发一个服务层和控制层进行查看redis整合后的效果：<br>服务层RedisServiceImpl.java 代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zone7.demo.helloworld.sys.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.service.RedisService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.StringRedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: RedisServiceImpl</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: redis 案例测试</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: zgq</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/6/19 09:16</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisServiceImpl</span> <span class="keyword">implements</span> <span class="title">RedisService</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  <span class="keyword">private</span> StringRedisTemplate stringRedisTemplate;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 写入</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(String key, String value)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//redisTemplate.opsForList().leftPush(key, value);</span></span><br><span class="line">    stringRedisTemplate.opsForValue().set(key,value);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 读取</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">get</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> stringRedisTemplate.opsForValue().get(key);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">控制层RedisController.java代码：</span><br><span class="line"><span class="keyword">package</span> com.zone7.demo.helloworld.sys.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.commons.response.ResponseData;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.service.RedisService;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.service.SysUserService;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.vo.SysUserVo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: zone7</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/06/17</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/redis"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisService redisService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/put/&#123;key&#125;/&#123;value&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseData <span class="title">put</span><span class="params">(@PathVariable String key,@PathVariable String value)</span></span>&#123;</span><br><span class="line">        redisService.put(key,value);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ResponseData.successMessage(<span class="string">"put "</span>+key+<span class="string">"成功"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/get/&#123;key&#125;"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseData <span class="title">findByName</span><span class="params">(@PathVariable String key)</span> </span>&#123;</span><br><span class="line">        String value = redisService.get(key);</span><br><span class="line">        <span class="keyword">return</span> ResponseData.success(value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用浏览器测试redis服务 的put：<br> <img src="https://zone-7.github.io/img/springboot/1.6.3a.png" alt="maven"></p><p>使用浏览器测试redis服务的get：<br> <img src="https://zone-7.github.io/img/springboot/1.6.3b.png" alt="maven"><br>通过redis-cli查看redis存储的内容：<br> <img src="https://zone-7.github.io/img/springboot/1.6.3c.png" alt="maven"></p>]]></content>
      
      
      <categories>
          
          <category> springboot&amp;vue前后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> VUE </tag>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.5 Springboot&amp;VUE开发实践（SpringBoot 整合Mybatis）</title>
      <link href="/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.5SpringBoot%20%E6%95%B4%E5%90%88Mybatis%20%EF%BC%89/"/>
      <url>/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.5SpringBoot%20%E6%95%B4%E5%90%88Mybatis%20%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1-5-整合Mybatis"><a href="#1-5-整合Mybatis" class="headerlink" title="1.5    整合Mybatis"></a>1.5    整合Mybatis</h2><h3 id="1-5-1-配置工程"><a href="#1-5-1-配置工程" class="headerlink" title="1.5.1    配置工程"></a>1.5.1    配置工程</h3><p>SpringBoot2.* 整合Mybatis 总体工作流程为：</p><ul><li><p>(1)修改POM文件，添加Maven依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- mybatis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis-spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mybatis --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- mybatis通用mapper --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>tk.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis-mapper.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mybatis通用mapper --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- mybatis pagehelper分页支持 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis-pagehelper.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mybatis pagehelper --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">!—阿里的druid</span> 数据库连接池  <span class="attr">--</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;druid-starte.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--druid--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">!—</span> <span class="attr">mysql</span>驱动 <span class="attr">--</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mysql --&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>(2)修改配置文件 application-dev.properties</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#================== mybatis =====================#</span><br><span class="line">mybatis.mapper-locations=classpath:mappers/**/*.xml</span><br><span class="line">mybatis.configuration.map-underscore-to-camel-case=true</span><br><span class="line">#================ mybatis pagehelper 分页配置 ==============#</span><br><span class="line">pagehelper.helper-dialect=mysql</span><br><span class="line">pagehelper.reasonable=true</span><br><span class="line">pagehelper.support-methods-arguments=true</span><br><span class="line">pagehelper.params=count=countSql</span><br><span class="line"></span><br><span class="line">#==================  数据源配置database  ===================#</span><br><span class="line">spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver</span><br><span class="line">spring.datasource.url=jdbc:mysql://localhost:3306/zone7-demo</span><br><span class="line">spring.datasource.username=root</span><br><span class="line">spring.datasource.password=zgq</span><br><span class="line">spring.datasource.type=com.alibaba.druid.pool.DruidDataSource</span><br><span class="line">spring.datasource.druid.initial-size=5</span><br><span class="line">spring.datasource.druid.min-idle=5</span><br><span class="line">spring.datasource.druid.max-active=20 </span><br><span class="line">spring.datasource.druid.max-wait=60000 </span><br><span class="line">spring.datasource.druid.time-between-eviction-runs-millis=60000 </span><br><span class="line">spring.datasource.druid.min-evictable-idle-time-millis=300000</span><br><span class="line">spring.datasource.druid.validation-query=&apos;select &apos;x&apos;</span><br><span class="line">spring.datasource.druid.test-while-idle=true</span><br><span class="line">spring.datasource.druid.test-on-borrow=false</span><br><span class="line">spring.datasource.druid.test-on-return=false </span><br><span class="line">spring.datasource.druid.pool-prepared-statements=true</span><br><span class="line">spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20 </span><br><span class="line">spring.datasource.druid.filters=stat,wall</span><br></pre></td></tr></table></figure></li></ul><h3 id="1-5-2-创建数据库"><a href="#1-5-2-创建数据库" class="headerlink" title="1.5.2    创建数据库"></a>1.5.2    创建数据库</h3><p>我们以mysql数据库为例，创建一个系统用户表。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`zone7-demo`</span>.<span class="string">`sys_user`</span>  (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'id'</span>,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">50</span>)   <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户名'</span>,</span><br><span class="line">  <span class="string">`password`</span> <span class="built_in">varchar</span>(<span class="number">255</span>)   <span class="keyword">COMMENT</span> <span class="string">'密码'</span>,</span><br><span class="line">  <span class="string">`phone`</span> <span class="built_in">varchar</span>(<span class="number">20</span>)  <span class="keyword">COMMENT</span> <span class="string">'电话'</span>,</span><br><span class="line">  <span class="string">`score`</span> <span class="built_in">int</span>(<span class="number">11</span>)   <span class="keyword">COMMENT</span> <span class="string">'积分'</span>,</span><br><span class="line">  <span class="string">`star`</span> <span class="built_in">int</span>(<span class="number">11</span>)   <span class="keyword">COMMENT</span> <span class="string">'星级'</span>,</span><br><span class="line">  <span class="string">`department`</span> <span class="built_in">varchar</span>(<span class="number">50</span>)   <span class="keyword">COMMENT</span> <span class="string">'部门名称'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8 <span class="keyword">COLLATE</span> = utf8_bin AUTO_INCREMENT=<span class="number">1000</span>;</span><br></pre></td></tr></table></figure><h3 id="1-5-3-代码生成"><a href="#1-5-3-代码生成" class="headerlink" title="1.5.3    代码生成"></a>1.5.3    代码生成</h3><p>mybatis 代码生成方式可以使用命令行方式和IDE方式，我们可以采用IDE执行逆向生成。<br>相关配置和生成代码步骤如下所示：</p><ul><li><p>(1)    在工程根目录新建专门用于逆袭工程相关的文件夹<br><img src="https://zone-7.github.io/img/springboot/1.5.3a.png" alt="maven"></p></li><li><p>(2)    配置Pom文件增加plugin</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- mybatis generator 自动生成代码插件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configurationFile</span>&gt;</span></span><br><span class="line">           $&#123;basedir&#125;/generator_tool/mybatis-generator-sys.xml</span><br><span class="line">        <span class="tag">&lt;/<span class="name">configurationFile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">overwrite</span>&gt;</span>true<span class="tag">&lt;/<span class="name">overwrite</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">verbose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">verbose</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>(3)    配置pom.xml中generator 插件所对应的配置文件<br>${basedir}/generator_tool/mybatis-generator-sys.xml，详细配置说明可查看以下配置文件注释内容。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- <span class="doctag">TODO:</span> 1.数据库驱动包位置 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 在MBG工作的时候，需要额外加载的依赖包，location属性指明加载jar/zip包的全路径 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">classPathEntry</span> <span class="attr">location</span>=<span class="string">"/Users/zgq/IdeaProjects/demo/helloworld/generator_tool/libs/mysql-connector-java-8.0.11.jar"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        context:生成一组对象的环境</span></span><br><span class="line"><span class="comment">        id:必选，上下文id，用于在生成错误时提示</span></span><br><span class="line"><span class="comment">        defaultModelType:指定生成对象的样式</span></span><br><span class="line"><span class="comment">            1，conditional：类似hierarchical；</span></span><br><span class="line"><span class="comment">            2，flat：所有内容（主键，blob）等全部生成在一个对象中；</span></span><br><span class="line"><span class="comment">            3，hierarchical：主键生成一个XXKey对象(key class)，Blob等单独生成一个对象，其他简单属性在一个对象中(record class)</span></span><br><span class="line"><span class="comment">        targetRuntime:</span></span><br><span class="line"><span class="comment">            1，MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample；</span></span><br><span class="line"><span class="comment">            2，MyBatis3Simple：类似MyBatis3，只是不生成XXXBySample；</span></span><br><span class="line"><span class="comment">        introspectedColumnImpl：类全限定名，用于扩展MBG</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">"DB2Tables"</span> <span class="attr">targetRuntime</span>=<span class="string">"MyBatis3"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--是否使用Lombok标准生成实体类  需要开发自定义LombokPlugin ，暂时不用  --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;plugin type="org.mybatis.generator.plugins.LombokPlugin"&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;property name="hasLombok" value="true"/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;/plugin&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--去掉生成类的注释--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suppressDate"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suppressAllComments"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- <span class="doctag">TODO:</span> 2.数据库链接URL、用户名、密码 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">"com.mysql.jdbc.Driver"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">connectionURL</span>=<span class="string">"jdbc:mysql://localhost:3306/zone7-demo"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">userId</span>=<span class="string">"root"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">password</span>=<span class="string">"zgq"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- java类型处理器</span></span><br><span class="line"><span class="comment">            用于处理DB中的类型到Java中的类型，默认使用JavaTypeResolverDefaultImpl；</span></span><br><span class="line"><span class="comment">            注意一点，默认会先尝试使用Integer，Long，Short等来对应DECIMAL和 NUMERIC数据类型；</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaTypeResolver</span> <span class="attr">type</span>=<span class="string">"org.mybatis.generator.internal.types.JavaTypeResolverDefaultImpl"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                true：使用BigDecimal对应DECIMAL和 NUMERIC数据类型</span></span><br><span class="line"><span class="comment">                false：默认,</span></span><br><span class="line"><span class="comment">                    scale&gt;0;length&gt;18：使用BigDecimal;</span></span><br><span class="line"><span class="comment">                    scale=0;length[10,18]：使用Long；</span></span><br><span class="line"><span class="comment">                    scale=0;length[5,9]：使用Integer；</span></span><br><span class="line"><span class="comment">                    scale=0;length&lt;5：使用Short；</span></span><br><span class="line"><span class="comment">             --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"forceBigDecimals"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- <span class="doctag">TODO:</span> 3.生成模型的包名和位置 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- java模型创建器，是必须要的元素</span></span><br><span class="line"><span class="comment">            负责：1，key类（见context的defaultModelType）；2，java类；3，查询类</span></span><br><span class="line"><span class="comment">            targetPackage：生成的类要放的包，真实的包受enableSubPackages属性控制；</span></span><br><span class="line"><span class="comment">            targetProject：目标项目，指定一个存在的目录下，生成的内容会放到指定目录中，如果目录不存在，MBG不会自动建目录</span></span><br><span class="line"><span class="comment">         --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"com.zone7.demo.helloworld.sys.pojo"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">targetProject</span>=<span class="string">"/Users/zgq/IdeaProjects/demo/helloworld/src/main/java"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--  for MyBatis3/MyBatis3Simple</span></span><br><span class="line"><span class="comment">                自动为每一个生成的类创建一个构造方法，构造方法包含了所有的field；而不是使用setter；</span></span><br><span class="line"><span class="comment">             --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"constructorBased"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 设置一个根对象，</span></span><br><span class="line"><span class="comment">                如果设置了这个根对象，那么生成的keyClass或者recordClass会继承这个类；在Table的rootClass属性中可以覆盖该选项</span></span><br><span class="line"><span class="comment">                注意：如果在key class或者record class中有root class相同的属性，MBG就不会重新生成这些属性了，包括：</span></span><br><span class="line"><span class="comment">                    1，属性名相同，类型相同，有相同的getter/setter方法；</span></span><br><span class="line"><span class="comment">             --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;property name="rootClass" value=""/&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 设置是否在getter方法中，对String类型字段调用trim()方法 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"trimStrings"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- <span class="doctag">TODO:</span> 4.生成的映射文件包名和位置 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  这里的目标包和路径必须与application.properties配置的mybatis.mapper-locations=classpath:mappers/**/*.xml 一致，</span></span><br><span class="line"><span class="comment">一般我们存放在resources/mappers目录下  --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"mappers.sys"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">targetProject</span>=<span class="string">"/Users/zgq/IdeaProjects/demo/helloworld/src/main/resources"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- <span class="doctag">TODO:</span> 5.生成DAO的包名和位置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">"XMLMAPPER"</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">targetPackage</span>=<span class="string">"com.zone7.demo.helloworld.sys.dao"</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">targetProject</span>=<span class="string">"/Users/zgq/IdeaProjects/demo/helloworld/src/main/java"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 可以为所有生成的接口添加一个父接口，但是MBG只负责生成，不负责检查</span></span><br><span class="line"><span class="comment">            &lt;property name="rootInterface" value=""/&gt;</span></span><br><span class="line"><span class="comment">             --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- <span class="doctag">TODO:</span> 6.要生成那些表(更改tableName和domainObjectName就可以) --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">"SYS_USER"</span> <span class="attr">domainObjectName</span>=<span class="string">"SysUser"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">enableCountByExample</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">enableUpdateByExample</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">enableDeleteByExample</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">enableSelectByExample</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">selectByExampleQueryId</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>(4)    执行代码生成命令</p></li></ul><p>首先打开Edit Configurations… , 执行RUN生成代码，也可以使用java 命令生成代码。</p><ul><li><p>方式一、Java命令<br>java -jar libs/mybatis-generator-core-1.3.5.jar -configfile mybatis-generator-rule.xml -overwrite</p></li><li><p>方式二、配置mvn命令<br><img src="https://zone-7.github.io/img/springboot/1.5.3b.png" alt="maven"></p><p>  配置Command Line： mybatis-generator:generate -e<br><img src="https://zone-7.github.io/img/springboot/1.5.3c.png" alt="maven"><br><img src="https://zone-7.github.io/img/springboot/1.5.3d.png" alt="maven"></p></li></ul><p><strong>执行完生成代码效果如下：</strong><br>  <img src="https://zone-7.github.io/img/springboot/1.5.3e.png" alt="maven"></p><h3 id="1-5-4-案例开发"><a href="#1-5-4-案例开发" class="headerlink" title="1.5.4    案例开发"></a>1.5.4    案例开发</h3><p>以下部分以《用户管理模块》为例，开发持久层、服务层和控制层，并通过Postman测试。</p><h4 id="1-5-4-1-增加配置类"><a href="#1-5-4-1-增加配置类" class="headerlink" title="1.5.4.1    增加配置类"></a>1.5.4.1    增加配置类</h4><p>在包com.zone7.demo.helloworld.commons 中新增mapper包，并新建通用Mapper“BaseMapper.java”。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.zone7.demo.helloworld.commons.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> tk.mybatis.mapper.common.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * BaseMapper</span></span><br><span class="line"><span class="comment"> * mybatis通用mapper</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: zone7</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@time</span>: 2019.01.02</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BaseMapper</span>&lt;<span class="title">T</span>&gt; <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在com.zone7.demo.helloworld.config中新建mybatis包，并新增MyBatisMapperScannerConfig.java 作为扫描类。</span><br><span class="line"><span class="keyword">package</span> com.zone7.demo.helloworld.config.mybatis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> tk.mybatis.spring.mapper.MapperScannerConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * MyBatisMapperScannerConfig</span></span><br><span class="line"><span class="comment"> * mybatis mapper扫描配置</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: zone7</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@time</span>: 2019.01.02</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisMapperScannerConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 配置mybatis通用mapper</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MapperScannerConfigurer <span class="title">mapperScannerConfigurer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        MapperScannerConfigurer mapperScannerConfigurer = <span class="keyword">new</span> MapperScannerConfigurer();</span><br><span class="line">        mapperScannerConfigurer.setSqlSessionFactoryBeanName(<span class="string">"sqlSessionFactory"</span>);</span><br><span class="line">        <span class="comment">//扫描该路径下的mapper</span></span><br><span class="line">        mapperScannerConfigurer.setBasePackage(<span class="string">"com.zone7.demo.helloworld.sys.dao, com.zone7.demo.helloworld.*.dao"</span>);</span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">        <span class="comment">//通用mapper</span></span><br><span class="line">        properties.setProperty(<span class="string">"mappers"</span>, <span class="string">"com.zone7.demo.helloworld.commons.mapper.BaseMapper"</span>);</span><br><span class="line">        properties.setProperty(<span class="string">"notEmpty"</span>, <span class="string">"false"</span>);</span><br><span class="line">        mapperScannerConfigurer.setProperties(properties);</span><br><span class="line">        <span class="keyword">return</span> mapperScannerConfigurer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码中mapperScannerConfigurer.setBasePackage(“com.zone7.demo.helloworld.sys.dao, com.zone7.demo.helloworld.<em>.dao”)的参数为需要扫描的mapper所在的包名，可以使用</em> 作为通配符。</p><h4 id="1-5-4-2-持久层开发"><a href="#1-5-4-2-持久层开发" class="headerlink" title="1.5.4.2    持久层开发"></a>1.5.4.2    持久层开发</h4><ul><li><p>(1)修改SysUser.java 添加注解@Builder</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Builder;</span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"><span class="keyword">import</span> lombok.Setter;</span><br><span class="line"><span class="keyword">import</span> lombok.ToString;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Created by Mybatis Generator 2019/06/18</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SysUser</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer score;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer star;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String department;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>(2)修改SysUserMapper.java 添加函数SysUser findByName(String name);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zone7.demo.helloworld.sys.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.pojo.SysUser;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Created by Mybatis Generator 2019/06/18</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">SysUserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteByPrimaryKey</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">insert</span><span class="params">(SysUser entity)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">insertSelective</span><span class="params">(SysUser entity)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">SysUser <span class="title">selectByPrimaryKey</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateByPrimaryKeySelective</span><span class="params">(SysUser entity)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateByPrimaryKey</span><span class="params">(SysUser entity)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户名查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;SysUser&gt; <span class="title">findByName</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>(3)修改SysUserMapper.xml 文件，增加findByName</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByName"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMap"</span>&gt;</span></span><br><span class="line">  select</span><br><span class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"Base_Column_List"</span> /&gt;</span></span><br><span class="line">  from SYS_USERS</span><br><span class="line">  where name like #&#123;name&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="1-5-4-3-服务层开发"><a href="#1-5-4-3-服务层开发" class="headerlink" title="1.5.4.3    服务层开发"></a>1.5.4.3    服务层开发</h4><ul><li><p>(1)添加vo类<br>新增com.zone7.demo.helloworld.sys.vo 包，接口传输对象统一放到vo包中。开发过程中可以拷贝实体类并修改细节，例如拷贝SysUser对象到vo包并改名为SysUserVo ， 并给类增加可序列化接口：public class SysUserVo implements Serializable </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.zone7.demo.helloworld.sys.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"><span class="keyword">import</span> lombok.Setter;</span><br><span class="line"><span class="keyword">import</span> lombok.ToString;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Created by Mybatis Generator 2019/06/18</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SysUserVo</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer score;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer star;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String department;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>(2)开发服务层代码<br>新增com.zone7.demo.helloworld.sys.service包和com.zone7.demo.helloworld.sys.service.impl包,用于存放服务层的接口和实现类。将服务层划分为接口和实现类有利于提高系统的可扩展性。在示例里我们准备实现用户的增删改查操作，接口如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.zone7.demo.helloworld.sys.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.pojo.SysUser;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.vo.SysUserVo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * SysUserService</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: zone7</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@time</span>: 2019.02.17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">SysUserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userVo</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(SysUserVo userVo)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userVo</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(SysUserVo userVo)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户ID查找</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">SysUserVo <span class="title">findByKeyword</span><span class="params">(String id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户名模糊查找</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;SysUserVo&gt; <span class="title">findByName</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加载所有用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;SysUserVo&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">(String id)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>实现类的代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.zone7.demo.helloworld.sys.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageHelper;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageInfo;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.commons.exception.AddOPException;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.commons.exception.DeleteOPException;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.commons.exception.UpdateOPException;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.commons.mapper.PageModel;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.dao.SysUserMapper;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.pojo.SysUser;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.service.SysUserService;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.vo.SysUserVo;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.utils.MD5Util;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * SysUserServiceImpl</span></span><br><span class="line"><span class="comment"> * 用户管理</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: zone7</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@time</span>: 2019.02.17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SysUserServiceImpl</span> <span class="keyword">implements</span> <span class="title">SysUserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;system.default.password&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String defaultPassword;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SysUserMapper sysUserMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span>(rollbackFor = AddOPException.class)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(SysUserVo userVo)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            String password = defaultPassword;</span><br><span class="line">            String md5Password = MD5Util.encode(password);</span><br><span class="line">            SysUser sysUser =  SysUser.builder()</span><br><span class="line">                    .name(userVo.getName()).password(md5Password)</span><br><span class="line">                    .phone(userVo.getPhone())</span><br><span class="line">                    .department(userVo.getDepartment())</span><br><span class="line">                    .build();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 存储用户信息</span></span><br><span class="line">            sysUserMapper.insertSelective(sysUser);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> AddOPException(<span class="string">"新增用户操作出错，错误原因: "</span> + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span>(rollbackFor = UpdateOPException.class)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(SysUserVo userVo)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            SysUser after = SysUser.builder()</span><br><span class="line">                    .id(userVo.getId())</span><br><span class="line">                    .name(userVo.getName())</span><br><span class="line">                    .phone(userVo.getPhone())</span><br><span class="line">                    .department(userVo.getDepartment()).build();</span><br><span class="line"></span><br><span class="line">            sysUserMapper.updateByPrimaryKeySelective(after);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UpdateOPException(<span class="string">"更新用户操作出错，错误原因: "</span> + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SysUserVo <span class="title">findById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">          SysUser user = sysUserMapper.selectByPrimaryKey(id);</span><br><span class="line">          SysUserVo vo=<span class="keyword">new</span> SysUserVo();</span><br><span class="line">          BeanUtils.copyProperties(user,vo);</span><br><span class="line">          <span class="keyword">return</span> vo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;SysUserVo&gt; <span class="title">findByName</span><span class="params">( String name)</span> </span>&#123;</span><br><span class="line">        List&lt;SysUser&gt; users = sysUserMapper.findByName(name);</span><br><span class="line"></span><br><span class="line">        List&lt;SysUserVo&gt; userList = <span class="keyword">new</span> ArrayList&lt;SysUserVo&gt;();</span><br><span class="line">        users.forEach(sysUser -&gt; &#123;</span><br><span class="line">            <span class="comment">// 查询角色信息</span></span><br><span class="line">            SysUserVo vo=<span class="keyword">new</span> SysUserVo();</span><br><span class="line">            BeanUtils.copyProperties(sysUser,vo);</span><br><span class="line">            userList.add(vo);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span>(rollbackFor = DeleteOPException.class)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            sysUserMapper.deleteByPrimaryKey(id);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> DeleteOPException(<span class="string">"删除用户操作出错，错误原因: "</span> + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>值得注意的是，代码中的方法采用了注解@Transactional, 例如：@Transactional(rollbackFor = AddOPException.class)表示事务控制当方法抛出AddOPException异常时进行事务回滚。</p><h4 id="1-5-4-4-控制层开发"><a href="#1-5-4-4-控制层开发" class="headerlink" title="1.5.4.4 控制层开发"></a>1.5.4.4 控制层开发</h4><p>在第一个工程中我们已经介绍了控制层的开发，这个部分我们将新增用户管理模块的控制层代码，并调用服务层的功能。控制层代码我们统一放在模块的controller包下面。控制层代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.zone7.demo.helloworld.sys.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.commons.response.ResponseData;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.service.SysUserService;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.vo.SysUserVo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * SysUserController</span></span><br><span class="line"><span class="comment"> * 用户管理</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: zone7</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@time</span>: 2019.02.17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/sys/user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SysUserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SysUserService sysUserService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userVo</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/save"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseData <span class="title">save</span><span class="params">(SysUserVo userVo)</span> </span>&#123;</span><br><span class="line">        sysUserService.save(userVo);</span><br><span class="line">        <span class="keyword">return</span> ResponseData.successMessage(<span class="string">"新增用户成功"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userVo</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/update"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseData <span class="title">updateDept</span><span class="params">(SysUserVo userVo)</span> </span>&#123;</span><br><span class="line">        sysUserService.update(userVo);</span><br><span class="line">        <span class="keyword">return</span> ResponseData.successMessage(<span class="string">"更新用户成功"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查找</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/findByName"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseData <span class="title">findByName</span><span class="params">(@RequestParam(value = <span class="string">"name"</span>)</span> String name) </span>&#123;</span><br><span class="line">        List&lt;SysUserVo&gt; result = sysUserService.findByName(name);</span><br><span class="line">        <span class="keyword">return</span> ResponseData.success(result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/delete"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseData <span class="title">delete</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        sysUserService.delete(id);</span><br><span class="line">        <span class="keyword">return</span> ResponseData.successMessage(<span class="string">"删除用户成功"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-5-4-5-测试"><a href="#1-5-4-5-测试" class="headerlink" title="1.5.4.5    测试"></a>1.5.4.5    测试</h4><p>在IDEA中运行HelloworldApplication类<br> <img src="https://zone-7.github.io/img/springboot/1.5.4.5a.png" alt="maven"><br>可以看到系统启动端口是8080，与application.properties配置的一致。接下来可打开Postman （postman是web开发常用的测试工具）测试新增用户、修改用户、查询用户、删除用户四个功能。<br> <img src="https://zone-7.github.io/img/springboot/1.5.4.5b.png" alt="maven"><br>查询刚才新增加的用户：<br> <img src="https://zone-7.github.io/img/springboot/1.5.4.5c.png" alt="maven"><br>修改用户<br> <img src="https://zone-7.github.io/img/springboot/1.5.4.5d.png" alt="maven"><br>删除用户<br> <img src="https://zone-7.github.io/img/springboot/1.5.4.5e.png" alt="maven"></p><p>至此SpringBoot完成了与Mybatis的整合工作。</p>]]></content>
      
      
      <categories>
          
          <category> springboot&amp;vue前后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> VUE </tag>
            
            <tag> mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.10 Springboot&amp;VUE开发实践（SpringBoot异常处理）</title>
      <link href="/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.10SpringBoot%20%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%EF%BC%89/"/>
      <url>/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.10SpringBoot%20%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1-10-异常处理"><a href="#1-10-异常处理" class="headerlink" title="1.10    异常处理"></a>1.10    异常处理</h2><p>作为一个健壮的后端程序，必须要有健壮的返回信息，动不动就返回一个html页面内容是一种令人作呕的用户体验。通过全局异常处理可以确保不论正常或者异常都可以一统一的数据格式响应，同时也规范了异常处理机制。<br>SpringBoot之需要采用注解@ExceptionHandler就可以实现全局的异常处理。首先我们需要定义一个状态返回码的类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ResponseCode</span></span><br><span class="line"><span class="comment"> * 响应编码</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: zone7</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@time</span>: 2018.08.28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> ResponseCode &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//响应成功编码</span></span><br><span class="line">    SUCCESS(<span class="number">200</span>, <span class="string">"请求成功"</span>),</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//响应错误编码</span></span><br><span class="line">    ERROR(<span class="number">40000</span>, <span class="string">"请求错误"</span>),</span><br><span class="line">    ERROR_PARAM_ILLGAL(<span class="number">40001</span>, <span class="string">"请求参数不合法"</span>),</span><br><span class="line">    ERROR_DATA_DUPLICATION(<span class="number">40002</span>, <span class="string">"新增数据已存在"</span>),</span><br><span class="line">    ERROR_GET_NO_RESULT(<span class="number">40003</span>, <span class="string">"查询结果为空"</span>),</span><br><span class="line">    ERROR_ADD_OP(<span class="number">40004</span>, <span class="string">"新增操作异常"</span>),</span><br><span class="line">    ERROR_UPDATE_OP(<span class="number">40005</span>, <span class="string">"更新操作异常"</span>),</span><br><span class="line">    ERROR_DELETE_OP(<span class="number">40006</span>, <span class="string">"删除操作异常"</span>),</span><br><span class="line">    ERROR_RECOVER_OP(<span class="number">40007</span>, <span class="string">"恢复操作异常"</span>),</span><br><span class="line">    ERROR_MODIFY_PASSWORD(<span class="number">40008</span>, <span class="string">"修改密码操作异常"</span>),</span><br><span class="line">    ERROR_CONFIG(<span class="number">40009</span>, <span class="string">"系统配置异常"</span>),</span><br><span class="line"></span><br><span class="line">    ERROR_LOGIN_NOAUTH(<span class="number">50000</span>, <span class="string">"用户未登录，请登录后继续访问"</span>),</span><br><span class="line">    ERROR_LOGIN_NOAUTH_ACL(<span class="number">50001</span>, <span class="string">"用户没有该功能权限"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> code;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String desc;</span><br><span class="line"></span><br><span class="line">    ResponseCode(<span class="keyword">int</span> code, String desc) &#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">        <span class="keyword">this</span>.desc = desc;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDesc</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> desc;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着我们需要统一定义一个响应类ResponseData作为所有接口的返回对象，所有控制层的返回值都必须是ResponseData类型，响应类的代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ResponseData</span></span><br><span class="line"><span class="comment"> * 通用服务端响应对象</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: zone7</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@time</span>: 2018.08.28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@JsonSerialize</span>(include = JsonSerialize.Inclusion.NON_NULL)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResponseData</span>&lt;<span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 响应编码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> code;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 响应信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 响应数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> T data;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ResponseData</span><span class="params">(<span class="keyword">int</span> code)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ResponseData</span><span class="params">(<span class="keyword">int</span> code, T data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ResponseData</span><span class="params">(<span class="keyword">int</span> code, String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">        <span class="keyword">this</span>.message = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ResponseData</span><span class="params">(<span class="keyword">int</span> code, String msg, T data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">        <span class="keyword">this</span>.message = msg;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSuccess</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.code == ResponseCode.SUCCESS.getCode();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMessage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/************************ 响应成功返回对象 ***************************/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">ResponseData&lt;T&gt; <span class="title">success</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResponseData&lt;T&gt;(ResponseCode.SUCCESS.getCode());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">ResponseData&lt;T&gt; <span class="title">success</span><span class="params">(T data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResponseData&lt;T&gt;(ResponseCode.SUCCESS.getCode(), data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">ResponseData&lt;T&gt; <span class="title">success</span><span class="params">(String message, T data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResponseData&lt;T&gt;(ResponseCode.SUCCESS.getCode(), message, data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">ResponseData&lt;T&gt; <span class="title">successMessage</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResponseData&lt;T&gt;(ResponseCode.SUCCESS.getCode(), message);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/************************ 响应成功返回对象 ***************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/************************ 响应错误异常返回对象 ***************************/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">ResponseData&lt;T&gt; <span class="title">error</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResponseData&lt;T&gt;(ResponseCode.ERROR.getCode(), ResponseCode.ERROR.getDesc());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">ResponseData&lt;T&gt; <span class="title">error</span><span class="params">(ResponseCode responseCode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResponseData&lt;T&gt;(responseCode.getCode(), responseCode.getDesc());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">ResponseData&lt;T&gt; <span class="title">error</span><span class="params">(String message, T data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResponseData&lt;T&gt;(ResponseCode.ERROR.getCode(), message, data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">ResponseData&lt;T&gt; <span class="title">errorMessage</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResponseData&lt;T&gt;(ResponseCode.ERROR.getCode(), message);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/************************ 响应错误异常返回对象 ***************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/************************ 响应其他异常返回对象 ***************************/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">ResponseData&lt;T&gt; <span class="title">error</span><span class="params">(<span class="keyword">int</span> code, String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResponseData&lt;T&gt;(code, message);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/************************ 响应其他异常返回对象 ***************************/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着我们需要定义一个全局异常基类GlobalException，GlobalException继承自运行时异常，同时定义一堆继承自全局异常类的异常类，例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * GlobalException</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: zone7</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@time</span>: 2019.02.14</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlobalException</span> <span class="keyword">extends</span> <span class="title">RuntimeException</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ResponseCode responseCode = ResponseCode.ERROR;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GlobalException</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GlobalException</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GlobalException</span><span class="params">(String message, Throwable cause)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message, cause);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GlobalException</span><span class="params">(Throwable cause)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(cause);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">GlobalException</span><span class="params">(String message, Throwable cause, <span class="keyword">boolean</span> enableSuppression, <span class="keyword">boolean</span> writableStackTrace)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message, cause, enableSuppression, writableStackTrace);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后，我们将使用注解@ControllerAdvice和@ExceptionHandler配置一个统一的异常处理类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * GlobalExceptionHandler</span></span><br><span class="line"><span class="comment"> * 全局异常处理器</span></span><br><span class="line"><span class="comment"> * 当请求处理出现异常时，会根据异常处理器的配置顺序，依次尝试异常匹配和处理</span></span><br><span class="line"><span class="comment"> * 自定义异常处理器需要继承GlobalException类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: zone7</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@time</span>: 2019.02.14</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlobalExceptionHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> 添加自定义的异常处理器</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(value = DeleteOPException.class)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseData <span class="title">deleteExceptionHandler</span><span class="params">(HttpServletRequest request, DeleteOPException e)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseData.error(e.getResponseCode().getCode(), e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(value = NoResultException.class)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseData <span class="title">noResultExceptionHandler</span><span class="params">(HttpServletRequest request, NoResultException e)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseData.error(e.getResponseCode().getCode(), e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(value = DuplicationException.class)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseData <span class="title">duplicationExeptionHandler</span><span class="params">(HttpServletRequest request, DuplicationException e)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseData.error(e.getResponseCode().getCode(), e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(value = ParamException.class)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseData <span class="title">paramExeptionHandler</span><span class="params">(HttpServletRequest request, ParamException e)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseData.error(e.getResponseCode().getCode(), e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 全局异常处理器</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> e</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(value = GlobalException.class)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseData <span class="title">globalExceptionHandler</span><span class="params">(HttpServletRequest request, GlobalException e)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseData.error(e.getResponseCode().getCode(), e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认异常处理器</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> e</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(value = Exception.class)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseData <span class="title">exceptionHandler</span><span class="params">(HttpServletRequest request, Exception e)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String errorMsg = e.getMessage();</span><br><span class="line">        <span class="keyword">return</span> ResponseData.errorMessage(<span class="string">"[未知异常信息] "</span> + errorMsg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在统一一次处理类里面我们已经把所有自定义的异常和一些系统异常定义了处理方式，统一使用ResponseData返回错误信息，采用这种方式我们的前端或者客户端在访问接口过程中不论是否出现异常都可以得到相同的JSON格式返回。</p>]]></content>
      
      
      <categories>
          
          <category> springboot&amp;vue前后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> VUE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.11 Springboot&amp;VUE开发实践（SpringBoot日志处理）</title>
      <link href="/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.11SpringBoot%20%E6%97%A5%E5%BF%97%E5%A4%84%E7%90%86%EF%BC%89/"/>
      <url>/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.11SpringBoot%20%E6%97%A5%E5%BF%97%E5%A4%84%E7%90%86%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1-11-日志处理"><a href="#1-11-日志处理" class="headerlink" title="1.11    日志处理"></a>1.11    日志处理</h2><p>SpringBoot使用Commons Logging进行所有内部日志记录，但底层日志实现保持开放状态。为Java Util Logging，Log4j2和Logback提供了默认配置。SpringBoot能自动适配所有的日志，这里主要介绍slf4j+logback的实现，引入其他框架的时候，只需要把这个框架依赖的日志框架排除掉即可。</p><p>SpringBoot默认帮我们配置好了日志，我们直接使用即可。例如我们可以在代码中使用以下代码来新建日志类。<br>private static final Logger logger = LoggerFactory.getLogger(MongoDBServiceImpl.class); </p><p>使用日志类打印日志信息：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 级别由低到高 trace&lt;debug&lt;info&lt;warn&lt;error</span></span><br><span class="line">logger.trace(<span class="string">"这是一个trace日志..."</span>);</span><br><span class="line">logger.debug(<span class="string">"这是一个debug日志..."</span>);</span><br><span class="line"><span class="comment">// SpringBoot默认是info级别，只会输出info及以上级别的日志</span></span><br><span class="line">logger.info(<span class="string">"这是一个info日志..."</span>);</span><br><span class="line">logger.warn(<span class="string">"这是一个warn日志..."</span>);</span><br><span class="line">logger.error(<span class="string">"这是一个error日志..."</span>);</span><br></pre></td></tr></table></figure><p>另外，可以通过application-dev.properties 来配置日志级别和输出文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#==================  slf4j日志配置 ===================#</span><br><span class="line"># 路径</span><br><span class="line">logging.path=/Users/zgq/logs</span><br><span class="line">logging.file=zone7.log</span><br><span class="line">#location of config file (default classpath:logback.xml for logback)</span><br><span class="line">#logging.config=</span><br><span class="line"># levels for loggers, e.g. &quot;logging.level.org.springframework=DEBUG&quot; (TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF)</span><br><span class="line">logging.level.com.zone7=INFO</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> springboot&amp;vue前后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> VUE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.12 Springboot&amp;VUE开发实践（SpringBoot缓存处理）</title>
      <link href="/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.12SpringBoot%20%E7%BC%93%E5%AD%98%E5%A4%84%E7%90%86%EF%BC%89/"/>
      <url>/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.12SpringBoot%20%E7%BC%93%E5%AD%98%E5%A4%84%E7%90%86%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1-12-缓存处理"><a href="#1-12-缓存处理" class="headerlink" title="1.12    缓存处理"></a>1.12    缓存处理</h2><h3 id="1-12-1-缓存配置"><a href="#1-12-1-缓存配置" class="headerlink" title="1.12.1    缓存配置"></a>1.12.1    缓存配置</h3><p>SpringBoot2.0 的缓存可以使用注解方式实现。</p><ul><li><p>（1）    修改pom文件添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-cache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>（2）    修改application-dev.properties配置文件<br>添加配置“spring.cache.type=redis”  </p></li><li><p>（3）    添加@EnableCaching开启缓存注解</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@EnableCaching</span></span><br><span class="line"><span class="meta">@ServletComponentScan</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span>(scanBasePackages = &#123;<span class="string">"com.zone7.demo.helloworld"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloworldApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">  SpringApplication.run(HelloworldApplication.class, args);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-12-2-注解说明"><a href="#1-12-2-注解说明" class="headerlink" title="1.12.2    注解说明"></a>1.12.2    注解说明</h3><p>在需要使用缓存的方法上面添加以下注解：<br>    - @Cacheable  将方法的运行结果进行缓存；第二次再要相同的数据，直接从缓存中获取，不再调用方法；<br>    - @CacheEvict 移除缓存<br>    - @CachePut  修改了数据库的某个数据，同时更新缓存</p><p>以下对这三个注解的属性展开介绍：</p><ul><li>(1)    @Cacheable<br>Cacheable中的几个属性：<ul><li>1)cacheNames/value:指定缓存组件的名字， 数组的方式，可以指定多个缓存组件名称。</li><li>2)key: 缓存数据使用的key，默认使用方法参数的值作为key。也可以自己指定，通过编写SpEL指定key的值；如：#root.methodName 、#id等。</li><li>3)keyGenerator: key的生成器，可以自己编写key的生成器组件。注意：在使用时key和keyGenerator二选一。</li><li>4)cacheManager: 指定缓存管理器。</li><li>5)condition： 指定符合条件的情况下才缓存；如： condition = “#id&gt;0” “#a0&gt;1”才进行缓存。</li><li>6)unless: 否定缓存； 当unless指定的条件为true,方法的返回值就不会缓存；如：可以获取到结果进行判断unless = “#result == null “  当方法结果为null时，不缓存。</li><li>7)sync: 是否使用异步模式</li></ul></li><li>(2)    @CacheEvit<ul><li>@CacheEvit：缓存清除</li><li>@CacheEvit和@Cacheable的相同属性就不再赘述。<ul><li>1)allEntries = true 每次删除，将指定缓存中的所有数据全都删除。</li><li>2)beforeInvocation=false ,缓存的清除是否是在方法之前执行，默认false, 即在方法之后清除，当方法执行出现异常时，缓存不会清除。</li><li>3)beforeInvocation=true ,方法之前清除，无论方法执行是否出现异常，缓存都会清除。</li></ul></li></ul></li><li>(3)    @CachePut<br>运行时机：先调用目标方法，将目标方法的结果缓存起来，属性与@Cacheable相同。<br>此外还有@CacheConfig：可以标注在类上，抽取出相同的属性，简化代码。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Target</span>(&#123;ElementType.TYPE&#125;)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> CacheConfig &#123;</span><br><span class="line">    String[] cacheNames() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">    <span class="function">String <span class="title">keyGenerator</span><span class="params">()</span> <span class="keyword">default</span> ""</span>; </span><br><span class="line">    <span class="function">String <span class="title">cacheManager</span><span class="params">()</span> <span class="keyword">default</span> ""</span>; </span><br><span class="line">    <span class="function">String <span class="title">cacheResolver</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="1-12-3-缓存使用"><a href="#1-12-3-缓存使用" class="headerlink" title="1.12.3    缓存使用"></a>1.12.3    缓存使用</h3><p>我们在服务层实现类中增加缓存注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zone7.demo.helloworld.sys.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.commons.exception.AddOPException;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.commons.exception.DeleteOPException;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.commons.exception.UpdateOPException;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.dao.SysUserMapper;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.pojo.SysUser;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.service.SysUserService;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.vo.SysUserVo;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.utils.MD5Util;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.annotation.CacheConfig;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.annotation.CacheEvict;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.annotation.CachePut;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.annotation.Cacheable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.StringRedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * SysUserServiceImpl</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: zone7</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@time</span>: 2019.02.17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@CacheConfig</span>(cacheNames = <span class="string">"users"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SysUserServiceImpl</span> <span class="keyword">implements</span> <span class="title">SysUserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;system.default.password&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String defaultPassword;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SysUserMapper sysUserMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StringRedisTemplate stringRedisTemplate;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span>(rollbackFor = AddOPException.class)</span><br><span class="line">    <span class="meta">@CachePut</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SysUserVo <span class="title">save</span><span class="params">(SysUserVo userVo)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            String password = defaultPassword;</span><br><span class="line">            String md5Password = MD5Util.encode(password);</span><br><span class="line">            SysUser sysUser =  SysUser.builder()</span><br><span class="line">                    .name(userVo.getName()).password(md5Password)</span><br><span class="line">                    .phone(userVo.getPhone())</span><br><span class="line">                    .department(userVo.getDepartment())</span><br><span class="line">                    .build();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 存储用户信息</span></span><br><span class="line">            sysUserMapper.insertSelective(sysUser);</span><br><span class="line"></span><br><span class="line">            SysUserVo vo=<span class="keyword">new</span> SysUserVo();</span><br><span class="line">            BeanUtils.copyProperties(sysUser,vo);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> vo;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> AddOPException(<span class="string">"新增用户操作出错，错误原因: "</span> + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span>(rollbackFor = UpdateOPException.class)</span><br><span class="line">    <span class="meta">@CachePut</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(SysUserVo userVo)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            SysUser after = SysUser.builder()</span><br><span class="line">                    .id(userVo.getId())</span><br><span class="line">                    .name(userVo.getName())</span><br><span class="line">                    .phone(userVo.getPhone())</span><br><span class="line">                    .department(userVo.getDepartment()).build();</span><br><span class="line"></span><br><span class="line">            sysUserMapper.updateByPrimaryKeySelective(after);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UpdateOPException(<span class="string">"更新用户操作出错，错误原因: "</span> + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Cacheable</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SysUserVo <span class="title">findById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">          SysUser user = sysUserMapper.selectByPrimaryKey(id);</span><br><span class="line">          SysUserVo vo=<span class="keyword">new</span> SysUserVo();</span><br><span class="line">          BeanUtils.copyProperties(user,vo);</span><br><span class="line">          <span class="keyword">return</span> vo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;SysUserVo&gt; <span class="title">findByName</span><span class="params">( String name)</span> </span>&#123;</span><br><span class="line">        List&lt;SysUser&gt; users = sysUserMapper.findByName(name);</span><br><span class="line"></span><br><span class="line">        List&lt;SysUserVo&gt; userList = <span class="keyword">new</span> ArrayList&lt;SysUserVo&gt;();</span><br><span class="line">        users.forEach(sysUser -&gt; &#123;</span><br><span class="line">            <span class="comment">// 查询角色信息</span></span><br><span class="line">            SysUserVo vo=<span class="keyword">new</span> SysUserVo();</span><br><span class="line">            BeanUtils.copyProperties(sysUser,vo);</span><br><span class="line">            userList.add(vo);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span>(rollbackFor = DeleteOPException.class)</span><br><span class="line">    <span class="meta">@CacheEvict</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            sysUserMapper.deleteByPrimaryKey(id);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> DeleteOPException(<span class="string">"删除用户操作出错，错误原因: "</span> + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过Postman测试执行两次findById操作只有第一次进入方法内部执行，后续的执行都直接返回缓存中的数据。</p><p><img src="https://zone-7.github.io/img/springboot/1.12.3.png" alt="测试缓存"></p>]]></content>
      
      
      <categories>
          
          <category> springboot&amp;vue前后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> VUE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.4 Springboot&amp;VUE开发实践（SpringBoot第一个工程）</title>
      <link href="/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.4SpringBoot%20%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%B7%A5%E7%A8%8B%20%EF%BC%89/"/>
      <url>/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.4SpringBoot%20%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%B7%A5%E7%A8%8B%20%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1-4-第一个工程"><a href="#1-4-第一个工程" class="headerlink" title="1.4    第一个工程"></a>1.4    第一个工程</h2><h3 id="1-4-1-step1-创建springboot项目HelloWorld"><a href="#1-4-1-step1-创建springboot项目HelloWorld" class="headerlink" title="1.4.1    step1:创建springboot项目HelloWorld"></a>1.4.1    step1:创建springboot项目HelloWorld</h3><ul><li><p>（1）打开File-&gt;New-&gt;Module…新建模块<br><img src="https://zone-7.github.io/img/springboot/1.4.1a.png" alt="new1"></p></li><li><p>（2）选择Spring Initializr ，注意SDK使用1.8，点击Next<br><img src="https://zone-7.github.io/img/springboot/1.4.1b.png" alt="new2"></p></li><li><p>（3）设置工程Group和Artifact，点击Next<br><img src="https://zone-7.github.io/img/springboot/1.4.1c.png" alt="new3"></p></li><li><p>（4）添加Spring Web Starter依赖，点击Next<br><img src="https://zone-7.github.io/img/springboot/1.4.1d.png" alt="new4"></p></li><li><p>（5）保存工程<br><img src="https://zone-7.github.io/img/springboot/1.4.1e.png" alt="new5"></p></li><li><p>（6）项目结构如下图所示：<br><img src="https://zone-7.github.io/img/springboot/1.4.1f.png" alt="new6"></p></li></ul><h3 id="1-4-2-Step2-理解工程结构"><a href="#1-4-2-Step2-理解工程结构" class="headerlink" title="1.4.2    Step2:理解工程结构"></a>1.4.2    Step2:理解工程结构</h3><p>创建完工程之后，我们可以看到工程目录中包含了一个完整的结构，比较重要的目录包括：src、test两个目录分别表示源代码和测试代码所在目录， src/main/java 为java代码路径，其中HelloworldApplication 是App 启动类。src/main/resources/application.properties 为工程配置文件，大多数情况下工程只需要一个配置文件即可。另外，在根目录下我们看到一个pom.xml ，这个文件是maven工程的重要配置文件，主要用于配置工程信息、依赖包、构建插件等（关于Maven知识点可上网查资料，这里不作深入介绍）。我们认真查看一下pom文件有利于理解springBoot的依赖关系：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.zone7.demo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>helloworld<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">name</span>&gt;</span>helloworld<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>从pom文件可确认我们的工程继承至spring-boot-starter-parent的版本号为：2.1.5.RELEASE，SpringBoot的主要依赖包为：spring-boot-starter-web</p><h3 id="1-4-3-Step3-配置工程"><a href="#1-4-3-Step3-配置工程" class="headerlink" title="1.4.3    Step3:配置工程"></a>1.4.3    Step3:配置工程</h3><ul><li><p>（1）打开配置文件application.properties，Springboot也兼容application.yml<br>录入：</p><pre><code>**spring.profiles.active=dev**</code></pre><p>spring.profiles.active=dev表示运行模式为开发模式，系统将使用application-dev.properties配置文件。</p></li><li><p>（2）在src/main/resources目录下新建application-dev.properties 配置文件，并添加配置：</p><pre><code>**server.port=8080   #端口号为8080**</code></pre></li></ul><h3 id="1-4-4-Step4-开发测试控制层"><a href="#1-4-4-Step4-开发测试控制层" class="headerlink" title="1.4.4    Step4:开发测试控制层"></a>1.4.4    Step4:开发测试控制层</h3><p>在com.zone7.demo.helloworld 下创建包sys.controller，这里sys 表示子系统子模块的名称，在实际项目中可以根据功能模块划分包结构。在controller包中新建TestController类。<br>  <img src="https://zone-7.github.io/img/springboot/1.4.4.png" alt="controller"></p><p>编写测试代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zone7.demo.helloworld.sys.controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: zone7</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/06/17</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/test"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/show/&#123;name&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">show</span><span class="params">(@PathVariable String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hi, "</span> +name +<span class="string">" , 你好！我是 zone7"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SpringBoot通过给类添加注解 @RestController 表示Java类为控制层类；通过给方法添加@GetMapping 、@PostMapping、@DeleteMapping、@PutMapping 等注解表示http协议的四个操作。也可以给类添加@RequestMapping注解，表示该类下面所有路径都是以该注解的路径开始。例如上例： @RequestMapping(“/test”)表示TestController类的所有方法对应的url都是以/test开始，<br>show方法对应的url为：<br> <strong><a href="http://IP:PORT/test/show/{name}。" target="_blank" rel="noopener">http://IP:PORT/test/show/{name}。</a></strong><br>Mapping注解中的参数{name} 可映射为方法入参。</p><h3 id="1-4-5-Step5-运行工程"><a href="#1-4-5-Step5-运行工程" class="headerlink" title="1.4.5    Step5:运行工程"></a>1.4.5    Step5:运行工程</h3><ul><li>(1)java 运行HelloworldApplication</li><li>(2)打开浏览器访问控制层，效果如下图所示：<br><img src="https://zone-7.github.io/img/springboot/1.4.5.png" alt="res"></li></ul><h3 id="1-4-6-总结"><a href="#1-4-6-总结" class="headerlink" title="1.4.6    总结"></a>1.4.6    总结</h3><p>通过第一个工程的学习，我们了解到Springboot的开发过程主要就是配置、开发、测试三个内容：</p><ul><li>（1）    配置<ul><li>pom配置：通过添加依赖增加相关的组件功能。</li><li>application-dev.properties配置：默认情况下springboot的配置文件入口是application.yml 或者application.properties，这里我们对开发过程和生产过程的配置文件进行了分离，后续的案例开发也将延用这个模式。</li><li>注解配置：通过注解配置系统的安全过滤、日志过滤、全局异常等功能。</li></ul></li><li>（2）  业务模块开发<br>根据开发规范开发持久层、服务层、控制层（不同行业、不同团队制定的开发规范也许不同）</li><li>（3）    测试</li></ul>]]></content>
      
      
      <categories>
          
          <category> springboot&amp;vue前后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> VUE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.14 Springboot&amp;VUE开发实践（SpringBoot单元测试）</title>
      <link href="/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.14SpringBoot%20%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%EF%BC%89/"/>
      <url>/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.14SpringBoot%20%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1-14-单元测试"><a href="#1-14-单元测试" class="headerlink" title="1.14    单元测试"></a>1.14    单元测试</h2><h3 id="1-14-1-配置"><a href="#1-14-1-配置" class="headerlink" title="1.14.1    配置"></a>1.14.1    配置</h3><p>修改配置文件pom.xml，一般使用idea新建一个SpringBoot web项目时，一般都会自动引入此依赖，如果没有，请手动添加依赖。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-14-2-编写测试代码"><a href="#1-14-2-编写测试代码" class="headerlink" title="1.14.2    编写测试代码"></a>1.14.2    编写测试代码</h3><p>新建一个测试类，测试service中的两个方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.zone7.demo.helloworld;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.service.SysUserService;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.sys.vo.SysUserVo;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.Assert;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloworldApplicationTests</span> </span>&#123;</span><br><span class="line">   <span class="meta">@Autowired</span></span><br><span class="line">   <span class="keyword">private</span> SysUserService sysUserService;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      List&lt;SysUserVo&gt; users = sysUserService.findByName(<span class="string">"zone7"</span>);</span><br><span class="line">      System.out.println(<span class="string">"查询到用户数："</span>+users.size());</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      SysUserVo user = <span class="keyword">new</span> SysUserVo();</span><br><span class="line">      user.setName(<span class="string">"testuser"</span>);</span><br><span class="line">      user.setPassword(<span class="string">"123"</span>);</span><br><span class="line">      user.setPhone(<span class="string">"111111111111"</span>);</span><br><span class="line">      sysUserService.save(user);</span><br><span class="line">      List&lt;SysUserVo&gt; users = sysUserService.findByName(<span class="string">"testuser"</span>);</span><br><span class="line">      Assert.notEmpty(users,<span class="string">"保存失败"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码中使用@Autowired引入你想测试的类，在测试方法上加@Test注解。</p><h3 id="1-14-3-执行单元测试"><a href="#1-14-3-执行单元测试" class="headerlink" title="1.14.3    执行单元测试"></a>1.14.3    执行单元测试</h3><p>通过点击方法前的小标执行测试，操作如下图所示：<br> <img src="https://zone-7.github.io/img/springboot/1.14.3.png" alt="单元测试"></p><h3 id="1-14-4-打包测试"><a href="#1-14-4-打包测试" class="headerlink" title="1.14.4    打包测试"></a>1.14.4    打包测试</h3><p>开发完成之后，有可能我们已经写了一百多个测试用例类，我并不能每个类都点击进去一个个执行，SpringBoot提供了打包测试的方式：用一个类，把所有的测试类整理进去，然后直接运行这个类，所有的测试类都会执行。</p><p>我这里建了两个测试类，分别是EntFileTest,EntFileTest2，现在我打包进TestSuits，让他们一次运行，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.zone7.demo.helloworld;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.junit.runners.Suite;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by zone7</span></span><br><span class="line"><span class="comment"> * Date 2019/6/2</span></span><br><span class="line"><span class="comment"> * Description:打包测试</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith</span>(Suite.class)</span><br><span class="line"><span class="meta">@Suite</span>.SuiteClasses(&#123;SysuserControllerTests.class,SysuserServiceTests.class&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSuits</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//不用写代码，只需要类顶级注解即可</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当一个测试类中有1个方法暂时不想测测试，想在打包测试过程中跳过该方法，怎么办？这里有一个忽略注解@Ignore(“not ready yet”)，写在方法上，可以忽略这个测试方法，写在类上，可以忽略这个类。<br> <img src="https://zone-7.github.io/img/springboot/1.14.4.png" alt="单元测试"><br>此时，运行打包测试类TestSuits，SysuserServiceTests.testFindByName()方法就会忽略执行。</p>]]></content>
      
      
      <categories>
          
          <category> springboot&amp;vue前后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> VUE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.15 Springboot&amp;VUE开发实践（SpringBoot应用部署）</title>
      <link href="/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.15SpringBoot%20%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2%EF%BC%89/"/>
      <url>/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.15SpringBoot%20%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1-15-打包部署"><a href="#1-15-打包部署" class="headerlink" title="1.15    打包部署"></a>1.15    打包部署</h2><h3 id="1-15-1-Docker化部署"><a href="#1-15-1-Docker化部署" class="headerlink" title="1.15.1    Docker化部署"></a>1.15.1    Docker化部署</h3><p>随着系统数量越来越多、复杂度越来越高，传统的运维方式耗时耗力而且还容易出现故障。采用Docker化部署，为应用开发和运维带了了非常多的好处，可以简化配置、隔离应用、提升开发效率、让交付物标准化，为实现开发运维流水线管理提供了很好的基础。</p><ul><li>(1)    环境准备<br>安装过程这里不深入介绍，确认服务器上Docker 已启动，并且安装了docker仓库、开启了docker远程服务，通过docker –v 确认安装成功和当前版本。</li></ul><p>安装docker私有仓库的过程如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;docker pull registry</span><br><span class="line"></span><br><span class="line">docker run -d -p 5000:5000 --restart=always -h registry \</span><br><span class="line">--name registry \</span><br><span class="line">-v /Users/zgq/docker/volumes/registry:/tmp/registry \</span><br><span class="line">registry</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;docker exec -it registry sh #进入容器</span><br><span class="line">&gt; Ctrl-p Ctrl-q#退出</span><br></pre></td></tr></table></figure><p><strong>查看仓库内容</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;curl -XGET http://IP:5000/v2/_catalog</span><br></pre></td></tr></table></figure><p>确认服务器开启了远程服务</p><ul><li>(a)Linux环境<br>编辑docker.service：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/lib/systemd/system/docker.service</span><br></pre></td></tr></table></figure></li></ul><p>添加下面参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix://var/run/docker.sock \</span><br></pre></td></tr></table></figure><p>重启Docker：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">systemctl daemon-reload // 1，加载docker守护线程</span><br><span class="line">systemctl restart docker // 2，重启docker•</span><br></pre></td></tr></table></figure><ul><li>(b)Mac环境<br>安装socat：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install socat</span><br></pre></td></tr></table></figure></li></ul><p>启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">socat -d TCP-LISTEN:2375,range=127.0.0.1/32,reuseaddr,fork UNIX:/var/run/docker.sock</span><br></pre></td></tr></table></figure><p>docker远程服务的默认端口号为2375，可以在本机使用以下命令查看仓库的镜像：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker –H IP:2375 images</span><br></pre></td></tr></table></figure><ul><li>(2)SpringBoo配置</li><li><em>Step1 : 配置POM文件*</em></li></ul><p>默认情况下，Pom插件通过访问IP:2375来连接服务器上的docker，docker的镜像上传。我们需要修改POM文件，添加docker 插件来实现。以下例子仓库所在地址为本机。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">docker.host</span>&gt;</span>http://127.0.0.1:2375<span class="tag">&lt;/<span class="name">docker.host</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">docker.repostory</span>&gt;</span>127.0.0.1:5000<span class="tag">&lt;/<span class="name">docker.repostory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">docker.registry.name</span>&gt;</span>zone7<span class="tag">&lt;/<span class="name">docker.registry.name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">docker.plugin.version</span>&gt;</span>0.4.13<span class="tag">&lt;/<span class="name">docker.plugin.version</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.spotify<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>docker-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;docker.plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>build-image<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>build<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>push-image<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>deploy<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>push<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">imageName</span>&gt;</span>$&#123;docker.repostory&#125;/$&#123;docker.registry.name&#125;/$&#123;project.artifactId&#125;:$&#123;project.version&#125;<span class="tag">&lt;/<span class="name">imageName</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">registryUrl</span>&gt;</span>$&#123;docker.repostory&#125;<span class="tag">&lt;/<span class="name">registryUrl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pushImage</span>&gt;</span>true<span class="tag">&lt;/<span class="name">pushImage</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dockerHost</span>&gt;</span>$&#123;docker.host&#125;<span class="tag">&lt;/<span class="name">dockerHost</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dockerDirectory</span>&gt;</span>$&#123;project.basedir&#125;/src/main/docker<span class="tag">&lt;/<span class="name">dockerDirectory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">imageName</span>&gt;</span>$&#123;docker.repostory&#125;/$&#123;docker.registry.name&#125;/$&#123;project.artifactId&#125;:$&#123;project.version&#125;<span class="tag">&lt;/<span class="name">imageName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">imageTags</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">imageTag</span>&gt;</span>$&#123;project.version&#125;<span class="tag">&lt;/<span class="name">imageTag</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">imageTags</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">targetPath</span>&gt;</span>/<span class="tag">&lt;/<span class="name">targetPath</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;project.build.directory&#125;<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>$&#123;project.build.finalName&#125;.jar<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Step2 : 配置Dockerfile文件</strong></p><p>我们还需要在src/main/docker下创建Dockerfile文件，文件内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">FROM livingobjects/jre8</span><br><span class="line">VOLUME /tmp</span><br><span class="line">ADD app.jar app.jar</span><br><span class="line"></span><br><span class="line">RUN echo &quot;export LC_ALL=zh_CN.UTF-8&quot;  &gt;&gt;  /etc/profile</span><br><span class="line">ENV LANG=&quot;zh_CN.UTF-8&quot;</span><br><span class="line">#RUN apk add -U tzdata</span><br><span class="line">#RUN cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line">#RUN echo &apos;Asia/Shanghai&apos; &gt;/etc/timezone</span><br><span class="line"></span><br><span class="line">ENTRYPOINT [&quot;java&quot;,&quot;-Djava.security.egd=file:/dev/./urandom&quot;,&quot;-jar&quot;,&quot;/app.jar&quot;]</span><br><span class="line">EXPOSE 8080</span><br></pre></td></tr></table></figure><p><strong>Step3：执行打包发布命令</strong><br>接下来我们在IDEA的控制台执行命令： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean package docker:build</span><br></pre></td></tr></table></figure><p> <img src="https://zone-7.github.io/img/springboot/1.15.1a.png" alt="docker 部署1"> </p><p>通过下面命令查看镜像是否发布成功。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker –H 127.0.0.1:2375 images</span><br></pre></td></tr></table></figure><p>例如：<br> <img src="https://zone-7.github.io/img/springboot/1.15.1b.png" alt="docker 部署2"> </p><p><strong>Step4：启动Docker镜像</strong><br>运行容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 8080:8080 127.0.0.1:5000/zone7/zone7-rule:2.0.3.RELEASE /bin/bash</span><br></pre></td></tr></table></figure><p>查看启动日志</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f -t --tail 100 65a9d1e9621f</span><br></pre></td></tr></table></figure><p> <img src="https://zone-7.github.io/img/springboot/1.15.1c.png" alt="docker 部署3"> </p><p><strong>Step5：查看SpringBoot应用启动情况</strong><br>执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec –it  /bin/bash</span><br></pre></td></tr></table></figure><p> <img src="https://zone-7.github.io/img/springboot/1.15.1d.png" alt="docker 部署4"> </p><p>通过进程我们看到SpringBoot应用已经启动。</p><h3 id="1-15-2-Web容器部署"><a href="#1-15-2-Web容器部署" class="headerlink" title="1.15.2    Web容器部署"></a>1.15.2    Web容器部署</h3><p>采用War方式部署需要先进行打包，然后再部署到Tomcat或者weblogic 等WEB容器，在IDEA环境下打War十分简单，操作如下图所示。<br> <img src="https://zone-7.github.io/img/springboot/1.15.2a.png" alt="web 部署1"> </p><p>然后执行build artifacts即可</p><p> <img src="https://zone-7.github.io/img/springboot/1.15.2b.png" alt="web 部署2"> </p><p>也可以使用Maven打包，只需要修改POM文件的package参数为war：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><packaging>war</packaging></p><p>然后执行“mvn clean package” 命令即可。</p>]]></content>
      
      
      <categories>
          
          <category> springboot&amp;vue前后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> VUE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.3 Springboot&amp;VUE开发实践（SpringBoot注解）</title>
      <link href="/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.3SpringBoot%20%E6%B3%A8%E8%A7%A3%20%EF%BC%89/"/>
      <url>/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.3SpringBoot%20%E6%B3%A8%E8%A7%A3%20%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1-3-SpringBoot注解"><a href="#1-3-SpringBoot注解" class="headerlink" title="1.3    SpringBoot注解"></a>1.3    SpringBoot注解</h2><p>本节主要介绍常用的注解，想了解更多信息可参考官网文档：<br><a href="https://docs.spring.io/spring-boot/docs/2.2.x/reference/html/getting-started.html#getting-started" target="_blank" rel="noopener">https://docs.spring.io/spring-boot/docs/2.2.x/reference/html/getting-started.html#getting-started</a></p><h3 id="1-3-1-SpringBoot-Spring常用注解"><a href="#1-3-1-SpringBoot-Spring常用注解" class="headerlink" title="1.3.1    SpringBoot/Spring常用注解"></a>1.3.1    SpringBoot/Spring常用注解</h3><p><strong>注解列表</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@SpringBootApplication：包含了@ComponentScan、@Configuration和@EnableAutoConfiguration注解。其中@ComponentScan让spring Boot扫描到Configuration类并把它加入到程序上下文。</span><br><span class="line">@Configuration 等同于spring的XML配置文件；使用Java代码可以检查类型安全。</span><br><span class="line">@EnableAutoConfiguration 自动配置。</span><br><span class="line">@ComponentScan 组件扫描，可自动发现和装配一些Bean。</span><br><span class="line">@Component可配合CommandLineRunner使用，在程序启动后执行一些基础任务。</span><br><span class="line">@RestController注解是@Controller和@ResponseBody的合集,表示这是个控制器bean,并且是将函数的返回值直 接填入HTTP响应体中,是REST风格的控制器。</span><br><span class="line">@Autowired自动导入。</span><br><span class="line">@PathVariable获取参数。</span><br><span class="line">@JsonBackReference解决嵌套外链问题。</span><br><span class="line">@RepositoryRestResourcepublic配合spring-boot-starter-data-rest使用。</span><br></pre></td></tr></table></figure><p><strong>注解详解</strong></p><ul><li><p>@SpringBootApplication：申明让spring boot自动给程序进行必要的配置，这个配置等同于：@Configuration ，@EnableAutoConfiguration 和 @ComponentScan 三个配置。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.example.myproject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line">   </span><br><span class="line"><span class="meta">@SpringBootApplication</span> <span class="comment">// same as @Configuration @EnableAutoConfiguration </span></span><br><span class="line"><span class="meta">@ComponentScan</span> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(Application.class, args);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>@ResponseBody：表示该方法的返回结果直接写入HTTP response body中，一般在异步获取数据时使用，用于构建RESTful的api。在使用@RequestMapping后，返回值通常解析为跳转路径，加上@esponsebody后返回结果不会被解析为跳转路径，而是直接写入HTTP response body中。比如异步获取json数据，加上@Responsebody后，会直接返回json数据。该注解一般会配合@RequestMapping一起使用。示例代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(“/test”)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">     <span class="keyword">return</span>”ok”;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>@Controller：用于定义控制器类，在spring项目中由控制器负责将用户发来的URL请求转发到对应的服务接口（service层），一般这个注解在类中，通常方法需要配合注解@RequestMapping。示例代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(“/demoInfo”)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoController</span> </span>&#123;</span><br><span class="line">   <span class="meta">@Autowired</span></span><br><span class="line">   <span class="keyword">private</span> DemoInfoService demoInfoService;</span><br><span class="line">   <span class="meta">@RequestMapping</span>(<span class="string">"/hello"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">(Map&lt;String,Object&gt; map)</span></span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"DemoController.hello()"</span>);</span><br><span class="line">     map.put(<span class="string">"hello"</span>,<span class="string">"from TemplateController.helloHtml"</span>);</span><br><span class="line">     <span class="comment">//会使用hello.html或者hello.ftl模板进行渲染显示.</span></span><br><span class="line">     <span class="keyword">return</span><span class="string">"/hello"</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>@RestController：用于标注控制层组件(如struts中的action)，@ResponseBody和@Controller的合集。示例代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kfit.demo.web;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(“/demoInfo2”)</span><br><span class="line">publicclass DemoController2 &#123;</span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/test"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="string">"ok"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>@RequestMapping：提供路由信息，负责URL到Controller中的具体函数的映射。</p></li><li><p>@EnableAutoConfiguration：SpringBoot自动配置（auto-configuration）：尝试根据你添加的jar依赖自动配置你的Spring应用。例如，如果你的classpath下存在HSQLDB，并且你没有手动配置任何数据库连接beans，那么我们将自动配置一个内存型（in-memory）数据库”。你可以将@EnableAutoConfiguration或者@SpringBootApplication注解添加到一个@Configuration类上来选择自动配置。如果发现应用了你不想要的特定自动配置类，你可以使用@EnableAutoConfiguration注解的排除属性来禁用它们。</p></li><li><p>@ComponentScan：其实很简单，@ComponentScan主要就是定义扫描的路径从中找出标识了需要装配的类自动装配到spring的bean容器中,你一定都有用过@Controller，@Service，@Repository注解，查看其源码你会发现，他们中有一个共同的注解@Component，没错@ComponentScan注解默认就会装配标识了@Controller，@Service，@Repository，@Component注解的类到spring容器中。当然，这个的前提就是你需要在所扫描包下的类上引入注解。</p></li><li><p>@Configuration：相当于传统的xml配置文件，如果有些第三方库需要用到xml文件，建议仍然通过@Configuration类作为项目的配置主类——可以使用@ImportResource注解加载xml配置文件。</p></li><li><p>@Import：用来导入其他配置类。</p></li><li><p>@ImportResource：用来加载xml配置文件。</p></li><li><p>@Autowired：自动导入依赖的bean</p></li><li><p>@Service：一般用于修饰service层的组件</p></li><li><p>@Repository：使用@Repository注解可以确保DAO或者repositories提供异常转译，这个注解修饰的DAO或者repositories类会被ComponetScan发现并配置，同时也不需要为它们提供XML配置项。</p></li><li><p>@Bean：用@Bean标注方法等价于XML中配置的bean。</p></li><li><p>@Value：注入Spring boot application.properties配置的属性的值。示例代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@Value(value = “#&#123;message&#125;”)</span><br><span class="line">private String message;</span><br></pre></td></tr></table></figure></li><li><p>@Inject：等价于默认的@Autowired，只是没有required属性；</p></li><li><p>@Component：泛指组件，当组件不好归类的时候，我们可以使用这个注解进行标注。</p></li><li><p>@Bean:相当于XML中的,放在方法的上面，而不是类，意思是产生一个bean,并交给spring管理。</p></li><li><p>@AutoWired：自动导入依赖的bean。byType方式。把配置好的Bean拿来用，完成属性、方法的组装，它可以对类成员变量、方法及构造函数进行标注，完成自动装配的工作。当加上（required=false）时，就算找不到bean也不报错。</p></li><li><p>@Qualifier：当有多个同一类型的Bean时，可以用@Qualifier(“name”)来指定。与@Autowired配合使用。@Qualifier限定描述符除了能根据名字进行注入，但能进行更细粒度的控制如何选择候选者，具体使用方式如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="meta">@Qualifier</span>(value = “demoInfoService”)</span><br><span class="line"><span class="keyword">private</span> DemoInfoService demoInfoService;</span><br></pre></td></tr></table></figure></li><li><p>@Resource(name=”name”,type=”type”)：没有括号内内容的话，默认byName。与@Autowired干类似的事。</p></li></ul><h3 id="1-3-2-JPA注解"><a href="#1-3-2-JPA注解" class="headerlink" title="1.3.2    JPA注解"></a>1.3.2    JPA注解</h3><ul><li>@Entity：</li><li>@Table(name=”“)：</li><li>表明这是一个实体类。一般用于jpa这两个注解一般一块使用，但是如果表名和实体类名相同的话，@Table可以省略</li><li>@MappedSuperClass:用在确定是父类的entity上。父类的属性子类可以继承。</li><li>@NoRepositoryBean:一般用作父类的repository，有这个注解，spring不会去实例化该repository。</li><li>@Column：如果字段名与列名相同，则可以省略。</li><li>@Id：表示该属性为主键。</li><li>@GeneratedValue(strategy = GenerationType.SEQUENCE,generator = “repair_seq”)：表示主键生成策略是sequence（可以为Auto、IDENTITY、native等，Auto表示可在多个数据库间切换），指定sequence的名字是repair_seq。</li><li>@SequenceGeneretor(name = “repair_seq”, sequenceName = “seq_repair”, allocationSize = 1)：name为sequence的名称，以便使用，sequenceName为数据库的sequence名称，两个名称可以一致。</li><li>@Transient：表示该属性并非一个到数据库表的字段的映射,ORM框架将忽略该属性。如果一个属性并非数据库表的字段映射,就务必将其标示为@Transient,否则,ORM框架默认其注解为@Basic。@Basic(fetch=FetchType.LAZY)：标记可以指定实体属性的加载方式</li><li>@JsonIgnore：作用是json序列化时将Java bean中的一些属性忽略掉,序列化和反序列化都受影响。</li><li>@JoinColumn（name=”loginId”）:一对一：本表中指向另一个表的外键。一对多：另一个表指向本表的外键。</li><li>@OneToOne、@OneToMany、@ManyToOne：对应hibernate配置文件中的一对一，一对多，多对一。</li></ul><h3 id="1-3-3-SpringMVC注解"><a href="#1-3-3-SpringMVC注解" class="headerlink" title="1.3.3    SpringMVC注解"></a>1.3.3    SpringMVC注解</h3><ul><li>@RequestMapping：<br>@RequestMapping(“/path”)表示该控制器处理所有“/path”的UR L请求。RequestMapping是一个用来处理请求地址映射的注解，可用于类或方法上。<br>用于类上，表示类中的所有响应请求的方法都是以该地址作为父路径。该注解有六个属性：<ul><li>params:指定request中必须包含某些参数值是，才让该方法处理。</li><li>headers:指定request中必须包含某些指定的header值，才能让该方法处理请求。</li><li>value:指定请求的实际地址，指定的地址可以是URI Template 模式</li><li>method:指定请求的method类型， GET、POST、PUT、DELETE等</li><li>consumes:指定处理请求的提交内容类型（Content-Type），如application/json,text/html;</li><li>produces:指定返回的内容类型，仅当request请求头中的(Accept)类型中包含该指定类型才返回</li><li>@RequestParam：<br>用在方法的参数前面。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@RequestParam</span></span><br><span class="line">String a =request.getParameter(“a”)。</span><br><span class="line"><span class="meta">@PathVariable</span>:路径变量。如：</span><br><span class="line"> RequestMapping(“user/get/mac/&#123;macAddress&#125;”)</span><br><span class="line"> <span class="function"><span class="keyword">public</span> String <span class="title">getByMacAddress</span><span class="params">(@PathVariable String macAddress)</span></span>&#123;</span><br><span class="line">     <span class="comment">//do something; </span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>参数与大括号里的名字一样要相同。</p><h3 id="1-3-4-全局异常处理注解"><a href="#1-3-4-全局异常处理注解" class="headerlink" title="1.3.4     全局异常处理注解"></a>1.3.4     全局异常处理注解</h3><ul><li>@ControllerAdvice：包含@Component。可以被扫描到。统一处理异常。</li><li>@ExceptionHandler（Exception.class）：用在方法上面表示遇到这个异常就执行以下方法。</li></ul><h3 id="1-3-5-SpringCloud注解"><a href="#1-3-5-SpringCloud注解" class="headerlink" title="1.3.5    SpringCloud注解"></a>1.3.5    SpringCloud注解</h3><ul><li><p>@EnableFeignClients 开启Spring Cloud Feign的支持</p></li><li><p>@EnableCircuitBreaker 开启断路器功能</p></li><li><p>@EnableDiscoveryClient 注册应用为Eureka客户端应用，以获得服务发现的能力。</p></li><li><p>@LoadBalanced 开启客户端负载均衡</p></li><li><p>@EnableScheduling</p></li><li><p>@EnableEurekaServer 启动一个服务注册中心</p></li><li><p>@RunWith(SpringRunner.class) 引入Spring 对JUnit 4 的支持</p></li><li><p>@WebAppConfiguration 开启Web 应用的配置，用于模拟ServletContext</p></li><li><p>@SpringCloudApplication</p></li><li><p>@SpringCloudApplication注解的定义如下，包含服务发现及断路器的注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> org.springframework.cloud.client;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> zone7</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Target</span>(ElementType.TYPE)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Inherited</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@EnableCircuitBreaker</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> SpringCloudApplication &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>@HystrixCommand：指定回调方法</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> springboot&amp;vue前后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> VUE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.2 Springboot&amp;VUE开发实践（SpringBoot开发规范）</title>
      <link href="/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.2SpringBoot%20%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%20%EF%BC%89/"/>
      <url>/2019/07/26/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.2SpringBoot%20%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%20%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1-2-SpringBoot开发规范"><a href="#1-2-SpringBoot开发规范" class="headerlink" title="1.2    SpringBoot开发规范"></a>1.2    SpringBoot开发规范</h2><h3 id="1-2-1-开发规范的作用"><a href="#1-2-1-开发规范的作用" class="headerlink" title="1.2.1    开发规范的作用"></a>1.2.1    开发规范的作用</h3><p>  开发规范是基于某种特定的开发语言和架构，进行开发的基本原则和推荐方式，在开发过程中有迷惑时进行参照的指南。 开发规范不同于编码规则，但一定要包含编码规则。</p><p>编码规范有以下几点意义：</p><ul><li>(1)    编码规范可以最大限度的提高团队开发的合作效率。</li><li>(2)    编码规范可以尽可能的减少一个软件的维护成本，并且几乎没有任何一个软件，在其整个生命周期中，均由最初的开发人员来维护 。</li><li>(3)    编码规范可以改善软件的可读性，可以让开发人员尽快而彻底地理解新的代码 </li><li>(4)    规范性编码还可以让开发人员养成好的编码习惯，甚至锻炼出更加严谨的思维</li></ul><p>本节关于开发规范的内容摘录自互联网上搜索到的经验，同时结合实际工作中的理解所整理，由于各个团队的开发制度或公司要求有所不同，开发规范不一定适用于所有团队，以下内容仅仅只是作为学习使用SpringBoot框架进行项目开发的参考。</p><h3 id="1-2-2-代码仓库规范"><a href="#1-2-2-代码仓库规范" class="headerlink" title="1.2.2    代码仓库规范"></a>1.2.2    代码仓库规范</h3><h3 id="1-2-2-1-公共组件"><a href="#1-2-2-1-公共组件" class="headerlink" title="1.2.2.1    公共组件"></a>1.2.2.1    公共组件</h3><p>公共组件通常指Java库，提供特定问题的处理程序包。公共组件的命名规范为：</p><ul><li>(1)    分组编号：com.companyname.library 固定取值 </li><li>(2)    组件名称：name   name根据组件名称定义 </li><li>(3)    组件版本：x.y.z   x.y.z根据组件实际版本情况定义</li></ul><h4 id="1-2-2-2-服务组件"><a href="#1-2-2-2-服务组件" class="headerlink" title="1.2.2.2    服务组件"></a>1.2.2.2    服务组件</h4><p>服务组件通常指可以独立部署，运行，维护的服务程序包，应用组件的命名规范为：</p><ul><li>(1)    分组编号：com.companyname.server固定取值 </li><li>(2)    组件名称：name  name根据组件名称定义 </li><li>(3)    组件版本：x.y.z   x.y.z根据组件实际版本情况定义</li></ul><h4 id="1-2-2-3-开发环境"><a href="#1-2-2-3-开发环境" class="headerlink" title="1.2.2.3    开发环境"></a>1.2.2.3    开发环境</h4><ul><li>(1)    开发环境：JDK1.8+ </li><li>(2)    开发工具：IntelliJ IDEA 2017（安装Lombok Plugin） </li><li>(3)    构建工具：Maven3.x </li><li>(4)    代码管理工具：Git /TortoiseGit，根据公司或者组织统一配置管理（有得公司使用SVN）。</li></ul><p>本文所介绍的SpringBoot示例都是基于以下环境制作：</p><ul><li><p>开发工具：IDEA<br>可从官网下载<a href="https://www.jetbrains.com/idea/download/" target="_blank" rel="noopener">https://www.jetbrains.com/idea/download/</a><br><img src="https://zone-7.github.io/img/springboot/1.2.2.3.1.png" alt="IDEA"></p></li><li><p>Java<br>JDK版本号：1.8</p></li><li><p>Maven<br>Maven版本号：3.5.2</p><p><img src="https://zone-7.github.io/img/springboot/1.2.2.3.png" alt="maven"></p></li></ul><h3 id="1-2-3-工程结构规范"><a href="#1-2-3-工程结构规范" class="headerlink" title="1.2.3    工程结构规范"></a>1.2.3    工程结构规范</h3><p>一个工程对应代码仓库中的一个仓库，项目结构是指一个基于Maven创建的项目目录结构。公共组件项目，通常会创建一个Maven普通项目。服务组件项目，通常会创建一个Maven聚合项目，并在聚合项目目录下创建多个继承Maven聚合项目的Maven模块，它们一起作为服务组件项目的组成部分。</p><ul><li>(1)    工程名称<br>使用英文作为仓库、项目、项目根目录、包结构、配置文件、代码文件、组件（公共组件，服务组件）的名称。使用中文作为用于代码仓库描述、模块功能描述、类描述、方法描述等。  </li></ul><p>Maven工程的命名、版本以及描述信息如：<br> <img src="https://zone-7.github.io/img/springboot/1.2.3.png" alt="project"></p><ul><li><p>(2)    模块命名<br>模块名称：{项目名称}-{模块名称} 模块名称简洁体现职责 ，使用模块名字作为模块组件的名称。例如：系统管理模块名称：sys</p></li><li><p>(3)    项目目录<br>项目目录遵循Maven约定目录格式</p></li><li><p>(1)    源码目录指：{项目目录}/src/main/ </p></li><li><p>(2)    打包定义目录：src/main/assembly </p></li><li><p>(3)    代码目录：src/main/java </p></li><li><p>(4)    资源目录：src/main/resources </p></li><li><p>(5)    数据库脚本归档：/db</p></li><li><p>(6)    内部依赖数据归档：/data</p></li><li><p>(7)    文档目录：src/main/docs </p></li><li><p>(8)    脚本目录：src/main/bin</p></li></ul><h3 id="1-2-4-编码规范"><a href="#1-2-4-编码规范" class="headerlink" title="1.2.4    编码规范"></a>1.2.4    编码规范</h3><h4 id="1-2-4-1-包规范"><a href="#1-2-4-1-包规范" class="headerlink" title="1.2.4.1    包规范"></a>1.2.4.1    包规范</h4><p>包规范一般包含以下部分，有的团队也在组织内部自定义一个适应于团队的包命名规范。</p><ul><li>(1)    项目基本包：com.company.{项目英文名（较长时适当简化）}.{模块名（可选）} </li><li>(2)    config：配置类 </li><li>(3)    startup：与服务启动相关的类 </li><li>(4)    client：提供客户端实现的相关类 </li><li>(5)    common：公共类，定义常量类，通用组件</li><li>(6)    entity: 数据库相关的实体类 ，有得使用pojo</li><li>(7)    model:数据模型类(参数模型，数据传输模型等) ，有的使用vo</li><li>(8)    controller:控制层接口 </li><li>(9)    service: 服务层 </li><li>(10)    dao：数据库访问层</li><li>(11)    util： 工具类</li></ul><h4 id="1-2-4-2-日志记录"><a href="#1-2-4-2-日志记录" class="headerlink" title="1.2.4.2    日志记录"></a>1.2.4.2    日志记录</h4><p>系统统一使用SLF4j接口</p><h4 id="1-2-4-3-异常处理"><a href="#1-2-4-3-异常处理" class="headerlink" title="1.2.4.3    异常处理"></a>1.2.4.3    异常处理</h4><p>一般情况下系统主要处理两类异常：</p><ul><li>(1)    运行时异常：通过参数检查等方式避免或抛出运行时异常，日志记录 </li><li>(2)    检查异常：检查异常需要捕获，处理，日志记录<br>在我们的示例工程代码里，我们定义了以下几个类别的业务异常：</li><li>(1)    AddOPException：增加操作异常</li><li>(2)    ConfigException：配置异常</li><li>(3)    DeleteOPException：删除操作异常</li><li>(4)    DuplicationException：重复异常</li><li>(5)    ModifyPasswordException：修改密码异常</li><li>(6)    NoResultException： 没有结果异常</li><li>(7)    ParamException：参数异常</li><li>(8)    RecoverOPException：覆盖异常</li><li>(9)    UpdateOPException：更新异常<br>异常类一般为RuntimeException，源代代码如下所示：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.zone7.demo.helloworld.config.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.commons.response.ResponseCode;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * GlobalException</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: zone7</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@time</span>: 2019.02.14</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlobalException</span> <span class="keyword">extends</span> <span class="title">RuntimeException</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ResponseCode responseCode = ResponseCode.ERROR;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GlobalException</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GlobalException</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GlobalException</span><span class="params">(String message, Throwable cause)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message, cause);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GlobalException</span><span class="params">(Throwable cause)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(cause);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">GlobalException</span><span class="params">(String message, Throwable cause, <span class="keyword">boolean</span> enableSuppression, <span class="keyword">boolean</span> writableStackTrace)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message, cause, enableSuppression, writableStackTrace);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.zone7.demo.helloworld.commons.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.commons.response.ResponseCode;</span><br><span class="line"><span class="keyword">import</span> com.zone7.demo.helloworld.config.exception.GlobalException;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ParamException</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: zone7</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@time</span>: 2019.02.14</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ParamException</span> <span class="keyword">extends</span> <span class="title">GlobalException</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ResponseCode responseCode = ResponseCode.ERROR_PARAM_ILLGAL;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ParamException</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-2-4-4-接口定义"><a href="#1-2-4-4-接口定义" class="headerlink" title="1.2.4.4    接口定义"></a>1.2.4.4    接口定义</h4><ul><li><p>(1)    原则</p><ul><li>接口地址定义表明用意</li><li>接口地址定义清晰，简洁，无歧义</li><li>同一个服务组件的接口定义具有一致性</li></ul></li><li><p>(2)    格式 </p><ul><li>控制类的顶层地址格式:/{顶层分类名}，例如：/sys/user系统管理模块下用户管理相关的接口顶层地址 </li><li>接口定义使用Swagger的API注解说明 </li><li>标注完整的请求信息，请求方法，请求地址，参数可选性，接口描述</li></ul></li></ul><ul><li><p>(3)    请求方式 </p><ul><li>GET URL-Params </li><li>POST Form-Data </li><li>POST RequestBody(JSON格式) </li><li>POST Mulitpart</li></ul></li><li><p>(4)    响应方式 </p><ul><li>统一的响应模型</li></ul></li></ul><h4 id="1-2-4-5-辅助工具"><a href="#1-2-4-5-辅助工具" class="headerlink" title="1.2.4.5    辅助工具"></a>1.2.4.5    辅助工具</h4><pre><code>-    字符串处理：apache common-lang3 -    时间日期处理：joda-time -    JSON处理：Gson，Fastjson -    集合扩展工具：guava -    文件和流处理：commons-io -    编解码：commons-codec -    建议：尽可能使用开源组件</code></pre><h4 id="1-2-4-6-代码注释"><a href="#1-2-4-6-代码注释" class="headerlink" title="1.2.4.6    代码注释"></a>1.2.4.6    代码注释</h4><p>代码注释是</p><ul><li>(1)    类，接口，枚举顶层注释 </li><li>(2)    接口方法注释 </li><li>(3)    静态方法注释 </li><li>(4)    公开方法注释 </li><li>(5)    类的属性字段注释 </li><li>(6)    常量注释 </li><li>(7)    不限于以上</li></ul><p>例如：<br> <img src="https://zone-7.github.io/img/springboot/1.2.4.6.png" alt="注释"></p><h4 id="1-2-4-7-代码控制规范"><a href="#1-2-4-7-代码控制规范" class="headerlink" title="1.2.4.7    代码控制规范"></a>1.2.4.7    代码控制规范</h4><ul><li><p>(1)    拉取原则<br>强制每日开始工作拉取，提交之前拉取。</p></li><li><p>(2)    提交原则 </p></li></ul><ul><li>强制要求提交代码必须构建成功（编译，打包成功） </li><li>提交代码必须完整（例如：少提文件） </li><li>提交代码必须忽略到本地临时文件（例如：target, logs, .idea, *.iml,dist 等）</li><li>要求每完成一个功能就进行提交 </li><li>每修改完一个Bug就进行提交 </li><li>如有冲突，要求解决冲突完之后才可提交 </li><li>建议每日结束工作提交</li></ul><ul><li>(3)    提交注释<br>要求提交时使用中文填写注释，注释的内容必须反映本次提交变更情况<br>注释描述内容需要添加前缀，前缀如下： </li></ul><ul><li>[创建] 通常在项目创建时使用 </li><li>[新增] </li><li>[修改] </li><li>[删除] </li><li>[修复-number] 修复Bug使用，number是Bug编号</li></ul><h4 id="1-2-4-8-构建规范"><a href="#1-2-4-8-构建规范" class="headerlink" title="1.2.4.8    构建规范"></a>1.2.4.8    构建规范</h4><ul><li>(1)    公共组件构建规范 </li><li>(1)    构建输出组件包 </li><li>(2)    构建输出组件源码包 </li><li>(3)    构建发布到公司私有仓库</li><li>(4)    服务组件构建规范 </li><li>(5)    服务组件包命名：{组件名称}-{版本号}-bin.zip </li><li>(6)    构建输出到工程根目录下的target/{组件名称}-{yyyyMMddHH}目录</li></ul><h3 id="1-2-5-测试规范"><a href="#1-2-5-测试规范" class="headerlink" title="1.2.5    测试规范"></a>1.2.5    测试规范</h3><p>在制定测试规范前，我们先了解下测试的概念。软件测试的对象包括软件需求、概要设计、详细设计、软件运行环境、可运行程序和软件源代码等。软件测试包括质量、人员、资源、技术和流程五大要素，以及测试覆盖率和测试效率两个目标。<br>软件测试一般分为4个阶段：单元测试、集成测试、系统测试、验收测试。</p><ul><li>(1)    单元测试：测试系统最小可验证单元，发现BUG，确保符合设计要求。单元测试可以通过编写测试代码实现单元测试，也可以使用postman、浏览器等工具测试开发完的模块功能。</li><li>(2)    集成测试：在单元测试的基础上，把软件单元按照软件概要设计规格说明的规格要求，组装成模块、子系统或系统的过程中各部分工作是否达到或实现相应技术指标及要求。集成测试是测试各个单元模块之间的接口，系统测试是测试整个系统的功能和性能；</li><li>(3)    系统测试：将经过集成测试的软件，作为计算机系统的一部分，与系统中其他部分结合起来，在实际运行环境下进行一系列严格有效的测试，以发现软件潜在的问题，保证系统的正常运行。</li><li>(4)    验收测试：也称交付测试，是针对用户需求、业务流程进行的正式的测试，以确定系统是否满足验收标准，由用户、客户或其他授权机构决定是否接受系统。验收测试包括alpha测试和beta测试，alpha测试是由开发者进行的软件测试，beta测试是由用户在脱离开发环境下进行的软件测试。<br>SpringBoot的测试需要在Pom 添加spring-boot-starter-test和Junit依赖。<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>测试类统一放在src/test目录下。<br> <img src="https://zone-7.github.io/img/springboot/1.2.4.8.png" alt="目录结构"></p>]]></content>
      
      
      <categories>
          
          <category> springboot&amp;vue前后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> VUE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.1 Springboot&amp;VUE开发实践（SpringBoot基础）</title>
      <link href="/2019/07/25/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.1SpringBoot%20%E5%9F%BA%E7%A1%80%20%EF%BC%89/"/>
      <url>/2019/07/25/springboot/2019-07-26-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%EF%BC%881.1SpringBoot%20%E5%9F%BA%E7%A1%80%20%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1-1-SpringBoot-基础"><a href="#1-1-SpringBoot-基础" class="headerlink" title="1.1    SpringBoot 基础"></a>1.1    SpringBoot 基础</h2><h3 id="1-1-1-Spring框架介绍"><a href="#1-1-1-Spring框架介绍" class="headerlink" title="1.1.1    Spring框架介绍"></a>1.1.1    Spring框架介绍</h3><p> Spring是一个开源Java轻量级框架。Spring是为了解决企业级应用开发的复杂性而创建的，使用Spring可以让简单的JavaBean实现之前只有EJB才能完成的事情。但是Spring不仅仅局限于服务器端开发，也为 Java应用提高了简单性、可测试性和松耦合性等。Spring已经集成了20多个模块，这些模块主要被分如下图所示的核心容器、数据访问/集成,、Web、AOP、工具、消息和测试等模块。Spring 框架如下图所示：<br> <img src="https://zone-7.github.io/img/springboot/arc.png" alt="总体架构"></p><ul><li><p>(1)    Core Container 核心容器<br>核心部分分为4大块，spring-core, spring-beans, spring-context, spring-expression. 其中core和bean是整个框架的核心，提供了基础的DI（依赖注入）和IOC（控制反转）功能。 Context建立在core和beans模块之上，提供一种类似JNDI且以框架的方式来操作对象的方式。Context模块从beans模块继承它的功能同时增加了国际化支持，如资源绑定等，同时，Context模块也支持JavaEE功能，如EJB，JMX和基本的远程调用。ApplicationContext接口是context模块的焦点。expression是一种很强大的expression language，支持在运行时查询和操作对象的属性，我们会在后面的文章中举些例子来说明spring expression language的用法。</p></li><li><p>(2)    AOP and instrumentation<br>Aop模块提供了面向切面编程的实现，和AspectJ集成。</p></li><li><p>(3)    Messaging<br>Messaging是spring4新增加的模块，包含了一部分主要的基于message的应用的实现。</p></li><li><p>(4)    Data Access/Integration<br>Data access顾名思义，是spring对数据层提供的支持，是功能比较丰富的模块。提供了包括JDBC，事物，ORM，JMS等一系列实现。</p></li><li><p>(5)    Web<br>Web模块主要提供面向web的一些实现，例如多文件上传，servlet监听器以及spring mvc方面的支持。</p><p>(6)    Test<br>Test模块主要是针对spring的各个模块做各种各样的测试，包括单元测试、集成测试等等。</p></li></ul><h3 id="1-1-2-SpringBoot框架介绍"><a href="#1-1-2-SpringBoot框架介绍" class="headerlink" title="1.1.2    SpringBoot框架介绍"></a>1.1.2    SpringBoot框架介绍</h3><pre><code>SpringBoot并非Spring官方的框架，而是由Pivotal 团队（这里就不介绍这个团队了）在Spring上二次开发并开源公布出来的一个比 Spring更为简化的开发的框架。简而言之，SpringBoot就是一个轻量级，简化配置和开发流程的web整合框架。我们在使用SpringBoot时只需要做相应的配置就可以用所有的Spring组件，不需要像SpringMVC那样手动写一堆xml配置。从本质上来说，Spring Boot就是Spring,它简化了很多开发者利用Spring框架进行开发时，都需要进行的配置。那么它到底有什么功能呢？与Spring相比又有什么优势呢？ </code></pre><h4 id="1-1-2-1-SpringBoot的核心功能"><a href="#1-1-2-1-SpringBoot的核心功能" class="headerlink" title="1.1.2.1    SpringBoot的核心功能"></a>1.1.2.1    SpringBoot的核心功能</h4><ul><li>(1)    可独立运行Spring项目<br>  SpringBoot 可以以jar包形式独立运行，运行一个Spring Boot项目只需要通过java -jar xx.jar来运行。</li><li>(2)    内嵌servlet容器<br>  SpringBoot可以选择内嵌Tomcat、jetty或者Undertow,这样我们无须以war包形式部署项目。</li><li>(3)    提供starter简化Maven配置<br>  Spring提供了一系列的start pom来简化Maven的依赖加载，例如，当你使用了spring-boot-starter-web，会自动加入如图5-1所示的依赖包。</li><li>(4)    自动装配Spring<br>  SpringBoot会根据在类路径中的jar包，类、为jar包里面的类自动配置Bean，这样会极大地减少我们要使用的配置。当然，SpringBoot只考虑大多数的开发场景，并不是所有的场景，若在实际开发中我们需要配置Bean，而SpringBoot灭有提供支持，则可以自定义自动配置。</li><li>(5)    准生产的应用监控<br>  SpringBoot提供基于http ssh telnet对运行时的项目进行监控。</li><li>(6)    无代码生产和xml配置　　<br>  SpringBoot不是借助与代码生成来实现的，而是通过条件注解来实现的，这是Spring4.x提供的新特性。</li></ul><h4 id="1-1-2-2-SpringBoot的优点"><a href="#1-1-2-2-SpringBoot的优点" class="headerlink" title="1.1.2.2    SpringBoot的优点"></a>1.1.2.2    SpringBoot的优点</h4><ul><li><p>编码更简单<br>SpringBoot采用 JavaConfig的方式，对Spring进行配置，并且提供了大量的注解，极大的提高了工作效率。</p></li><li><p>配置更简单<br>SpringBoot提供许多默认配置，同时也支持自定义配置， SpringBoot项目只需一个配置文件：application.properties或者application.yml。不必担心查找配置错误的定位。<br><img src="https://zone-7.github.io/img/springboot/1.1.2.png" alt="优势"></p></li><li><p>部署更简单<br>SpringBoot内置了三种Servlet容器，Tomcat，Jetty,undertow.我们只需要一个Java的运行环境就可以跑SpringBoot的项目了，SpringBoot的项目可以打成一个jar包，然后通过Java -jar xxx.jar来运行（SpringBoot项目的入口是一个main方法，运行该方法即可）。</p></li><li><p>监控更简单<br>SpringBoot提供了actuator包，可以使用它来对应用进行监控。主要提供功能有如下截图</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> springboot&amp;vue前后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> VUE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot&amp;VUE开发实践（目录）</title>
      <link href="/2019/07/25/springboot/2019-07-25-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5/"/>
      <url>/2019/07/25/springboot/2019-07-25-Springboot&amp;VUE%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5/</url>
      
        <content type="html"><![CDATA[<p>   在工作中我们经常因为需要为开发一个后台管理系统或者业务系统，组建由前端开发人员和后端开发人员组成的开发团队，前后端开发人员负责前端页面开发、后端开发人员负责后端业务开发，并为前端暴露接口。<br>然而有一些小项目比较小，团队人员不足的情况下，我们智能硬着头皮都做。<br>以下内容主要介绍工作中大家用的比较多的Springboot 以及VUE框架，并结合DEMO介绍开发流程。其实Springboot、VUE可以整合的技术生态圈非常大，不能一一介绍，但只要掌握相关方法，再多的技术应用也都可以触类旁通。</p><p><img src="https://zone-7.github.io/img/springboot/arc.png" alt="总体架构"></p><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="1-SPRINGBOOT框架开发"><a href="#1-SPRINGBOOT框架开发" class="headerlink" title="1    SPRINGBOOT框架开发"></a>1    SPRINGBOOT框架开发</h2><h3 id="1-1-SPRINGBOOT-基础"><a href="#1-1-SPRINGBOOT-基础" class="headerlink" title="1.1    SPRINGBOOT 基础"></a>1.1    SPRINGBOOT 基础</h3><ul><li>1.1.1    Spring框架介绍     </li><li>1.1.2    SpringBoot框架介绍     <h3 id="1-2-SPRINGBOOT开发规范"><a href="#1-2-SPRINGBOOT开发规范" class="headerlink" title="1.2    SPRINGBOOT开发规范"></a>1.2    SPRINGBOOT开发规范</h3></li><li>1.2.1    开发规范的作用     </li><li>1.2.2    代码仓库规范 </li><li>1.2.3    工程结构规范     </li><li>1.2.4    编码规范 </li><li>1.2.5    测试规范     <h3 id="1-3-SPRINGBOOT注解"><a href="#1-3-SPRINGBOOT注解" class="headerlink" title="1.3    SPRINGBOOT注解"></a>1.3    SPRINGBOOT注解</h3></li><li>1.3.1    SpringBoot/Spring常用注解 </li><li>1.3.2    JPA注解 </li><li>1.3.3    SpringMVC注解     </li><li>1.3.4    全局异常处理注解 </li><li>1.3.5    SpringCloud注解 <h3 id="1-4-第一个工程"><a href="#1-4-第一个工程" class="headerlink" title="1.4    第一个工程"></a>1.4    第一个工程</h3></li><li>1.4.1    step1:创建springboot项目HelloWorld </li><li>1.4.2    Step2:理解工程结构 </li><li>1.4.3    Step3:配置工程 </li><li>1.4.4    Step4:开发测试控制层 </li><li>1.4.5    Step5:运行工程 </li><li>1.4.6    总结 <h3 id="1-5-整合MYBATIS"><a href="#1-5-整合MYBATIS" class="headerlink" title="1.5    整合MYBATIS"></a>1.5    整合MYBATIS</h3></li><li>1.5.1    配置工程 </li><li>1.5.2    创建数据库     </li><li>1.5.3    代码生成     </li><li>1.5.4    案例开发     <h3 id="1-6-整合REDIS"><a href="#1-6-整合REDIS" class="headerlink" title="1.6    整合REDIS"></a>1.6    整合REDIS</h3></li><li>1.6.1    Redis简介     </li><li>1.6.2    配置工程     </li><li>1.6.3    案例开发     <h3 id="1-7-整合RABBITMQ"><a href="#1-7-整合RABBITMQ" class="headerlink" title="1.7    整合RABBITMQ"></a>1.7    整合RABBITMQ</h3></li><li>1.7.1    RabbitMQ简介     </li><li>1.7.2    配置工程 </li><li>1.7.3    案例开发     <h3 id="1-8-整合MONGODB"><a href="#1-8-整合MONGODB" class="headerlink" title="1.8    整合MONGODB"></a>1.8    整合MONGODB</h3></li><li>1.8.1    MongoDB简介     </li><li>1.8.2    配置工程 </li><li>1.8.3    案例开发 <h3 id="1-9-整合OAUTH2-0"><a href="#1-9-整合OAUTH2-0" class="headerlink" title="1.9    整合OAUTH2.0"></a>1.9    整合OAUTH2.0</h3></li><li>1.9.1    Oauth2.0介绍 </li><li>1.9.2    Oauth2.0授权模式     </li><li>1.9.3    SpringBoot整合Oauth2.0 和Spring Security <h3 id="1-10-异常处理"><a href="#1-10-异常处理" class="headerlink" title="1.10    异常处理"></a>1.10    异常处理</h3><h3 id="1-11-日志处理"><a href="#1-11-日志处理" class="headerlink" title="1.11    日志处理"></a>1.11    日志处理</h3><h3 id="1-12-缓存处理"><a href="#1-12-缓存处理" class="headerlink" title="1.12    缓存处理"></a>1.12    缓存处理</h3></li><li>1.12.1    缓存配置 </li><li>1.12.2    注解说明     </li><li>1.12.3    缓存使用     <h3 id="1-13-前端用户权限"><a href="#1-13-前端用户权限" class="headerlink" title="1.13    前端用户权限"></a>1.13    前端用户权限</h3><h3 id="1-14-单元测试"><a href="#1-14-单元测试" class="headerlink" title="1.14    单元测试"></a>1.14    单元测试</h3></li><li>1.14.1    配置 </li><li>1.14.2    编写测试代码     </li><li>1.14.3    执行单元测试     </li><li>1.14.4    打包测试     <h3 id="1-15-打包部署"><a href="#1-15-打包部署" class="headerlink" title="1.15    打包部署"></a>1.15    打包部署</h3></li><li>1.15.1    Docker化部署     </li><li>1.15.2    Web容器部署     <h2 id="2-前端开发框架VUE开发"><a href="#2-前端开发框架VUE开发" class="headerlink" title="2    前端开发框架VUE开发"></a>2    前端开发框架VUE开发</h2><h3 id="2-1-VUE简介"><a href="#2-1-VUE简介" class="headerlink" title="2.1    VUE简介"></a>2.1    VUE简介</h3><h3 id="2-2-安装及快速入门"><a href="#2-2-安装及快速入门" class="headerlink" title="2.2    安装及快速入门"></a>2.2    安装及快速入门</h3><h3 id="2-3-VUE项目目录说明"><a href="#2-3-VUE项目目录说明" class="headerlink" title="2.3    VUE项目目录说明"></a>2.3    VUE项目目录说明</h3><h3 id="2-4-VUE生命周期"><a href="#2-4-VUE生命周期" class="headerlink" title="2.4    VUE生命周期"></a>2.4    VUE生命周期</h3><h3 id="2-5-第一个工程"><a href="#2-5-第一个工程" class="headerlink" title="2.5    第一个工程"></a>2.5    第一个工程</h3><h2 id="3-SPRINGBOOT-VUE案例开发"><a href="#3-SPRINGBOOT-VUE案例开发" class="headerlink" title="3    SPRINGBOOT+VUE案例开发"></a>3    SPRINGBOOT+VUE案例开发</h2><h3 id="3-1-后端开发"><a href="#3-1-后端开发" class="headerlink" title="3.1    后端开发"></a>3.1    后端开发</h3></li><li>3.1.1    创建工程     </li><li>3.1.2    工程配置      </li><li>3.1.3    代码开发     <h3 id="3-2-前端开发"><a href="#3-2-前端开发" class="headerlink" title="3.2    前端开发"></a>3.2    前端开发</h3><h2 id="4-源代码下载"><a href="#4-源代码下载" class="headerlink" title="4    源代码下载"></a>4    源代码下载</h2></li></ul>]]></content>
      
      
      <categories>
          
          <category> springboot&amp;vue前后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> VUE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DevOps实践</title>
      <link href="/2018/10/01/dev/2018-10-01-DevOps%E5%AE%9E%E8%B7%B51/"/>
      <url>/2018/10/01/dev/2018-10-01-DevOps%E5%AE%9E%E8%B7%B51/</url>
      
        <content type="html"><![CDATA[<p>随着软件业务复杂度增加，以及行业竞争日益激烈，无论是客户还是公司自身，都要求软件能快速发布，频繁修改，快速迭代，往往需要开发、测试和运维，三个团队之间需要紧密配合，沟通和交付耗费了大量的精力，团队之间的技术隔阂，阻碍了开发团队的生产力，成了企业亟待解决的难题。<br>DevOps 是 Development和Operations的简称，是一种软件工程的模式，这种模式使得三个团队不再孤立，通过自动化技术将软件生命周期中的开发、测试、部署到运营的每一个过程整合成一套整体的解决方案，提高了生产效率。DevOps打通了开发、测试、运维等环节的的IT工具链，使得各个团队减少时间损耗，更加高效地协同工作。<br><img src="https://zone-7.github.io/img/dev_ops/p0.png" alt="开发、测试、运维"><br>良好的闭环大大提高了软件研发的整体的产出。以下是DevOps能力图。<br><img src="https://zone-7.github.io/img/dev_ops/p1.png" alt="能力图"></p><p>##<br>DevOps中包括版本控制&amp;协作开发工具、自动化构建和测试工具、持续集成&amp;交付工具、部署工具、维护工具、监控，警告&amp;分析工具等等，补充了一些国内的服务，可以让你更好的执行实施 DevOps 工作流。</p><p>版本控制&amp;协作开发：GitHub、GitLab、BitBucket、SubVersion、Coding、Bazaar</p><p>自动化构建和测试:Apache Ant、Maven 、Selenium、PyUnit、QUnit、JMeter、Gradle、PHPUnit、Nexus</p><p>持续集成&amp;交付:Jenkins、Capistrano、BuildBot、Fabric、Tinderbox、Travis CI、flow.ci Continuum、LuntBuild、CruiseControl、Integrity、Gump、Go</p><p>容器平台: Docker、Rocket、Ubuntu（LXC）、第三方厂商如（AWS/阿里云）</p><p>配置管理：Chef、Puppet、CFengine、Bash、Rudder、Powershell、RunDeck、Saltstack、Ansible</p><p>微服务平台：OpenShift、Cloud Foundry、Kubernetes、Mesosphere</p><p>服务开通：Puppet、Docker Swarm、Vagrant、Powershell、OpenStack Heat</p><p>日志管理：Logstash、CollectD、StatsD</p><p>监控，警告&amp;分析：Nagios、Ganglia、Sensu、zabbix、ICINGA、Graphite、Kibana</p>]]></content>
      
      
      <categories>
          
          <category> 开发模式 </category>
          
          <category> DevOps </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DevOps </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简易流程控制框架</title>
      <link href="/2018/08/04/others/2018-08-04-zone7-flow%E7%AE%80%E6%98%93%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E6%A1%86%E6%9E%B6/"/>
      <url>/2018/08/04/others/2018-08-04-zone7-flow%E7%AE%80%E6%98%93%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<p>在工作流开发过程中经常会使用一些主流的工作流框架，这些框架是否强大灵活，但往往需要引入大量的资源，增加了工程的复杂度。简易工作流控制框架是一个可以独立嵌入到java工程或者与Spring整合的简易工作流程框架，可以适应一些只需要简单审核审批业务场景的开发，开发简单，极少的依赖，不对工程已有业务带来大影响。</p><h2 id="项目依赖"><a href="#项目依赖" class="headerlink" title="项目依赖"></a>项目依赖</h2><pre><code>aspectjweaver、spring-core、spring-beans、spring-context</code></pre><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><p>###一、开发步骤<br>1、添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.zone7<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zone7-flow<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、spring 配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 流程管理.开始 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"flowPersistance"</span> <span class="attr">class</span>=<span class="string">"com.github.zone7.admin.bean.FlowPersistanceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"businessEventFactory"</span> <span class="attr">class</span>=<span class="string">"com.github.zone7.flow.spring.common.BusinessEventFactoryImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"taskService"</span> <span class="attr">class</span>=<span class="string">"com.github.zone7..flow.spring.service.impl.TaskServiceImpl"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"flowPersistance"</span> <span class="attr">ref</span>=<span class="string">"flowPersistance"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"businessEventFactory"</span> <span class="attr">ref</span>=<span class="string">"businessEventFactory"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"flowAdvising"</span> <span class="attr">class</span>=<span class="string">"com.github.zone7.flow.spring.common.FlowAspect"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"taskService"</span> <span class="attr">ref</span>=<span class="string">"taskService"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">"flowAdvising"</span>&gt;</span>   </span><br><span class="line">          <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"performance"</span> <span class="attr">expression</span>=<span class="string">"execution(* com.github.zone7.*.*.service.*.*(com.github.zone7.flow.spring.common.FlowAttribute,..)) and @annotation(flow) and args(attr,..)"</span> /&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">aop:around</span>  <span class="attr">pointcut-ref</span>=<span class="string">"performance"</span> <span class="attr">method</span>=<span class="string">"round"</span> /&gt;</span>   </span><br><span class="line">       <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!-- 流程管理.结束 --&gt;</span></span><br></pre></td></tr></table></figure><p>####3、开发持久化类FlowPersistanceImpl<br>    必须是IFlowPersistance接口的实现，可直接使用Demo中的持久化类</p><p>####4、开发业务流程事件类<br>    事件类包含流程开始、结束；流程环节的开始、结束等事件。<br>    例如：<br>    @Component(value=”businessEvent”)<br>    public class BusinessEventImpl extends AbstractBusinessEvent {<br>    }<br>    详细内容可参考Demo</p><p>####5、配置业务类型表Business<br>    为每一个业务添加一条记录。<br>    Action 配置流程事件类的服务名；<br>    ViewURL字段为经办界面还原的视图，在审核审批过程中，显示需要查看的内容。<br>    Businessid字段需要开发人员记住，建议设置为一个有逻辑意义的字符串。</p><p>以上是手动配置，也可以通过系统的图形化界面配置。</p><p>####6、配置流程表 Procedure<br>    流程表由流程ID、机构ID、业务ID组成，表示一种业务，不同的机构可以定义不同的流程。<br>    以上是手动配置，也可以通过系统的图形化界面配置。</p><p>####7、配置流程环节表 Step</p><pre><code>流程环节表示流程中一个环节的定义。包括流程ID、流程环节ID、流程环节名称、上级节点、下级节点、分配方式等。</code></pre><p>以上是手动配置，也可以通过系统的图形化界面配置。</p><p>####8、配置流程环节权限表 Stepgant</p><pre><code>可以给流程环节分配权限，可以按用户ID、角色ID或者机构ID分配权限。以上是手动配置，也可以通过系统的图形化界面配置。</code></pre><p>####9、开发与流程相关的业务代码<br>    与提交审核审批相关的服务代码，需要在函数前使用注解“@Flow”，并且函数的第一个入参数必须是FlowAttribute 。在调用提交审核审批的时候需要将FlowAttrribute参数传进去，FlowAttribute 包含businessid、taskid、userid等属性，以确保系统可以获取到流程相关内容。<br>    例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//服务层代码 Service</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@Flow</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> FlowtestModel <span class="title">commit</span><span class="params">(FlowAttribute attr1,String id)</span> </span>&#123;</span><br><span class="line">String taskid=attr1.getTaskid(); </span><br><span class="line">Flowtest test = flowtestDAO.get(Flowtest.class, id); </span><br><span class="line"><span class="keyword">if</span>(test==<span class="keyword">null</span>)&#123;</span><br><span class="line"><span class="keyword">new</span> BusinessException(<span class="string">"数据不存在"</span>);</span><br><span class="line">&#125;</span><br><span class="line">test.setTaskid(taskid);</span><br><span class="line">flowtestDAO.update(test); </span><br><span class="line">FlowtestModel flowtest=<span class="keyword">new</span> FlowtestModel();</span><br><span class="line">BeanUtils.copyProperties(test, flowtest);</span><br><span class="line"><span class="keyword">return</span> flowtest;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//控制层代码 Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/commit"</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> FlowtestModel <span class="title">commit</span><span class="params">(FlowtestModel model,</span></span></span><br><span class="line"><span class="function"><span class="params">   HttpServletRequest req,HttpServletResponse res)</span></span>&#123;</span><br><span class="line">    <span class="comment">//随机产生一个任务ID</span></span><br><span class="line">String taskid=UUID.randomUUID().toString().replaceAll(<span class="string">"-"</span>, <span class="string">""</span>);</span><br><span class="line">FlowAttribute attr=<span class="keyword">new</span> FlowAttribute();</span><br><span class="line">attr.setTaskid(taskid);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置业务类型编码参考Business表 </span></span><br><span class="line">attr.setBusinessid(<span class="string">"1"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置当前用户的组织机构编号</span></span><br><span class="line">attr.setGroupid(<span class="string">"0"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置当前用户的Id</span></span><br><span class="line">attr.setUserid(getCurrentUser().getUserid());</span><br><span class="line"></span><br><span class="line">model = flowtestService.get(model.getId());</span><br><span class="line"></span><br><span class="line">Map params= MapBeanUtil.beanToMap(model);</span><br><span class="line">attr.setParams(params);</span><br><span class="line"></span><br><span class="line">FlowtestModel f = flowtestService.commit(attr,model.getId()); </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> f;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>###二、表结构说明</p><p>####1、业务类型表Business</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">名称类型可否为空默认值描述</span><br><span class="line">BUSINESSID               VARCHAR2(32)否主键</span><br><span class="line">业务类型ID</span><br><span class="line">BUSINESSNAME         VARCHAR2(100)否业务名称</span><br><span class="line">ACTIVE               VARCHAR2(1)否default &apos;1&apos;是否可用</span><br><span class="line">ACTIONVARCHAR2(500)是事件服务名称</span><br><span class="line">VIEWURL              VARCHAR2(500)是审核审核</span><br><span class="line">查看明细页面</span><br><span class="line">BUSINESSURL          VARCHAR2(500)是经办页面</span><br><span class="line">ALLOWCROSS           VARCHAR2(1)是是否交叉授权</span><br><span class="line">预留</span><br></pre></td></tr></table></figure><p>####2、业务流程表 Procedure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">名称类型可否为空默认值描述</span><br><span class="line">PROCEDUREIDVARCHAR2(32)否主键</span><br><span class="line">业务流程ID</span><br><span class="line">PROCEDURENAMEVARCHAR2(50)否业务流程名称</span><br><span class="line">ACTIVE               VARCHAR2(1)否default &apos;1&apos;是否可用</span><br><span class="line">BUSINESSIDVARCHAR2(32)是业务类型ID</span><br><span class="line">GROUPIDVARCHAR2(32)是机构ID </span><br><span class="line">PROCEDUREDESCVARCHAR2(100)是描述</span><br></pre></td></tr></table></figure><p>####3、业务流程环节表Step</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">名称类型可否为空默认值描述</span><br><span class="line">STEPIDVARCHAR2(32)否主键</span><br><span class="line">业务环节ID</span><br><span class="line">PROCEDUREIDVARCHAR2(32)否流程ID</span><br><span class="line">PREVIOUSSTEPIDVARCHAR2(32)是上级流程ID</span><br><span class="line">NEXTSTEPIDVARCHAR2(32)是下级流程ID</span><br><span class="line">STEPNAMEVARCHAR2(100)否流程环节名称 </span><br><span class="line">FLOWTYPEVARCHAR2(3)是流程环节类型</span><br><span class="line">REFUSERULEVARCHAR2(3)是拒绝规则</span><br><span class="line">ACTIONVARCHAR2(500)是事件类</span><br><span class="line">ASSIGNRULEVARCHAR2(3)是分发规则</span><br><span class="line">URLVARCHAR2(500)是预留</span><br></pre></td></tr></table></figure><p>####4、业务流程环节权限stepgrant</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">名称类型可否为空默认值描述</span><br><span class="line">FLOWGRANTID  VARCHAR2(32)否主键 </span><br><span class="line">STEPID       VARCHAR2(32)否流程环节ID</span><br><span class="line">USERID       VARCHAR2(32)是用户ID</span><br><span class="line">GROUPID        VARCHAR2(32)是机构ID</span><br><span class="line">ROLEIDVARCHAR2(32)是角色ID </span><br><span class="line">ALLOWGRANT   VARCHAR2(1)是0是否允许授权</span><br><span class="line">STARTTIME    DATE是起始时间</span><br><span class="line">ENDTIME      DATE是截止时间</span><br><span class="line">DESCRIPTIOINVARCHAR2(500)是描述</span><br></pre></td></tr></table></figure><p>####5、业务流程任务stepTASK</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">    名称类型可否为空默认值描述</span><br><span class="line">    TASKID     VARCHAR2(32)否主键 </span><br><span class="line">    BUSINESSIDVARCHAR2(32)是业务ID</span><br><span class="line">    BUSINESSNAMEVARCHAR2(100)是业务名称</span><br><span class="line">    STEPID     VARCHAR2(32)是环节ID</span><br><span class="line">    STEPNAME   VARCHAR2(100)是角色ID </span><br><span class="line">    USERID     VARCHAR2(32)是用户ID</span><br><span class="line">    NEXTSTEPID     VARCHAR2(32)是下级流程ID</span><br><span class="line">    NEXTSTEPNAME   VARCHAR2(100)是下级流程名称</span><br><span class="line">    NEXTUSERID     VARCHAR2(32)是下级流程指派用户ID</span><br><span class="line">    TASKSTATE  VARCHAR2(3)是任务状态</span><br><span class="line">                                    1任务未领取,</span><br><span class="line">                                    2任务已领取,</span><br><span class="line">                                    3 任务完成</span><br><span class="line">    CONTENT    VARCHAR2(100)是内容描述</span><br><span class="line">    RESULT     VARCHAR2(3)是审核结果</span><br><span class="line">    CREATETIMEtimestamp是创建时间</span><br><span class="line">    UPDATETIMEtimestamp是更新时间</span><br><span class="line">    TASKLEVEL  NUMBER是任务级别</span><br><span class="line">```               </span><br><span class="line"></span><br><span class="line">####6、任务数据明细steptaskinfo</span><br><span class="line">```text</span><br><span class="line">    名称类型可否为空默认值描述</span><br><span class="line">    taskinfoidVARCHAR2(32)否主键 </span><br><span class="line">    taskidVARCHAR2(32)是任务ID</span><br><span class="line">    nameVARCHAR2(50)是字段名称</span><br><span class="line">    valueVARCHAR2(500)是字段值</span><br></pre></td></tr></table></figure><p>####7、任务日志表stepTASKLOG</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">名称类型可否为空默认值描述</span><br><span class="line">TASKLOGID  VARCHAR2(32)否主键</span><br><span class="line">TASKID     VARCHAR2(32)否任务ID</span><br><span class="line">BUSINESSIDVARCHAR2(32)是业务ID</span><br><span class="line">BUSINESSNAMEVARCHAR2(100)是业务名称</span><br><span class="line">STEPID     VARCHAR2(32)是环节ID</span><br><span class="line">STEPNAME   VARCHAR2(100)是角色ID </span><br><span class="line">USERID     VARCHAR2(32)是用户ID</span><br><span class="line">TASKSTATE  VARCHAR2(3)是任务状态</span><br><span class="line">                                1任务未领取,</span><br><span class="line">                                2任务已领取,</span><br><span class="line">                                3 任务完成</span><br><span class="line">CONTENT    VARCHAR2(100)是内容描述</span><br><span class="line">RESULT     VARCHAR2(3)是审核结果</span><br><span class="line">CREATETIMEtimestamp是创建时间</span><br><span class="line">UPDATETIMEtimestamp是更新时间</span><br><span class="line">TASKLEVEL  NUMBER是任务级别</span><br><span class="line">ISCANCEL   VARCHAR2(1)</span><br><span class="line">    是是否已经撤销</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工作流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建mongoDB副本+分片集群</title>
      <link href="/2018/08/03/cloud/2018-08-03-%E6%90%AD%E5%BB%BAMongoDB%E5%89%AF%E6%9C%AC+%E5%88%86%E7%89%87%E9%9B%86%E7%BE%A4/"/>
      <url>/2018/08/03/cloud/2018-08-03-%E6%90%AD%E5%BB%BAMongoDB%E5%89%AF%E6%9C%AC+%E5%88%86%E7%89%87%E9%9B%86%E7%BE%A4/</url>
      
        <content type="html"><![CDATA[<p>mongodb是目前开源数据库中最常用的NoSQL数据库， MongoDb在用于生产环境的三种模式，master/slaves（主从模式）;replica set(副本集);auto shard 分片模式，本文主要介绍如何搭建高可用的mongodb副本+分片（Replication）集群。</p><h2 id="一、概念"><a href="#一、概念" class="headerlink" title="一、概念"></a>一、概念</h2><p>在搭建集群之前，需要首先了解几个概念：路由、副本集、分片、配置服务器等。<br><img src="https://zone-7.github.io/img/mongodbReplica2.png" alt="概念图"></p><h3 id="1-路由-mongos"><a href="#1-路由-mongos" class="headerlink" title="1.路由 mongos"></a>1.路由 mongos</h3><pre><code>数据库集群请求的入口，所有的请求都通过mongos进行协调，不需要在应用程序添加一个路由选择器，mongos自己就是一个请求分发中心，它负责把对应的数据请求请求转发到对应的shard服务器上。在生产环境通常有多mongos作为请求的入口，防止其中一个挂掉所有的mongodb请求都没有办法操作。</code></pre><h3 id="2-副本集-replica-set"><a href="#2-副本集-replica-set" class="headerlink" title="2.副本集 replica set"></a>2.副本集 replica set</h3><pre><code>MongoDB的replica set是一个mongod进程实例簇，数据在这个簇中相互复制，并自动进行故障切换。MongoDB的数据库复制增加了冗余，确保了高可用性，简化了管理任务如备份，并且增加了读能力。大多数产品部署都使用了复制。MongoDB中primary处理写操作，其它进行复制的成员则是secondaries。</code></pre><h3 id="3-分片-sharding"><a href="#3-分片-sharding" class="headerlink" title="3.分片 sharding"></a>3.分片 sharding</h3><pre><code>到目前为止，你都是把MongoDB当做一台服务器在用，每个mongod实例都包含应用程序数据的完整副本。就算使用了复制，每个副本也都是完整克隆了其他副本的数据。对于大多数应用程序而言，在一台服务器上保存完整数据集是完全可以接受的。但随着数据量的增长，以及应用程序对读写吞吐量的要求越来越高，普通服务器渐渐显得捉襟见肘了。尤其是这些服务器可能无法分配足够的内存，或者没有足够的CPU核数来有效处理工作负荷。除此之外，随着数据量的增长，要在一块磁盘或者一组RAID阵列上保存和管理备份如此大规模的数据集也变得不太现实。如果还想继续使用普通硬件或者虚拟硬件来托管数据库，那么这对这类问题的解决方案就是将数据库分布到多台服务器上，这种方法称之为分片。一个副本集可以最多支持12个成员，但是只有7个成员可以参与投票。</code></pre><h3 id="4-配置服务器config-server"><a href="#4-配置服务器config-server" class="headerlink" title="4.配置服务器config server"></a>4.配置服务器config server</h3><pre><code>顾名思义为配置服务器，存储所有数据库元信息（路由、分片）的配置。mongos本身没有物理存储分片服务器和数据路由信息，只是缓存在内存里，配置服务器则实际存储这些数据。mongos第一次启动或者关掉重启就会从 config server 加载配置信息，以后如果配置服务器信息变化会通知到所有的 mongos 更新自己的状态，这样 mongos 就能继续准确路由。在生产环境通常有多个 config server 配置服务器，因为它存储了分片路由的元数据，防止数据丢失！</code></pre><h2 id="二、环境准备"><a href="#二、环境准备" class="headerlink" title="二、环境准备"></a>二、环境准备</h2><h3 id="1-资源"><a href="#1-资源" class="headerlink" title="1.资源"></a>1.资源</h3><pre><code>系统系统 centos7，三台服务器：192.168.22.101/102/103，下载MongoDB安装包： mongodb-linux-x86_64-3.4.6.tgz</code></pre><h3 id="2，服务器规划"><a href="#2，服务器规划" class="headerlink" title="2，服务器规划"></a>2，服务器规划</h3><pre><code>| 服务器101   |   服务器102 | 服务器103||-----------|------------|---------|| mongos     |   mongos   | mongos  || config server |    config server |    config server || shard server1 主节点    |    shard server1 副节点 |    shard server1 仲裁 || shard server2 仲裁      |    shard server2 主节点 |    shard server2 副节点 || shard server3 副节点    |    shard server3 仲裁 |    shard server3 主节点 |----------端口分配：    mongos：20000    config：21000    shard1：27001    shard2：27002    shard3：27003</code></pre><h3 id="3、架构图"><a href="#3、架构图" class="headerlink" title="3、架构图"></a>3、架构图</h3><p><img src="https://zone-7.github.io/img/mongodbReplica1.png" alt="架构图"></p><h2 id="三、集群搭建"><a href="#三、集群搭建" class="headerlink" title="三、集群搭建"></a>三、集群搭建</h2><h3 id="1、安装mongodb"><a href="#1、安装mongodb" class="headerlink" title="1、安装mongodb"></a>1、安装mongodb</h3><h5 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf mongodb-linux-x86_64-3.4.6.tgz -C /usr/local/</span><br></pre></td></tr></table></figure><h5 id="改名"><a href="#改名" class="headerlink" title="改名"></a>改名</h5><p>mv mongodb-linux-x86_64-3.4.6 mongodb<br>分别在每台机器建立conf、mongos、config、shard1、shard2、shard3六个目录，因为mongos不存储数据，只需要建立日志文件目录即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/local/mongodb/conf</span><br><span class="line">mkdir -p /usr/local/mongodb/mongos/log</span><br><span class="line">mkdir -p /usr/local/mongodb/config/data</span><br><span class="line">mkdir -p /usr/local/mongodb/config/log</span><br><span class="line">mkdir -p /usr/local/mongodb/shard1/data</span><br><span class="line">mkdir -p /usr/local/mongodb/shard1/log</span><br><span class="line">mkdir -p /usr/local/mongodb/shard2/data</span><br><span class="line">mkdir -p /usr/local/mongodb/shard2/log</span><br><span class="line">mkdir -p /usr/local/mongodb/shard3/data</span><br><span class="line">mkdir -p /usr/local/mongodb/shard3/log</span><br></pre></td></tr></table></figure><p>#####配置环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><h5 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export MONGODB_HOME=/usr/local/mongodb</span><br><span class="line">export PATH=$MONGODB_HOME/bin:$PATH</span><br></pre></td></tr></table></figure><h5 id="使立即生效"><a href="#使立即生效" class="headerlink" title="使立即生效"></a>使立即生效</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h3 id="2、config-server配置服务器"><a href="#2、config-server配置服务器" class="headerlink" title="2、config server配置服务器"></a>2、config server配置服务器</h3><p>mongodb3.4以后要求配置服务器也创建副本集，不然集群搭建不成功。<br>添加配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/mongodb/conf/config.conf</span><br></pre></td></tr></table></figure><h5 id="配置文件内容"><a href="#配置文件内容" class="headerlink" title="配置文件内容"></a>配置文件内容</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">pidfilepath = /usr/local/mongodb/config/log/configsrv.pid</span><br><span class="line">dbpath = /usr/local/mongodb/config/data</span><br><span class="line">logpath = /usr/local/mongodb/config/log/congigsrv.log</span><br><span class="line">logappend = true</span><br><span class="line"></span><br><span class="line">bind_ip = 0.0.0.0</span><br><span class="line">port = 21000</span><br><span class="line">fork = true</span><br><span class="line"></span><br><span class="line">#declare this is a config db of a cluster;</span><br><span class="line">configsvr = true</span><br><span class="line"></span><br><span class="line">#副本集名称</span><br><span class="line">replSet=configs</span><br><span class="line"></span><br><span class="line">#设置最大连接数</span><br><span class="line">maxConns=20000</span><br></pre></td></tr></table></figure><p>启动三台服务器的config server</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod -f /usr/local/mongodb/conf/config.conf</span><br></pre></td></tr></table></figure><p>登录任意一台配置服务器，初始化配置副本集</p><p>#####连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo --port 21000</span><br></pre></td></tr></table></figure><p>#####config变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">config = &#123;</span><br><span class="line">    _id : &quot;configs&quot;,</span><br><span class="line">     members : [</span><br><span class="line">         &#123;_id : 0, host : &quot;192.168.22.101:21000&quot; &#125;,</span><br><span class="line">         &#123;_id : 1, host : &quot;192.168.22.102:21000&quot; &#125;,</span><br><span class="line">         &#123;_id : 2, host : &quot;192.168.22.103:21000&quot; &#125;</span><br><span class="line">     ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>#####初始化副本集</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rs.initiate(config)</span><br></pre></td></tr></table></figure><p>其中，”_id” : “configs”应与配置文件中配置的 replicaction.replSetName 一致，”members” 中的 “host” 为三个节点的 ip 和 port</p><h3 id="3、配置分片副本集-三台机器"><a href="#3、配置分片副本集-三台机器" class="headerlink" title="3、配置分片副本集(三台机器)"></a>3、配置分片副本集(三台机器)</h3><p>设置第一个分片副本集<br>配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/mongodb/conf/shard1.conf</span><br></pre></td></tr></table></figure><p>#####配置文件内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">pidfilepath = /usr/local/mongodb/shard1/log/shard1.pid</span><br><span class="line">dbpath = /usr/local/mongodb/shard1/data</span><br><span class="line">logpath = /usr/local/mongodb/shard1/log/shard1.log</span><br><span class="line">logappend = true</span><br><span class="line"></span><br><span class="line">bind_ip = 0.0.0.0</span><br><span class="line">port = 27001</span><br><span class="line">fork = true</span><br><span class="line">  </span><br><span class="line">#副本集名称</span><br><span class="line">replSet=shard1</span><br><span class="line"> </span><br><span class="line">#declare this is a shard db of a cluster;</span><br><span class="line">shardsvr = true</span><br><span class="line"> </span><br><span class="line">#设置最大连接数</span><br><span class="line">maxConns=20000</span><br></pre></td></tr></table></figure><p>启动三台服务器的shard1 server</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod -f /usr/local/mongodb/conf/shard1.conf</span><br></pre></td></tr></table></figure><p>登陆任意一台服务器，初始化副本集</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo --port 27001</span><br></pre></td></tr></table></figure><p>#####使用admin数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use admin</span><br></pre></td></tr></table></figure><p>#####定义副本集配置，第三个节点的 “arbiterOnly”:true 代表其为仲裁节点。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">config = &#123;</span><br><span class="line">_id : &quot;shard1&quot;,</span><br><span class="line">members:[&#123;_id : 0, host : &quot;192.168.22.101:27001&quot; &#125;,</span><br><span class="line">&#123;_id : 1, host : &quot;192.168.22.102:27001&quot; &#125;,</span><br><span class="line">&#123;_id : 2, host : &quot;192.168.22.103:27001&quot;, arbiterOnly: true &#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>#####初始化副本集配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rs.initiate(config);</span><br></pre></td></tr></table></figure><p>设置第二个分片副本集<br>配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/mongodb/conf/shard2.conf</span><br></pre></td></tr></table></figure><p>#####配置文件内容 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">pidfilepath = /usr/local/mongodb/shard2/log/shard2.pid</span><br><span class="line">dbpath = /usr/local/mongodb/shard2/data</span><br><span class="line">logpath = /usr/local/mongodb/shard2/log/shard2.log</span><br><span class="line">logappend = true</span><br><span class="line"></span><br><span class="line">bind_ip = 0.0.0.0</span><br><span class="line">port = 27002</span><br><span class="line">fork = true</span><br><span class="line">   </span><br><span class="line">#副本集名称</span><br><span class="line">replSet=shard2 </span><br><span class="line">#declare this is a shard db of a cluster;</span><br><span class="line">shardsvr = true</span><br><span class="line"> </span><br><span class="line">#设置最大连接数</span><br><span class="line">maxConns=20000</span><br></pre></td></tr></table></figure><p>启动三台服务器的shard2 server</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod -f /usr/local/mongodb/conf/shard2.conf</span><br></pre></td></tr></table></figure><p>登陆任意一台服务器，初始化副本集</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo --port 27002</span><br></pre></td></tr></table></figure><p>#####使用admin数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use admin</span><br></pre></td></tr></table></figure><p>#####定义副本集配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">config = &#123;</span><br><span class="line">   _id : &quot;shard2&quot;,</span><br><span class="line">  members : [</span><br><span class="line">      &#123;_id : 0, host : &quot;192.168.22.101:27002&quot;  , arbiterOnly: true &#125;,</span><br><span class="line">     &#123;_id : 1, host : &quot;192.168.22.102:27002&quot; &#125;,</span><br><span class="line">     &#123;_id : 2, host : &quot;192.168.22.103:27002&quot; &#125;</span><br><span class="line">    ]</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>#####初始化副本集配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rs.initiate(config);</span><br></pre></td></tr></table></figure><p>设置第三个分片副本集<br>配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/mongodb/conf/shard3.conf</span><br></pre></td></tr></table></figure><p>#####配置文件内容 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">pidfilepath = /usr/local/mongodb/shard3/log/shard3.pid</span><br><span class="line">dbpath = /usr/local/mongodb/shard3/data</span><br><span class="line">logpath = /usr/local/mongodb/shard3/log/shard3.log</span><br><span class="line">logappend = true</span><br><span class="line"></span><br><span class="line">bind_ip = 0.0.0.0</span><br><span class="line">port = 27003</span><br><span class="line">fork = true</span><br><span class="line">  </span><br><span class="line">#副本集名称</span><br><span class="line">replSet=shard3</span><br><span class="line"> </span><br><span class="line">#declare this is a shard db of a cluster;</span><br><span class="line">shardsvr = true</span><br><span class="line"> </span><br><span class="line">#设置最大连接数</span><br><span class="line">maxConns=20000</span><br></pre></td></tr></table></figure><p>启动三台服务器的shard3 server</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod -f /usr/local/mongodb/conf/shard3.conf</span><br></pre></td></tr></table></figure><p>登陆任意一台服务器，初始化副本集</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo --port 27003</span><br></pre></td></tr></table></figure><p>#####使用admin数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use admin</span><br></pre></td></tr></table></figure><p>#####定义副本集配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">config = &#123;</span><br><span class="line">  _id : &quot;shard3&quot;,</span><br><span class="line"> members : [</span><br><span class="line">  &#123;_id : 0, host : &quot;192.168.22.101:27003&quot; &#125;,</span><br><span class="line">      &#123;_id : 1, host : &quot;192.168.22.102:27003&quot; , arbiterOnly: true&#125;,</span><br><span class="line">   &#123;_id : 2, host : &quot;192.168.22.103:27003&quot; &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>#####初始化副本集配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rs.initiate(config);</span><br></pre></td></tr></table></figure><p>###4、配置路由服务器 mongos<br>先启动配置服务器和分片服务器,后启动路由实例启动路由实例:（三台机器）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/mongodb/conf/mongos.conf</span><br></pre></td></tr></table></figure><p>#####内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">pidfilepath = /usr/local/mongodb/mongos/log/mongos.pid</span><br><span class="line">logpath = /usr/local/mongodb/mongos/log/mongos.log</span><br><span class="line">logappend = true</span><br><span class="line"></span><br><span class="line">bind_ip = 0.0.0.0</span><br><span class="line">port = 20000</span><br><span class="line">fork = true</span><br><span class="line"></span><br><span class="line">#监听的配置服务器,只能有1个或者3个 configs为配置服务器的副本集名字</span><br><span class="line">configdb = configs/192.168.22.101:21000,192.168.22.102:21000,192.168.22.103:21000</span><br><span class="line"> </span><br><span class="line">#设置最大连接数</span><br><span class="line">maxConns=20000</span><br></pre></td></tr></table></figure><p>启动三台服务器的mongos server<br>mongos -f /usr/local/mongodb/conf/mongos.conf</p><p>###5、启用分片<br>目前搭建了mongodb配置服务器、路由服务器，各个分片服务器，不过应用程序连接到mongos路由服务器并不能使用分片机制，还需要在程序里设置分片配置，让分片生效。<br>登陆任意一台mongos<br>mongo –port 20000</p><p>#使用admin数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">use  admin</span><br><span class="line">#串联路由服务器与分配副本集</span><br><span class="line">sh.addShard(&quot;shard1/192.168.22.101:27001,192.168.22.102:27001,192.168.22.103:27001&quot;)</span><br><span class="line">sh.addShard(&quot;shard2/192.168.22.101:27002,192.168.22.102:27002,192.168.22.103:27002&quot;)</span><br><span class="line">sh.addShard(&quot;shard3/192.168.22.101:27003,192.168.22.102:27003,192.168.22.103:27003&quot;)</span><br><span class="line">#查看集群状态</span><br><span class="line">sh.status()</span><br></pre></td></tr></table></figure><p>###6、测试<br>目前配置服务、路由服务、分片服务、副本集服务都已经串联起来了，但我们的目的是希望插入数据，数据能够自动分片。连接在mongos上，准备让指定的数据库、指定的集合分片生效。</p><p>#####指定testdb分片生效<br>db.runCommand( { enablesharding :”testdb”});</p><p>use tested<br>db.table1.ensureIndex({id:1})</p><p>#####指定数据库里需要分片的集合和片键</p><p>db.runCommand( { shardcollection : “testdb.table1”,key : {id: 1} } )</p><p>#####如果是采用hash分片</p><p>#####db.runCommand( { shardcollection : “testdb.table1”,key : {_id: “hashed”} } )</p><p>我们设置testdb的 table1 表需要分片，根据 id 自动分片到 shard1 ，shard2，shard3 上面去。要这样设置是因为不是所有mongodb 的数据库和表 都需要分片！<br>测试分片配置结果<br>mongo  127.0.0.1:20000</p><p>#####使用testdb<br>use  testdb;</p><p>#####插入测试数据<br>for (var i = 1; i &lt;= 100; i++)db.table2.save({id:i,”test1”:”testval1”});</p><p>#####查看分片情况如下，部分无关信息省掉了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">db.table1.stats();</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">        &quot;sharded&quot; : true,</span><br><span class="line">        &quot;ns&quot; : &quot;testdb.table1&quot;,</span><br><span class="line">        &quot;count&quot; : 100000,</span><br><span class="line">        &quot;numExtents&quot; : 13,</span><br><span class="line">        &quot;size&quot; : 5600000,</span><br><span class="line">        &quot;storageSize&quot; : 22372352,</span><br><span class="line">        &quot;totalIndexSize&quot; : 6213760,</span><br><span class="line">        &quot;indexSizes&quot; : &#123;</span><br><span class="line">                &quot;_id_&quot; : 3335808,</span><br><span class="line">                &quot;id_1&quot; : 2877952</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;avgObjSize&quot; : 56,</span><br><span class="line">        &quot;nindexes&quot; : 2,</span><br><span class="line">        &quot;nchunks&quot; : 3,</span><br><span class="line">        &quot;shards&quot; : &#123;</span><br><span class="line">                &quot;shard1&quot; : &#123;</span><br><span class="line">                        &quot;ns&quot; : &quot;testdb.table1&quot;,</span><br><span class="line">                        &quot;count&quot; : 42183,</span><br><span class="line">                        &quot;size&quot; : 0,</span><br><span class="line">                        ...</span><br><span class="line">                        &quot;ok&quot; : 1</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;shard2&quot; : &#123;</span><br><span class="line">                        &quot;ns&quot; : &quot;testdb.table1&quot;,</span><br><span class="line">                        &quot;count&quot; : 38937,</span><br><span class="line">                        &quot;size&quot; : 2180472,</span><br><span class="line">                        ...</span><br><span class="line">                        &quot;ok&quot; : 1</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;shard3&quot; : &#123;</span><br><span class="line">                        &quot;ns&quot; : &quot;testdb.table1&quot;,</span><br><span class="line">                        &quot;count&quot; :18880,</span><br><span class="line">                        &quot;size&quot; : 3419528,</span><br><span class="line">                        ...</span><br><span class="line">                        &quot;ok&quot; : 1</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;ok&quot; : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到数据分到3个分片，各自分片数量为： shard1 “count” : 42183，shard2 “count” : 38937，shard3 “count” : 18880。已经成功了！<br>后期运维<br>启动关闭<br>mongodb的启动顺序是，先启动配置服务器，在启动分片，最后启动mongos.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mongod -f /usr/local/mongodb/conf/config.conf</span><br><span class="line">mongod -f /usr/local/mongodb/conf/shard1.conf</span><br><span class="line">mongod -f /usr/local/mongodb/conf/shard2.conf</span><br><span class="line">mongod -f /usr/local/mongodb/conf/shard3.conf</span><br><span class="line">mongod -f /usr/local/mongodb/conf/mongos.conf</span><br></pre></td></tr></table></figure><p>关闭时，直接killall杀掉所有进程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">killall mongod</span><br><span class="line">killall mongos</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
            <tag> NoSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用SeetaFace和Dlib实现人脸识别</title>
      <link href="/2018/02/24/others/2018-02-24-%E4%BD%BF%E7%94%A8SeetaFace%20%E5%92%8CDlib%E5%AE%9E%E7%8E%B0%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
      <url>/2018/02/24/others/2018-02-24-%E4%BD%BF%E7%94%A8SeetaFace%20%E5%92%8CDlib%E5%AE%9E%E7%8E%B0%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p>使用SeetaFace 和 Dlib 实现人脸识别</p><h2 id="SeetaFace-介绍"><a href="#SeetaFace-介绍" class="headerlink" title="SeetaFace 介绍"></a>SeetaFace 介绍</h2><p>seetaface由中科院计算所山世光研究员带领的人脸识别研究组研发。代码基于C++实现,不依赖第三方库。开源免费可用。<br>工程包括人脸检测、人脸对齐、人脸识别三个模块。<br>Github 地址是：<a href="https://github.com/seetaface/SeetaFaceEngine" target="_blank" rel="noopener">https://github.com/seetaface/SeetaFaceEngine</a></p><h2 id="Dlib介绍"><a href="#Dlib介绍" class="headerlink" title="Dlib介绍"></a>Dlib介绍</h2><p>Dlib是一个C++库，包含了许多机器学习算法，也包括人脸特征检测算法。它是跨平台的，可以应用在Windows、Linux、Mac、embedded devices、mobile phones等。它的License是Boost Software License 1.0，可以商用。Dlib的主要特点可以参考官方网站：<a href="http://dlib.net/。" target="_blank" rel="noopener">http://dlib.net/。</a><br>Dlib人脸特征检测实现了68点标定,拿到68点后就可以用于人脸识别比对和活体检测。</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h3><p>本案例使用的是Microsoft Visual Studio VC++ 2013</p><h3 id="安装Opencv"><a href="#安装Opencv" class="headerlink" title="安装Opencv"></a>安装Opencv</h3><p>OpenCV实现了图像处理和计算机视觉方面的很多通用算法，可以用于人脸识别过程的图像处理。我在测试时使用的是opencv2.4.12。</p><h3 id="下载SeetaFace并编译"><a href="#下载SeetaFace并编译" class="headerlink" title="下载SeetaFace并编译"></a>下载SeetaFace并编译</h3><p>自行下载SeetaFace源码，并编译出三个lib文件和三个dll文件。编译出的结果包括：<br>FaceIdentification.lib  FaceIdentification.dll<br>FaceAlignment.lib   FaceAlignment.dll<br>FaceDetection.lib    FaceDetection.dll</p><h3 id="下载Dlib源码"><a href="#下载Dlib源码" class="headerlink" title="下载Dlib源码"></a>下载Dlib源码</h3><p>Dlib 可以在其官网下载<a href="http://dlib.net/" target="_blank" rel="noopener">http://dlib.net/</a></p><h3 id="新建工程修改配置"><a href="#新建工程修改配置" class="headerlink" title="新建工程修改配置"></a>新建工程修改配置</h3><p>① 新建win32控制台项目，命名为：FaceIdentificationServer。<br>在工程目录中新建目录“include/seeta”和“include/dlib”。<br>将项目属性改为x64。将seetaFace源码所有”.h”文件拷贝到工程目录下的include/seeta 目录下。<br>将dlib 源代码整个“dlib”文件夹拷贝到“/include/dlib”文件夹下。<br>② 在配置属性“VC++目录”中，修改opencv的包含目录和库目录，opencv使用x64的lib库。修改“库目录”增加OpenCV的lib目录：“\opencv\2.4.12\build\x64\vc12”；<br>修改“包含目录”，增加：<br>“..\include\dlib”、<br>“..\include\seeta”、<br>“D:\greensoftware\opencv\2.4.12\build\include”、<br>“D:\greensoftware\opencv\2.4.12\build\include\opencv”、<br>“D:\greensoftware\opencv\2.4.12\build\include\opencv2”。</p><p>③ 在链接器的“输入”中，加入以下几个lib：<br>dlib.lib<br>opencv_calib3d2412d.lib<br>opencv_contrib2412d.lib<br>opencv_core2412d.lib<br>opencv_features2d2412d.lib<br>opencv_flann2412d.lib<br>opencv_gpu2412d.lib<br>opencv_highgui2412d.lib<br>opencv_imgproc2412d.lib<br>opencv_legacy2412d.lib<br>opencv_ml2412d.lib<br>opencv_objdetect2412d.lib<br>opencv_ts2412d.lib<br>opencv_video2412d.lib<br>FaceAlignment.lib<br>FaceDetection.lib<br>Identification.lib</p><p>④将与seetaFace的6个lib文件对应的dll文件放入可执行文件目录下。<br>⑤将seetaface源码中的三个model以及dlib人脸检测模型文件<br>feets.dat、lbpcascade_frontalface.xml、shape_predictor_68_face_landmarks.dat<br>放到项目执行文件夹的model文件夹下。<br>项目整体结构：<br>x64\Debug\model 用于放模型文件<br>x64\Debug\data  用于放测试照片、人脸特征数据和配置文件</p><h2 id="人脸识别实现"><a href="#人脸识别实现" class="headerlink" title="人脸识别实现"></a>人脸识别实现</h2><h3 id="获取照片特征"><a href="#获取照片特征" class="headerlink" title="获取照片特征"></a>获取照片特征</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">getFeature</span><span class="params">(cv::Mat src_img, <span class="keyword">float</span>* feat_pic1)</span></span>&#123;</span><br><span class="line">cv::Mat src_img_gray;</span><br><span class="line"><span class="keyword">if</span> (src_img.channels() != <span class="number">1</span>)</span><br><span class="line">cv::cvtColor(src_img, src_img_gray, cv::COLOR_BGR2GRAY);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">src_img_gray = src_img;</span><br><span class="line">IplImage src_img_grayscaletmp = src_img_gray;</span><br><span class="line"></span><br><span class="line">IplImage *src_img_grayscale = cvCloneImage(&amp;src_img_grayscaletmp);</span><br><span class="line"><span class="keyword">if</span> (src_img_grayscale == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">IplImage src_img_colortmp = src_img;</span><br><span class="line">IplImage *src_img_color = cvCloneImage(&amp;src_img_colortmp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> src_im_width = src_img_grayscale-&gt;width;</span><br><span class="line"><span class="keyword">int</span> src_im_height = src_img_grayscale-&gt;height;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span>* src_data = <span class="keyword">new</span> <span class="keyword">unsigned</span> <span class="keyword">char</span>[src_im_width * src_im_height];</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span>* src_image_data_ptr = (<span class="keyword">unsigned</span> <span class="keyword">char</span>*)src_img_grayscale-&gt;imageData;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span>* data_ptr;</span><br><span class="line"><span class="keyword">int</span> hh = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取照片数据1</span></span><br><span class="line">data_ptr = src_data;</span><br><span class="line"><span class="keyword">for</span> (hh = <span class="number">0</span>; hh &lt; src_im_height; hh++) &#123;</span><br><span class="line"><span class="built_in">memcpy</span>(data_ptr, src_image_data_ptr, src_im_width);</span><br><span class="line">data_ptr += src_im_width;</span><br><span class="line">src_image_data_ptr += src_img_grayscale-&gt;widthStep;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">seeta::ImageData src_image_data;</span><br><span class="line">src_image_data.data = src_data;</span><br><span class="line">src_image_data.width = src_im_width;</span><br><span class="line">src_image_data.height = src_im_height;</span><br><span class="line">src_image_data.num_channels = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Detect faces 1</span></span><br><span class="line">g_lock_detech.lock();</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;seeta::FaceInfo&gt; src_faces = seeta_detector.Detect(src_image_data);</span><br><span class="line">g_lock_detech.unlock();</span><br><span class="line"></span><br><span class="line"><span class="keyword">int32_t</span> face_num1 = <span class="keyword">static_cast</span>&lt;<span class="keyword">int32_t</span>&gt;(src_faces.size());</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (face_num1 == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span>[]src_data;</span><br><span class="line">cvReleaseImage(&amp;src_img_grayscale);</span><br><span class="line">cvReleaseImage(&amp;src_img_color);</span><br><span class="line"><span class="keyword">return</span>  <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Detect 5 facial landmarks</span></span><br><span class="line">seeta::FacialLandmark src_points[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; face_num1; k++)</span><br><span class="line">&#123;</span><br><span class="line">g_lock_detech.lock();</span><br><span class="line"></span><br><span class="line">seeta_alignment.PointDetectLandmarks(src_image_data, src_faces[k], src_points);</span><br><span class="line">g_lock_detech.unlock();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Release memory</span></span><br><span class="line">cvReleaseImage(&amp;src_img_color);</span><br><span class="line">cvReleaseImage(&amp;src_img_grayscale);</span><br><span class="line"><span class="keyword">delete</span>[]src_data;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ImageData store data of an image without memory alignment.</span></span><br><span class="line">seeta::<span class="function">ImageData <span class="title">src_img_data</span><span class="params">(src_img.cols, src_img.rows, src_img.channels())</span></span>;</span><br><span class="line">src_img_data.data = src_img.data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Extract feature: ExtractFeatureWithCrop */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">g_lock_detech.lock();</span><br><span class="line"></span><br><span class="line">seeta_recognizer.ExtractFeatureWithCrop(src_img_data, src_points, feat_pic1);</span><br><span class="line">g_lock_detech.unlock();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">获取特征</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">float</span>*&gt; getFeatures(<span class="built_in">vector</span>&lt;cv::Mat&gt; src_imgs)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> feat_size = seeta_recognizer.feature_size();</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">float</span>*&gt; feat_pics;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">clock_t</span> start;</span><br><span class="line">start = clock();</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; src_imgs.size(); i++)&#123;</span><br><span class="line"></span><br><span class="line">cv::Mat src_img = src_imgs[i];</span><br><span class="line"><span class="keyword">float</span>* feat_pic1 = <span class="keyword">new</span> <span class="keyword">float</span>[feat_size];<span class="comment">//n * c * h * w</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> suc = getFeature(src_img, feat_pic1);</span><br><span class="line"><span class="keyword">if</span> (suc)&#123;</span><br><span class="line">feat_pics.push_back(feat_pic1);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"获取人脸特征:"</span> &lt;&lt; (clock() - start) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> feat_pics;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">floatToString</span><span class="params">(<span class="keyword">float</span> Num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">ostringstream</span> oss;</span><br><span class="line">oss &lt;&lt; Num;</span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">str</span><span class="params">(oss.str())</span></span>;</span><br><span class="line"><span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">featureToString</span><span class="params">(<span class="keyword">float</span> *feature)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> size = seeta_recognizer.feature_size();</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> row = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++)&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">row += floatToString(feature[i]);</span><br><span class="line"><span class="keyword">if</span> (i &lt; size - <span class="number">1</span>)&#123;</span><br><span class="line">row += <span class="string">","</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> row;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1比1人脸照片比对"><a href="#1比1人脸照片比对" class="headerlink" title="1比1人脸照片比对"></a>1比1人脸照片比对</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">人脸比对</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">match</span><span class="params">(cv::Mat src_img, cv::Mat dist_img)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;cv::Mat&gt; imgs;</span><br><span class="line">imgs.push_back(src_img);</span><br><span class="line">imgs.push_back(dist_img);</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">float</span>*&gt; feats = getFeatures(imgs);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> sim = seeta_recognizer.CalcSimilarity(feats[<span class="number">0</span>], feats[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; feats.size(); i++)&#123;</span><br><span class="line"><span class="keyword">delete</span> feats[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"相似度:  "</span> &lt;&lt; sim &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> sim;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="获取特征点检测活体"><a href="#获取特征点检测活体" class="headerlink" title="获取特征点检测活体"></a>获取特征点检测活体</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">获取特征点</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">dlib::<span class="function">full_object_detection <span class="title">getFeaturePoint</span><span class="params">(cv::Mat temp)</span></span>&#123;</span><br><span class="line">dlib::full_object_detection res;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (temp.rows &lt;= <span class="number">0</span> || temp.cols &lt;= <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cv::Mat face_gray;</span><br><span class="line">cvtColor(temp, face_gray, CV_BGR2GRAY);  <span class="comment">//rgb类型转换为灰度类型</span></span><br><span class="line">equalizeHist(face_gray, face_gray);   <span class="comment">//直方图均衡化</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;cv::Rect&gt; cvfaces;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> flags = CV_HAAR_FIND_BIGGEST_OBJECT | CV_HAAR_DO_ROUGH_SEARCH;    <span class="comment">//只检测脸最大的人  </span></span><br><span class="line">g_lock_detech.lock();</span><br><span class="line"></span><br><span class="line">face_cascade.detectMultiScale(face_gray, cvfaces, <span class="number">1.1f</span>, <span class="number">4</span>, flags, cv::Size(<span class="number">30</span>, <span class="number">30</span>));</span><br><span class="line">g_lock_detech.unlock();</span><br><span class="line"></span><br><span class="line"><span class="comment">//|CV_HAAR_FIND_BIGGEST_OBJECT</span></span><br><span class="line"><span class="comment">//|CV_HAAR_DO_ROUGH_SEARCH</span></span><br><span class="line"><span class="comment">//|CV_HAAR_SCALE_IMAGE</span></span><br><span class="line"></span><br><span class="line">dlib::cv_image&lt;dlib::bgr_pixel&gt; cimg(temp);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (cvfaces.size() &gt; <span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line">dlib::rectangle det;</span><br><span class="line"><span class="keyword">int</span> faceSize = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> n = <span class="number">0</span>; n &lt; cvfaces.size(); n++)&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> s = cvfaces[n].width * cvfaces[n].height;</span><br><span class="line"><span class="keyword">if</span> (s &gt; faceSize)&#123;</span><br><span class="line">faceSize = s;</span><br><span class="line">det.set_left(cvfaces[n].x);</span><br><span class="line">det.set_top(cvfaces[n].y);</span><br><span class="line">det.set_right(cvfaces[n].x + cvfaces[n].width);</span><br><span class="line">det.set_bottom(cvfaces[n].y + cvfaces[n].height);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res = pose_model(cimg, det);</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//DLIB 获取特征点</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;dlib::full_object_detection&gt; getFeaturePoints(<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;cv::Mat&gt; images)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">clock_t</span> start = clock();</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;dlib::full_object_detection&gt; objs;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; images.size(); i++)&#123;</span><br><span class="line"></span><br><span class="line">cv::Mat temp = images[i];</span><br><span class="line"><span class="keyword">if</span> (temp.rows &lt;= <span class="number">0</span> || temp.cols &lt;= <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">dlib::full_object_detection obj = getFeaturePoint(temp);</span><br><span class="line"><span class="keyword">if</span> (obj.num_parts()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">objs.push_back(obj);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"获取特征点："</span> &lt;&lt; (clock() - start) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> objs;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">是否有张合嘴</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isMouseLive</span><span class="params">(<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;dlib::full_object_detection&gt; ps)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (ps.size() == <span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> min_h = <span class="number">99999999999999</span>;</span><br><span class="line"><span class="keyword">long</span> max_h = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> min = <span class="number">99999999999999</span>;</span><br><span class="line"><span class="keyword">double</span> max = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> n = <span class="number">0</span>; n &lt; ps.size(); n++)&#123;</span><br><span class="line">dlib::full_object_detection p = ps[n];</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> w = p.part(<span class="number">54</span>).x() - p.part(<span class="number">60</span>).x();</span><br><span class="line"><span class="keyword">long</span> h = p.part(<span class="number">57</span>).y() - p.part(<span class="number">51</span>).y();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (h&lt;min_h)&#123;</span><br><span class="line">min_h = h;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (h&gt;max_h)&#123;</span><br><span class="line">max_h = h;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> bl = h*<span class="number">1.0</span> / w*<span class="number">1.0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (bl &lt; min)&#123;</span><br><span class="line">min = bl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (bl &gt; max)&#123;</span><br><span class="line">max = bl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (max &lt;= <span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (min &lt;= <span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> p = (max - min) *<span class="number">1.0</span> / max *<span class="number">1.0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//std::cout &lt;&lt; p &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (p &gt; <span class="number">0.5</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//是否摇头</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isHeadLive</span><span class="params">(<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;dlib::full_object_detection&gt; ps)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (ps.size() == <span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> lefted = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">bool</span> righted = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> max_right = <span class="number">0</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> n = <span class="number">0</span>; n &lt; ps.size(); n++)&#123;</span><br><span class="line">dlib::full_object_detection p = ps[n];</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> w = p.part(<span class="number">14</span>).x() - p.part(<span class="number">2</span>).x();</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> left = p.part(<span class="number">30</span>).x() - p.part(<span class="number">2</span>).x();</span><br><span class="line"><span class="keyword">long</span> right = p.part(<span class="number">14</span>).x() - p.part(<span class="number">30</span>).x();</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> l = left*<span class="number">1.0</span> / right;</span><br><span class="line"><span class="keyword">double</span> r = right*<span class="number">1.0</span> / left;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (l &lt; <span class="number">0.6</span> &amp;&amp; !lefted)&#123;</span><br><span class="line">lefted = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (r &lt; <span class="number">0.6</span> &amp;&amp; !righted)&#123;</span><br><span class="line">righted = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (lefted &amp;&amp; righted)<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> (lefted &amp;&amp; righted)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//是否眨眼</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isEyeLive</span><span class="params">(<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;dlib::full_object_detection&gt; ps)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//left 37,38,41,42 | 36,39</span></span><br><span class="line"><span class="comment">//right 43,44,46,47 | 42,45</span></span><br><span class="line"><span class="keyword">double</span> max_left = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">double</span> min_left = <span class="number">9999999</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> max_right = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">double</span> min_right = <span class="number">9999999</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> n = <span class="number">0</span>; n &lt; ps.size(); n++)&#123;</span><br><span class="line">dlib::full_object_detection p = ps[n];</span><br><span class="line"><span class="keyword">long</span> left_w = p.part(<span class="number">39</span>).x() - p.part(<span class="number">36</span>).x();</span><br><span class="line"><span class="keyword">long</span> right_w = p.part(<span class="number">45</span>).x() - p.part(<span class="number">42</span>).x();</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> right_h = p.part(<span class="number">46</span>).y() - p.part(<span class="number">44</span>).y();</span><br><span class="line"><span class="keyword">long</span> right_h2 = p.part(<span class="number">47</span>).y() - p.part(<span class="number">43</span>).y();</span><br><span class="line"><span class="keyword">long</span> r = right_h + right_h2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> right_d = r*<span class="number">1.0</span> / right_w;</span><br><span class="line"><span class="keyword">if</span> (right_d &gt; max_right)&#123;</span><br><span class="line">max_right = right_d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (right_d &lt; min_right)&#123;</span><br><span class="line">min_right = right_d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> left_h = p.part(<span class="number">41</span>).y() - p.part(<span class="number">37</span>).y();</span><br><span class="line"><span class="keyword">long</span> left_h2 = p.part(<span class="number">40</span>).y() - p.part(<span class="number">38</span>).y();</span><br><span class="line"><span class="keyword">long</span> l = left_h + left_h2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> left_d = l * <span class="number">1.0</span> / left_w;</span><br><span class="line"><span class="keyword">if</span> (left_d &gt; max_left)&#123;</span><br><span class="line">max_left = left_d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (left_d &lt; min_left)&#123; </span><br><span class="line">min_left = left_d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> dd_left=(max_left - min_left) / max_left;</span><br><span class="line"><span class="keyword">double</span> dd_right = (max_right - min_right) / max_right;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"eye "</span> &lt;&lt; dd_left &lt;&lt; <span class="string">"   "</span> &lt;&lt; dd_right &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (dd_left&gt;<span class="number">0.45</span> || dd_right &gt; <span class="number">0.45</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isAlive</span><span class="params">(<span class="built_in">string</span> n, <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;dlib::full_object_detection&gt;  pp, <span class="keyword">bool</span> mouse, <span class="keyword">bool</span> head, <span class="keyword">bool</span> eye, <span class="keyword">int</span> relayType=<span class="number">1</span>)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (relayType == <span class="number">0</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;dlib::full_object_detection&gt; ps;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;pp.size(); i++)&#123;</span><br><span class="line">ps.push_back(pp[i]); </span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span> (ps.size() &lt; <span class="number">2</span>)&#123; <span class="comment">//小于两张就无法判断活体</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> max_area = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">long</span> min_area = <span class="number">99999999</span>;</span><br><span class="line"><span class="keyword">long</span> avg_area = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> max_len = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">long</span> min_len = <span class="number">99999999</span>;</span><br><span class="line"><span class="comment">//long max_x = 0;</span></span><br><span class="line"><span class="comment">//long max_y = 0;</span></span><br><span class="line"><span class="comment">//long min_x = 0;</span></span><br><span class="line"><span class="comment">//long min_y = 0;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> n = <span class="number">0</span>; n &lt; ps.size(); n++)&#123;</span><br><span class="line">dlib::full_object_detection p = ps[n];</span><br><span class="line"><span class="keyword">long</span> a = p.get_rect().area();</span><br><span class="line">avg_area += a;</span><br><span class="line"><span class="keyword">if</span> (max_area &lt; a)&#123;</span><br><span class="line">max_area = a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (max_area &gt; a)&#123;</span><br><span class="line">min_area = a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> x = (p.part(<span class="number">14</span>).x() - p.part(<span class="number">2</span>).x())*<span class="number">1.0</span> / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">long</span> y = (p.part(<span class="number">8</span>).y() - p.part(<span class="number">27</span>).y())*<span class="number">1.0</span> / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//中心点距离</span></span><br><span class="line"><span class="keyword">long</span> len = <span class="built_in">sqrt</span>((x - <span class="number">0</span>)*(x - <span class="number">0</span>) + (y - <span class="number">0</span>)*(y - <span class="number">0</span>));</span><br><span class="line"><span class="keyword">if</span> (max_len&lt;len)&#123;</span><br><span class="line">max_len = len;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (min_len&gt;len)&#123;</span><br><span class="line">min_len = len;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果脸的大小变化比较大，说明有切换图片之类的。</span></span><br><span class="line"><span class="keyword">if</span> ( ( (max_area - min_area)*<span class="number">1.0</span> / max_area) &gt; <span class="number">0.4</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"size changed"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//如果中心位置移动太大，就说明有切换图片</span></span><br><span class="line"><span class="keyword">if</span> ( ( (max_len - min_len) / <span class="built_in">sqrt</span>(max_area)) &gt; <span class="number">0.2</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"pos moved"</span> &lt;&lt; <span class="built_in">endl</span>; </span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> m = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">bool</span> h = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">bool</span> e = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (mouse)&#123;</span><br><span class="line">m = isMouseLive(ps); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (head)&#123;</span><br><span class="line">h = isHeadLive(ps); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (eye)&#123;</span><br><span class="line">e = isEyeLive(ps); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (relayType == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">bool</span> alive = m &amp;&amp; h &amp;&amp; e;</span><br><span class="line"><span class="keyword">return</span> alive; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">bool</span> alive = m || h || e;</span><br><span class="line"><span class="keyword">return</span> alive;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">是否活体</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isAlive</span><span class="params">(<span class="built_in">string</span> id,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;cv::Mat&gt; images,<span class="keyword">bool</span> mouse,<span class="keyword">bool</span> head,<span class="keyword">bool</span> eye,<span class="keyword">int</span> relayType)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">clock_t</span> start = clock();</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;dlib::full_object_detection&gt; ps = getFeaturePoints(images);</span><br><span class="line"><span class="keyword">bool</span> isa =  isAlive(id, ps, mouse, head, eye, relayType);</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"活体认证："</span> &lt;&lt; isa &lt;&lt; <span class="string">" "</span>&lt;&lt; (clock() - start) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> isa;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="申明"><a href="#申明" class="headerlink" title="申明"></a>申明</h2><p>本开发案例仅本人用于测试人脸识别库，测试验证在一些对质量要求不是太高的场景可用。</p><p>完整代码可联系<a href="mailto:502782757@qq.com" target="_blank" rel="noopener">502782757@qq.com</a></p>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人脸识别 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实现微信自动回复</title>
      <link href="/2018/02/22/python/2018-02-22-Python%E5%AE%9E%E7%8E%B0%E5%BE%AE%E4%BF%A1%E8%87%AA%E5%8A%A8%E5%9B%9E%E5%A4%8D/"/>
      <url>/2018/02/22/python/2018-02-22-Python%E5%AE%9E%E7%8E%B0%E5%BE%AE%E4%BF%A1%E8%87%AA%E5%8A%A8%E5%9B%9E%E5%A4%8D/</url>
      
        <content type="html"><![CDATA[<p>春节期间接收到无数新年问候，总想一一答复，不想群发，难免有遗漏，抽空学习了Python自动回复的itchat。以下是学习摘要</p><h3 id="入门尝试"><a href="#入门尝试" class="headerlink" title="入门尝试"></a>入门尝试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加载包</span></span><br><span class="line"><span class="keyword">import</span> itchat</span><br><span class="line"><span class="comment"># 登陆</span></span><br><span class="line">itchat.auto_login()</span><br><span class="line"><span class="comment"># 发送文本消息，发送目标是“文件传输助手”</span></span><br><span class="line">itchat.send(<span class="string">'Hello, filehelper'</span>, toUserName=<span class="string">'filehelper'</span>)</span><br></pre></td></tr></table></figure><h3 id="消息响应"><a href="#消息响应" class="headerlink" title="消息响应"></a>消息响应</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itchat</span><br><span class="line"><span class="comment"># 注册消息响应事件，消息类型为itchat.content.TEXT，即文本消息</span></span><br><span class="line"><span class="meta">@itchat.msg_register(itchat.content.TEXT)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">text_reply</span><span class="params">(msg)</span>:</span></span><br><span class="line">    <span class="comment"># 返回同样的文本消息</span></span><br><span class="line">    <span class="keyword">return</span> msg[<span class="string">'Text'</span>]</span><br><span class="line"></span><br><span class="line">itchat.auto_login()</span><br><span class="line"><span class="comment"># 绑定消息响应事件后，让itchat运行起来，监听消息</span></span><br><span class="line">itchat.run()</span><br></pre></td></tr></table></figure><h3 id="其他消息处理"><a href="#其他消息处理" class="headerlink" title="其他消息处理"></a>其他消息处理</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itchat</span><br><span class="line"><span class="comment"># import全部消息类型</span></span><br><span class="line"><span class="keyword">from</span> itchat.content <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理文本类消息</span></span><br><span class="line"><span class="comment"># 包括文本、位置、名片、通知、分享</span></span><br><span class="line"><span class="meta">@itchat.msg_register([TEXT, MAP, CARD, NOTE, SHARING])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">text_reply</span><span class="params">(msg)</span>:</span></span><br><span class="line">    <span class="comment"># 微信里，每个用户和群聊，都使用很长的ID来区分</span></span><br><span class="line">    <span class="comment"># msg['FromUserName']就是发送者的ID</span></span><br><span class="line">    <span class="comment"># 将消息的类型和文本内容返回给发送者</span></span><br><span class="line">    itchat.send(<span class="string">'%s: %s'</span> % (msg[<span class="string">'Type'</span>], msg[<span class="string">'Text'</span>]), msg[<span class="string">'FromUserName'</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理多媒体类消息</span></span><br><span class="line"><span class="comment"># 包括图片、录音、文件、视频</span></span><br><span class="line"><span class="meta">@itchat.msg_register([PICTURE, RECORDING, ATTACHMENT, VIDEO])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_files</span><span class="params">(msg)</span>:</span></span><br><span class="line">    <span class="comment"># msg['Text']是一个文件下载函数</span></span><br><span class="line">    <span class="comment"># 传入文件名，将文件下载下来</span></span><br><span class="line">    msg[<span class="string">'Text'</span>](msg[<span class="string">'FileName'</span>])</span><br><span class="line">    <span class="comment"># 把下载好的文件再发回给发送者</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'@%s@%s'</span> % (&#123;<span class="string">'Picture'</span>: <span class="string">'img'</span>, <span class="string">'Video'</span>: <span class="string">'vid'</span>&#125;.get(msg[<span class="string">'Type'</span>], <span class="string">'fil'</span>), msg[<span class="string">'FileName'</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理好友添加请求</span></span><br><span class="line"><span class="meta">@itchat.msg_register(FRIENDS)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_friend</span><span class="params">(msg)</span>:</span></span><br><span class="line">    <span class="comment"># 该操作会自动将新好友的消息录入，不需要重载通讯录</span></span><br><span class="line">    itchat.add_friend(**msg[<span class="string">'Text'</span>]) </span><br><span class="line">    <span class="comment"># 加完好友后，给好友打个招呼</span></span><br><span class="line">    itchat.send_msg(<span class="string">'Nice to meet you!'</span>, msg[<span class="string">'RecommendInfo'</span>][<span class="string">'UserName'</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理群聊消息</span></span><br><span class="line"><span class="meta">@itchat.msg_register(TEXT, isGroupChat=True)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">text_reply</span><span class="params">(msg)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> msg[<span class="string">'isAt'</span>]:</span><br><span class="line">        itchat.send(<span class="string">u'@%s\u2005I received: %s'</span> % (msg[<span class="string">'ActualNickName'</span>], msg[<span class="string">'Content'</span>]), msg[<span class="string">'FromUserName'</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在auto_login()里面提供一个True，即hotReload=True</span></span><br><span class="line"><span class="comment"># 即可保留登陆状态</span></span><br><span class="line"><span class="comment"># 即使程序关闭，一定时间内重新开启也可以不用重新扫码</span></span><br><span class="line">itchat.auto_login(<span class="literal">True</span>)</span><br><span class="line">itchat.run()</span><br></pre></td></tr></table></figure><h3 id="文本型消息转发"><a href="#文本型消息转发" class="headerlink" title="文本型消息转发"></a>文本型消息转发</h3><p>isGroupChat=True 表示群聊消息,默认False<br>[TEXT, SHARING] 表示文本型和分享内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自动回复文本等类别的群聊消息</span></span><br><span class="line"><span class="comment"># isGroupChat=True表示为群聊消息</span></span><br><span class="line"><span class="meta">@itchat.msg_register([TEXT, SHARING], isGroupChat=True)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">group_reply_text</span><span class="params">(msg)</span>:</span></span><br><span class="line">    <span class="comment"># 消息来自于哪个群聊</span></span><br><span class="line">    chatroom_id = msg[<span class="string">'FromUserName'</span>]</span><br><span class="line">    <span class="comment"># 发送者的昵称</span></span><br><span class="line">    username = msg[<span class="string">'ActualNickName'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 消息并不是来自于需要同步的群</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> chatroom_id <span class="keyword">in</span> chatroom_ids:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> msg[<span class="string">'Type'</span>] == TEXT:</span><br><span class="line">        content = msg[<span class="string">'Content'</span>]</span><br><span class="line">    <span class="keyword">elif</span> msg[<span class="string">'Type'</span>] == SHARING:</span><br><span class="line">        content = msg[<span class="string">'Text'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 根据消息类型转发至其他群</span></span><br><span class="line">    <span class="keyword">if</span> msg[<span class="string">'Type'</span>] == TEXT:</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> chatrooms:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> item[<span class="string">'UserName'</span>] == chatroom_id:</span><br><span class="line">                itchat.send(<span class="string">'%s\n%s'</span> % (username, msg[<span class="string">'Content'</span>]), item[<span class="string">'UserName'</span>])</span><br><span class="line">    <span class="keyword">elif</span> msg[<span class="string">'Type'</span>] == SHARING:</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> chatrooms:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> item[<span class="string">'UserName'</span>] == chatroom_id:</span><br><span class="line">                itchat.send(<span class="string">'%s\n%s\n%s'</span> % (username, msg[<span class="string">'Text'</span>], msg[<span class="string">'Url'</span>]), item[<span class="string">'UserName'</span>])</span><br></pre></td></tr></table></figure><h3 id="多媒体信息转发"><a href="#多媒体信息转发" class="headerlink" title="多媒体信息转发"></a>多媒体信息转发</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自动回复图片等类别的群聊消息</span></span><br><span class="line"><span class="comment"># isGroupChat=True表示为群聊消息          </span></span><br><span class="line"><span class="meta">@itchat.msg_register([PICTURE, ATTACHMENT, VIDEO], isGroupChat=True)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">group_reply_media</span><span class="params">(msg)</span>:</span></span><br><span class="line">    <span class="comment"># 消息来自于哪个群聊</span></span><br><span class="line">    chatroom_id = msg[<span class="string">'FromUserName'</span>]</span><br><span class="line">    <span class="comment"># 发送者的昵称</span></span><br><span class="line">    username = msg[<span class="string">'ActualNickName'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 消息并不是来自于需要同步的群</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> chatroom_id <span class="keyword">in</span> chatroom_ids:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 如果为gif图片则不转发</span></span><br><span class="line">    <span class="keyword">if</span> msg[<span class="string">'FileName'</span>][<span class="number">-4</span>:] == <span class="string">'.gif'</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 下载图片等文件</span></span><br><span class="line">    msg[<span class="string">'Text'</span>](msg[<span class="string">'FileName'</span>])</span><br><span class="line">    <span class="comment"># 转发至其他需要同步消息的群聊</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> chatrooms:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> item[<span class="string">'UserName'</span>] == chatroom_id:</span><br><span class="line">            itchat.send(<span class="string">'@%s@%s'</span> % (&#123;<span class="string">'Picture'</span>: <span class="string">'img'</span>, <span class="string">'Video'</span>: <span class="string">'vid'</span>&#125;.get(msg[<span class="string">'Type'</span>], <span class="string">'fil'</span>), msg[<span class="string">'FileName'</span>]), item[<span class="string">'UserName'</span>])</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 微信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于H5的人脸检测实践</title>
      <link href="/2018/02/22/others/2018-02-22-%E5%9F%BA%E4%BA%8EH5%E7%9A%84%E4%BA%BA%E8%84%B8%E6%A3%80%E6%B5%8B%E5%AE%9E%E8%B7%B5/"/>
      <url>/2018/02/22/others/2018-02-22-%E5%9F%BA%E4%BA%8EH5%E7%9A%84%E4%BA%BA%E8%84%B8%E6%A3%80%E6%B5%8B%E5%AE%9E%E8%B7%B5/</url>
      
        <content type="html"><![CDATA[<p>基于H5的人脸活体检测实验是我在2015年的一个”生存认证“相关项目的技术实验。<br><a href="https://jingyan.baidu.com/article/851fbc37a5bb083e1f15ab82.html" target="_blank" rel="noopener">载自我的百度经验</a></p><p><img src="https://zone-7.github.io/img/post-bg-face.png" alt="识别效果"></p>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> H5 </tag>
            
            <tag> javascript </tag>
            
            <tag> 人脸识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2010/01/01/hello-world/"/>
      <url>/2010/01/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
